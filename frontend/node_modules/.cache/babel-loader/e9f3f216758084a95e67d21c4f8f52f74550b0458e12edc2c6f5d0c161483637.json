{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Settings from './components/Settings';\nimport Sidebar from './components/Sidebar';\nimport UserHistory from './components/UserHistory';\nimport PlaceDetail from './components/PlaceDetail';\nimport UserPreferences from './components/UserPreferences';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sidebarOpen, setSidebarOpen] = useState(true); // Add sidebar state\n  const [appSettings, setAppSettings] = useState({\n    units: {\n      temperature: 'Celsius (°C)',\n      distance: 'Kilometers (km)'\n    },\n    activities: {\n      outdoorAdventure: true,\n      indoorRelaxation: true,\n      culturalExploration: false,\n      culinaryDelights: true\n    },\n    location: {\n      recommendationRadius: 'Local Area (5km)',\n      useCurrentLocation: true\n    }\n  });\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n\n  // Load settings from localStorage on app start\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('navix_app_settings');\n    if (savedSettings) {\n      try {\n        const parsedSettings = JSON.parse(savedSettings);\n        setAppSettings(parsedSettings);\n      } catch (error) {\n        console.error('Error loading app settings:', error);\n      }\n    }\n  }, []);\n\n  // Save settings to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('navix_app_settings', JSON.stringify(appSettings));\n  }, [appSettings]);\n  const updateAppSettings = newSettings => {\n    setAppSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-layout ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hamburger-menu\",\n        onClick: toggleSidebar,\n        \"aria-label\": \"Toggle sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        isOpen: sidebarOpen,\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: `main-content ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              appSettings: appSettings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(Settings, {\n              appSettings: appSettings,\n              updateAppSettings: updateAppSettings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user-preferences\",\n            element: /*#__PURE__*/_jsxDEV(UserPreferences, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/history\",\n            element: /*#__PURE__*/_jsxDEV(UserHistory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/place/:placeId\",\n            element: /*#__PURE__*/_jsxDEV(PlaceDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"67+4HVD9z17kgL4/yeDDSCFm/M4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Dashboard","Settings","Sidebar","UserHistory","PlaceDetail","UserPreferences","jsxDEV","_jsxDEV","App","_s","sidebarOpen","setSidebarOpen","appSettings","setAppSettings","units","temperature","distance","activities","outdoorAdventure","indoorRelaxation","culturalExploration","culinaryDelights","location","recommendationRadius","useCurrentLocation","toggleSidebar","savedSettings","localStorage","getItem","parsedSettings","JSON","parse","error","console","setItem","stringify","updateAppSettings","newSettings","prev","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","path","element","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Settings from './components/Settings';\nimport Sidebar from './components/Sidebar';\nimport UserHistory from './components/UserHistory';\nimport PlaceDetail from './components/PlaceDetail';\nimport UserPreferences from './components/UserPreferences';\nimport './App.css';\n\nfunction App() {\n    const [sidebarOpen, setSidebarOpen] = useState(true); // Add sidebar state\n    const [appSettings, setAppSettings] = useState({\n        units: {\n            temperature: 'Celsius (°C)',\n            distance: 'Kilometers (km)'\n        },\n        activities: {\n            outdoorAdventure: true,\n            indoorRelaxation: true,\n            culturalExploration: false,\n            culinaryDelights: true\n        },\n        location: {\n            recommendationRadius: 'Local Area (5km)',\n            useCurrentLocation: true\n        }\n    });\n\n    const toggleSidebar = () => {\n        setSidebarOpen(!sidebarOpen);\n    };\n\n    // Load settings from localStorage on app start\n    useEffect(() => {\n        const savedSettings = localStorage.getItem('navix_app_settings');\n        if (savedSettings) {\n            try {\n                const parsedSettings = JSON.parse(savedSettings);\n                setAppSettings(parsedSettings);\n            } catch (error) {\n                console.error('Error loading app settings:', error);\n            }\n        }\n    }, []);\n\n    // Save settings to localStorage whenever they change\n    useEffect(() => {\n        localStorage.setItem('navix_app_settings', JSON.stringify(appSettings));\n    }, [appSettings]);\n\n    const updateAppSettings = (newSettings) => {\n        setAppSettings(prev => ({\n            ...prev,\n            ...newSettings\n        }));\n    };\n\n    return (\n        <BrowserRouter>\n            <div className={`app-layout ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\n                {/* Hamburger Menu Button */}\n                <button \n                    className=\"hamburger-menu\" \n                    onClick={toggleSidebar}\n                    aria-label=\"Toggle sidebar\"\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </button>\n                \n                <Sidebar isOpen={sidebarOpen} toggleSidebar={toggleSidebar} />\n                <main className={`main-content ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\n                    <Routes>\n                        <Route path=\"/\" element={<Dashboard appSettings={appSettings} />} />\n                        <Route path=\"/settings\" element={<Settings appSettings={appSettings} updateAppSettings={updateAppSettings} />} />\n                        <Route path=\"/user-preferences\" element={<UserPreferences />} />\n                        <Route path=\"/history\" element={<UserHistory />} />\n                        <Route path=\"/place/:placeId\" element={<PlaceDetail />} />\n                    </Routes>\n                </main>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}