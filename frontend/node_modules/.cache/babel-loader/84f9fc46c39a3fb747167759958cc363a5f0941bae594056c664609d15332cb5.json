{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/ActivitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ActivitySelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivitySelector = ({\n  activities,\n  onActivitySelect,\n  userPreferences = {}\n}) => {\n  _s();\n  const [selectedActivities, setSelectedActivities] = useState(new Set());\n  const handleActivityToggle = activityName => {\n    const newSelected = new Set(selectedActivities);\n    if (newSelected.has(activityName)) {\n      newSelected.delete(activityName);\n    } else {\n      newSelected.add(activityName);\n    }\n    setSelectedActivities(newSelected);\n    onActivitySelect(Array.from(newSelected));\n  };\n  const getActivityIcon = activityName => {\n    const icons = {\n      'restaurant': '🍽️',\n      'cafe': '☕',\n      'park': '🌳',\n      'museum': '🏛️',\n      'shopping': '🛍️',\n      'cinema': '🎬',\n      'beach': '🏖️',\n      'gym': '💪',\n      'library': '📚',\n      'hospital': '🏥',\n      'pharmacy': '💊',\n      'bank': '🏦',\n      'gas_station': '⛽',\n      'tourist_attraction': '📸',\n      'amusement_park': '🎡',\n      'zoo': '🦁',\n      'aquarium': '🐠',\n      'spa': '🧘',\n      'night_club': '🎵',\n      'bar': '🍺'\n    };\n    return icons[activityName] || '📍';\n  };\n  const getPreferenceScore = activityName => {\n    return userPreferences[activityName] || 0;\n  };\n  const getPreferenceText = score => {\n    if (score >= 3) return 'Loved';\n    if (score >= 1) return 'Liked';\n    if (score <= -3) return 'Disliked';\n    if (score <= -1) return 'Not preferred';\n    return 'New';\n  };\n  const getPreferenceColor = score => {\n    if (score >= 3) return '#4CAF50';\n    if (score >= 1) return '#8BC34A';\n    if (score <= -3) return '#f44336';\n    if (score <= -1) return '#FF9800';\n    return '#9E9E9E';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"activity-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose Your Preferred Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"selector-subtitle\",\n      children: \"Select activities you're interested in today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-grid\",\n      children: activities.map((activity, index) => {\n        const isSelected = selectedActivities.has(activity.activity_name);\n        const preferenceScore = getPreferenceScore(activity.activity_name);\n        const preferenceText = getPreferenceText(preferenceScore);\n        const preferenceColor = getPreferenceColor(preferenceScore);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `activity-card ${isSelected ? 'selected' : ''}`,\n          onClick: () => handleActivityToggle(activity.activity_name),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-icon\",\n            children: getActivityIcon(activity.activity_name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"activity-name\",\n              children: activity.activity_name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"activity-count\",\n              children: [activity.place_count, \" places found\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preference-badge\",\n              style: {\n                backgroundColor: preferenceColor\n              },\n              children: preferenceText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-indicator\",\n            children: isSelected ? '✓' : '+'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), selectedActivities.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected \", selectedActivities.size, \" activities\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-list\",\n        children: Array.from(selectedActivities).map(activity => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"selected-tag\",\n          children: [getActivityIcon(activity), \" \", activity.replace(/_/g, ' ')]\n        }, activity, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ActivitySelector, \"lP7IMcXjxmtqpXD3TFPGmyqohrc=\");\n_c = ActivitySelector;\nexport default ActivitySelector;\nvar _c;\n$RefreshReg$(_c, \"ActivitySelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ActivitySelector","activities","onActivitySelect","userPreferences","_s","selectedActivities","setSelectedActivities","Set","handleActivityToggle","activityName","newSelected","has","delete","add","Array","from","getActivityIcon","icons","getPreferenceScore","getPreferenceText","score","getPreferenceColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","activity","index","isSelected","activity_name","preferenceScore","preferenceText","preferenceColor","onClick","replace","l","toUpperCase","place_count","style","backgroundColor","size","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/ActivitySelector.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ActivitySelector.css';\n\nconst ActivitySelector = ({ activities, onActivitySelect, userPreferences = {} }) => {\n    const [selectedActivities, setSelectedActivities] = useState(new Set());\n\n    const handleActivityToggle = (activityName) => {\n        const newSelected = new Set(selectedActivities);\n        \n        if (newSelected.has(activityName)) {\n            newSelected.delete(activityName);\n        } else {\n            newSelected.add(activityName);\n        }\n        \n        setSelectedActivities(newSelected);\n        onActivitySelect(Array.from(newSelected));\n    };\n\n    const getActivityIcon = (activityName) => {\n        const icons = {\n            'restaurant': '🍽️',\n            'cafe': '☕',\n            'park': '🌳',\n            'museum': '🏛️',\n            'shopping': '🛍️',\n            'cinema': '🎬',\n            'beach': '🏖️',\n            'gym': '💪',\n            'library': '📚',\n            'hospital': '🏥',\n            'pharmacy': '💊',\n            'bank': '🏦',\n            'gas_station': '⛽',\n            'tourist_attraction': '📸',\n            'amusement_park': '🎡',\n            'zoo': '🦁',\n            'aquarium': '🐠',\n            'spa': '🧘',\n            'night_club': '🎵',\n            'bar': '🍺'\n        };\n        return icons[activityName] || '📍';\n    };\n\n    const getPreferenceScore = (activityName) => {\n        return userPreferences[activityName] || 0;\n    };\n\n    const getPreferenceText = (score) => {\n        if (score >= 3) return 'Loved';\n        if (score >= 1) return 'Liked';\n        if (score <= -3) return 'Disliked';\n        if (score <= -1) return 'Not preferred';\n        return 'New';\n    };\n\n    const getPreferenceColor = (score) => {\n        if (score >= 3) return '#4CAF50';\n        if (score >= 1) return '#8BC34A';\n        if (score <= -3) return '#f44336';\n        if (score <= -1) return '#FF9800';\n        return '#9E9E9E';\n    };\n\n    return (\n        <div className=\"activity-selector\">\n            <h3>Choose Your Preferred Activities</h3>\n            <p className=\"selector-subtitle\">Select activities you're interested in today</p>\n            \n            <div className=\"activities-grid\">\n                {activities.map((activity, index) => {\n                    const isSelected = selectedActivities.has(activity.activity_name);\n                    const preferenceScore = getPreferenceScore(activity.activity_name);\n                    const preferenceText = getPreferenceText(preferenceScore);\n                    const preferenceColor = getPreferenceColor(preferenceScore);\n                    \n                    return (\n                        <div\n                            key={index}\n                            className={`activity-card ${isSelected ? 'selected' : ''}`}\n                            onClick={() => handleActivityToggle(activity.activity_name)}\n                        >\n                            <div className=\"activity-icon\">\n                                {getActivityIcon(activity.activity_name)}\n                            </div>\n                            \n                            <div className=\"activity-info\">\n                                <h4 className=\"activity-name\">\n                                    {activity.activity_name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                                </h4>\n                                \n                                <p className=\"activity-count\">\n                                    {activity.place_count} places found\n                                </p>\n                                \n                                <div \n                                    className=\"preference-badge\"\n                                    style={{ backgroundColor: preferenceColor }}\n                                >\n                                    {preferenceText}\n                                </div>\n                            </div>\n                            \n                            <div className=\"selection-indicator\">\n                                {isSelected ? '✓' : '+'}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n            \n            {selectedActivities.size > 0 && (\n                <div className=\"selection-summary\">\n                    <p>Selected {selectedActivities.size} activities</p>\n                    <div className=\"selected-list\">\n                        {Array.from(selectedActivities).map(activity => (\n                            <span key={activity} className=\"selected-tag\">\n                                {getActivityIcon(activity)} {activity.replace(/_/g, ' ')}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ActivitySelector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC,eAAe,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,CAAC,CAAC,CAAC;EAEvE,MAAMC,oBAAoB,GAAIC,YAAY,IAAK;IAC3C,MAAMC,WAAW,GAAG,IAAIH,GAAG,CAACF,kBAAkB,CAAC;IAE/C,IAAIK,WAAW,CAACC,GAAG,CAACF,YAAY,CAAC,EAAE;MAC/BC,WAAW,CAACE,MAAM,CAACH,YAAY,CAAC;IACpC,CAAC,MAAM;MACHC,WAAW,CAACG,GAAG,CAACJ,YAAY,CAAC;IACjC;IAEAH,qBAAqB,CAACI,WAAW,CAAC;IAClCR,gBAAgB,CAACY,KAAK,CAACC,IAAI,CAACL,WAAW,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMM,eAAe,GAAIP,YAAY,IAAK;IACtC,MAAMQ,KAAK,GAAG;MACV,YAAY,EAAE,KAAK;MACnB,MAAM,EAAE,GAAG;MACX,MAAM,EAAE,IAAI;MACZ,QAAQ,EAAE,KAAK;MACf,UAAU,EAAE,KAAK;MACjB,QAAQ,EAAE,IAAI;MACd,OAAO,EAAE,KAAK;MACd,KAAK,EAAE,IAAI;MACX,SAAS,EAAE,IAAI;MACf,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,IAAI;MAChB,MAAM,EAAE,IAAI;MACZ,aAAa,EAAE,GAAG;MAClB,oBAAoB,EAAE,IAAI;MAC1B,gBAAgB,EAAE,IAAI;MACtB,KAAK,EAAE,IAAI;MACX,UAAU,EAAE,IAAI;MAChB,KAAK,EAAE,IAAI;MACX,YAAY,EAAE,IAAI;MAClB,KAAK,EAAE;IACX,CAAC;IACD,OAAOA,KAAK,CAACR,YAAY,CAAC,IAAI,IAAI;EACtC,CAAC;EAED,MAAMS,kBAAkB,GAAIT,YAAY,IAAK;IACzC,OAAON,eAAe,CAACM,YAAY,CAAC,IAAI,CAAC;EAC7C,CAAC;EAED,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACjC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,OAAO;IAC9B,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,OAAO;IAC9B,IAAIA,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO,UAAU;IAClC,IAAIA,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO,eAAe;IACvC,OAAO,KAAK;EAChB,CAAC;EAED,MAAMC,kBAAkB,GAAID,KAAK,IAAK;IAClC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,SAAS;IAChC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,SAAS;IAChC,IAAIA,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO,SAAS;IACjC,IAAIA,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO,SAAS;IACjC,OAAO,SAAS;EACpB,CAAC;EAED,oBACIrB,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzC5B,OAAA;MAAGuB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEjF5B,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BtB,UAAU,CAAC2B,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACjC,MAAMC,UAAU,GAAG1B,kBAAkB,CAACM,GAAG,CAACkB,QAAQ,CAACG,aAAa,CAAC;QACjE,MAAMC,eAAe,GAAGf,kBAAkB,CAACW,QAAQ,CAACG,aAAa,CAAC;QAClE,MAAME,cAAc,GAAGf,iBAAiB,CAACc,eAAe,CAAC;QACzD,MAAME,eAAe,GAAGd,kBAAkB,CAACY,eAAe,CAAC;QAE3D,oBACIlC,OAAA;UAEIuB,SAAS,EAAE,iBAAiBS,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UAC3DK,OAAO,EAAEA,CAAA,KAAM5B,oBAAoB,CAACqB,QAAQ,CAACG,aAAa,CAAE;UAAAT,QAAA,gBAE5DxB,OAAA;YAAKuB,SAAS,EAAC,eAAe;YAAAC,QAAA,EACzBP,eAAe,CAACa,QAAQ,CAACG,aAAa;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eAEN5B,OAAA;YAAKuB,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BxB,OAAA;cAAIuB,SAAS,EAAC,eAAe;cAAAC,QAAA,EACxBM,QAAQ,CAACG,aAAa,CAACK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjF,CAAC,eAEL5B,OAAA;cAAGuB,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GACxBM,QAAQ,CAACW,WAAW,EAAC,eAC1B;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAEJ5B,OAAA;cACIuB,SAAS,EAAC,kBAAkB;cAC5BmB,KAAK,EAAE;gBAAEC,eAAe,EAAEP;cAAgB,CAAE;cAAAZ,QAAA,EAE3CW;YAAc;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEN5B,OAAA;YAAKuB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAC/BQ,UAAU,GAAG,GAAG,GAAG;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA,GA3BDG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BT,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELtB,kBAAkB,CAACsC,IAAI,GAAG,CAAC,iBACxB5C,OAAA;MAAKuB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BxB,OAAA;QAAAwB,QAAA,GAAG,WAAS,EAAClB,kBAAkB,CAACsC,IAAI,EAAC,aAAW;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpD5B,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBT,KAAK,CAACC,IAAI,CAACV,kBAAkB,CAAC,CAACuB,GAAG,CAACC,QAAQ,iBACxC9B,OAAA;UAAqBuB,SAAS,EAAC,cAAc;UAAAC,QAAA,GACxCP,eAAe,CAACa,QAAQ,CAAC,EAAC,GAAC,EAACA,QAAQ,CAACQ,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAAA,GADjDR,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CA3HIJ,gBAAgB;AAAA4C,EAAA,GAAhB5C,gBAAgB;AA6HtB,eAAeA,gBAAgB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}