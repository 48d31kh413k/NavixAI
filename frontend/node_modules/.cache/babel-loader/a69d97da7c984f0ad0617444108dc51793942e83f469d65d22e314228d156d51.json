{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertDistance, formatTemperature, formatDistance, convertSpeed, formatSpeed } from '../utils/UnitConverter';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  appSettings\n}) => {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$, _weatherData$main2, _weatherData$main3, _weatherData$uv;\n  const navigate = useNavigate();\n  const [weatherData, setWeatherData] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState('All Activities');\n  const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n\n  // Generate grey placeholder image data URL\n  const getGreyPlaceholder = (width = 400, height = 200) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    // Fill with grey background\n    ctx.fillStyle = '#f0f0f0';\n    ctx.fillRect(0, 0, width, height);\n\n    // Add centered text\n    ctx.fillStyle = '#999';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('No Image Available', width / 2, height / 2);\n    return canvas.toDataURL('image/png');\n  };\n\n  // Handle image load errors\n  const handleImageError = (event, fallbackSrc = null) => {\n    const img = event.target;\n    if (img.src !== getGreyPlaceholder() && !img.hasAttribute('data-fallback-attempted')) {\n      img.setAttribute('data-fallback-attempted', 'true');\n      img.src = fallbackSrc || getGreyPlaceholder();\n    }\n  };\n\n  // Handle preference updates to backend\n  const updateUserPreference = async (place, preference) => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/update_user_preference/', {\n        place_id: place.place_id,\n        place_name: place.name,\n        activity_type: place.activity_name || place.type,\n        preference: preference,\n        user_id: 'anonymous' // You can implement proper user authentication later\n      });\n      if (response.data.success) {\n        console.log(`Successfully ${preference}d place:`, place.name);\n        // Also update local preferences for immediate UI feedback\n        if (preference === 'like') {\n          userPreferences.likeActivity(place.activity_name || place.name);\n        } else {\n          userPreferences.dislikeActivity(place.activity_name || place.name);\n        }\n        // Force re-render to show updated preferences\n        setActivities([...activities]);\n      }\n    } catch (error) {\n      console.error(`Error updating ${preference} preference:`, error);\n      // Still update local preferences as fallback\n      if (preference === 'like') {\n        userPreferences.likeActivity(place.activity_name || place.name);\n      } else {\n        userPreferences.dislikeActivity(place.activity_name || place.name);\n      }\n    }\n  };\n  const activityCategories = ['All Activities', 'Outdoor Adventures', 'Relaxing Indoors', 'Cultural Experiences', 'Family Fun'];\n\n  // Transform backend activity data to show individual places with real names\n  const transformActivitiesFromBackend = backendActivities => {\n    const allPlaces = [];\n    let placeId = 1;\n    backendActivities.forEach(activity => {\n      if (activity.places && activity.places.length > 0) {\n        activity.places.forEach(place => {\n          allPlaces.push({\n            id: placeId++,\n            name: place.name || 'Unknown Place',\n            // Real place name\n            category: mapActivityToCategory(activity.activity_name),\n            description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n            image: place.photos && place.photos.length > 0 ? place.photos[0] : `https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=250&fit=crop`,\n            photos: place.photos || [],\n            // All photos array\n            rating: place.rating || 4.0,\n            reviews: place.user_ratings_total || 0,\n            duration: '1-3 hours',\n            difficulty: 'Easy',\n            activity_name: activity.activity_name,\n            place_count: 1,\n            places: [place],\n            // The actual place data\n            place_id: place.place_id,\n            vicinity: place.vicinity,\n            types: place.types || []\n          });\n        });\n      }\n    });\n    return allPlaces;\n  };\n\n  // Map activity names to our frontend categories\n  const mapActivityToCategory = activityName => {\n    if (!activityName) return 'All Activities';\n    const categoryMap = {\n      // Outdoor Adventures\n      'park': 'Outdoor Adventures',\n      'hiking': 'Outdoor Adventures',\n      'garden': 'Outdoor Adventures',\n      'beach': 'Outdoor Adventures',\n      'outdoor sports': 'Outdoor Adventures',\n      'sports': 'Outdoor Adventures',\n      'trail': 'Outdoor Adventures',\n      // Indoor Relaxation\n      'cafe': 'Relaxing Indoors',\n      'spa': 'Relaxing Indoors',\n      'library': 'Relaxing Indoors',\n      'bookstore': 'Relaxing Indoors',\n      'tea house': 'Relaxing Indoors',\n      'cinema': 'Relaxing Indoors',\n      // Cultural Exploration\n      'museum': 'Cultural Experiences',\n      'gallery': 'Cultural Experiences',\n      'theater': 'Cultural Experiences',\n      'historical': 'Cultural Experiences',\n      'cultural center': 'Cultural Experiences',\n      'art': 'Cultural Experiences',\n      // Culinary Delights\n      'restaurant': 'Family Fun',\n      'food market': 'Family Fun',\n      'bakery': 'Family Fun',\n      'wine bar': 'Family Fun',\n      'cooking': 'Family Fun',\n      'market': 'Family Fun',\n      // General\n      'shopping': 'Family Fun',\n      'mall': 'Family Fun'\n    };\n    const lowerActivity = activityName.toLowerCase();\n    for (const [key, category] of Object.entries(categoryMap)) {\n      if (lowerActivity.includes(key)) {\n        return category;\n      }\n    }\n    return 'All Activities';\n  };\n  useEffect(() => {\n    fetchWeatherAndActivities();\n  }, []);\n  const fetchWeatherAndActivities = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n        try {\n          console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n          console.log('With data:', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {}\n          });\n\n          // Fetch activities and weather data from the activity suggestion API\n          const activityResponse = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            // Get more activities for variety\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {} // Send user activity preferences\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('API Response:', activityResponse.data);\n          if (activityResponse.data && activityResponse.data.activities) {\n            console.log('Received activities from backend:', activityResponse.data.activities);\n            // Transform backend activities to match frontend format\n            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n            console.log('Transformed activities:', transformedActivities);\n\n            // Sort activities by user preferences\n            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n            setActivities(sortedActivities);\n\n            // Set weather data from the same response\n            if (activityResponse.data.weather) {\n              setWeatherData(activityResponse.data.weather);\n            }\n          } else {\n            console.log('No activities in backend response:', activityResponse.data);\n            setActivities([]);\n          }\n        } catch (error) {\n          console.error('Activity fetch error:', error);\n          // Fallback to weather-only API if activity API fails\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n          } catch (weatherError) {\n            console.error('Weather fetch error:', weatherError);\n            // Mock weather data for demo\n            setWeatherData({\n              name: 'New York City',\n              main: {\n                temp: 22,\n                feels_like: 24,\n                humidity: 65\n              },\n              weather: [{\n                description: 'sunny with clear skies',\n                main: 'Clear'\n              }],\n              wind: {\n                speed: 10\n              },\n              visibility: 10000,\n              uv: {\n                value: 6\n              }\n            });\n          }\n          console.log('No activities received from backend, setting empty array');\n          setActivities([]);\n        }\n        setLoading(false);\n      }, error => {\n        console.error('Geolocation error:', error);\n        // Set fallback weather data and empty activities\n        setWeatherData({\n          name: 'Current Location',\n          main: {\n            temp: 22,\n            feels_like: 24,\n            humidity: 65\n          },\n          weather: [{\n            description: 'sunny with clear skies',\n            main: 'Clear'\n          }],\n          wind: {\n            speed: 10\n          },\n          visibility: 10000\n        });\n        setActivities([]);\n        setLoading(false);\n      });\n    }\n  };\n  const getFilteredActivities = () => {\n    if (selectedCategory === 'All Activities') {\n      return activities;\n    }\n    return activities.filter(activity => activity.category === selectedCategory);\n  };\n  const getTemperature = temp => {\n    var _appSettings$units;\n    if (!(appSettings !== null && appSettings !== void 0 && (_appSettings$units = appSettings.units) !== null && _appSettings$units !== void 0 && _appSettings$units.temperature) || !temp) return Math.round(temp);\n    // Weather API returns Celsius, convert if needed\n    const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n    return convertedTemp;\n  };\n  const getTemperatureUnit = () => {\n    var _appSettings$units2;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units2 = appSettings.units) === null || _appSettings$units2 === void 0 ? void 0 : _appSettings$units2.temperature) === 'Fahrenheit (°F)' ? '°F' : '°C';\n  };\n  const getWindSpeed = () => {\n    var _weatherData$wind, _appSettings$units3;\n    if (!(weatherData !== null && weatherData !== void 0 && (_weatherData$wind = weatherData.wind) !== null && _weatherData$wind !== void 0 && _weatherData$wind.speed)) return 10;\n    // Weather API returns m/s, convert to appropriate unit\n    const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units3 = appSettings.units) === null || _appSettings$units3 === void 0 ? void 0 : _appSettings$units3.distance) === 'Miles (mi)') {\n      const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n      return Math.round(speedInMph);\n    }\n    return Math.round(speedInKmh);\n  };\n  const getSpeedUnit = () => {\n    var _appSettings$units4;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units4 = appSettings.units) === null || _appSettings$units4 === void 0 ? void 0 : _appSettings$units4.distance) === 'Miles (mi)' ? 'mph' : 'km/h';\n  };\n  const getVisibility = () => {\n    var _appSettings$units5;\n    if (!(weatherData !== null && weatherData !== void 0 && weatherData.visibility)) return 6;\n    const visibilityInKm = weatherData.visibility / 1000; // Convert meters to km\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units5 = appSettings.units) === null || _appSettings$units5 === void 0 ? void 0 : _appSettings$units5.distance) === 'Miles (mi)') {\n      return Math.round(convertDistance(visibilityInKm, 'Kilometers (km)', 'Miles (mi)'));\n    }\n    return Math.round(visibilityInKm);\n  };\n  const getDistanceUnit = () => {\n    var _appSettings$units6;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units6 = appSettings.units) === null || _appSettings$units6 === void 0 ? void 0 : _appSettings$units6.distance) === 'Miles (mi)' ? 'mi' : 'km';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your personalized recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search activities or places...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"search-btn\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather & Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp-value\",\n            children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) || 22), getTemperatureUnit()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-description\",\n            children: (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description) || 'Sunny with clear skies'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [(weatherData === null || weatherData === void 0 ? void 0 : weatherData.name) || 'Current Location', \" \\u2022 Today, \", new Date().toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Feels like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.feels_like) || 24), getTemperatureUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main3 = weatherData.main) === null || _weatherData$main3 === void 0 ? void 0 : _weatherData$main3.humidity) || 65, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getWindSpeed(), \" \", getSpeedUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$uv = weatherData.uv) === null || _weatherData$uv === void 0 ? void 0 : _weatherData$uv.value) || 6, \" (High)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-preferences-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preferences-text\",\n            children: userPreferences.getPreferredActivities().length > 0 ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned` : \"🔍 Building your preferences...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filter\",\n        children: activityCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-btn ${selectedCategory === category ? 'active' : ''}`,\n          onClick: () => setSelectedCategory(category),\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activities-grid\",\n        children: getFilteredActivities().map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: activity.image || getGreyPlaceholder(),\n              alt: activity.name,\n              onError: e => handleImageError(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-category\",\n              children: activity.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 33\n            }, this), userPreferences.getActivityScore(activity.activity_name || activity.name) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preference-indicator\",\n              children: \"\\u2764\\uFE0F Liked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"activity-description\",\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stars\",\n                  children: ['★'.repeat(Math.floor(activity.rating)), '☆'.repeat(5 - Math.floor(activity.rating))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating-text\",\n                  children: [activity.rating, \" (\", activity.reviews, \" reviews)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: activity.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty\",\n                  children: activity.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-preferences\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"like-btn\",\n                  onClick: () => updateUserPreference(activity, 'like'),\n                  title: `Like ${activity.name || activity.activity_name}`,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"dislike-btn\",\n                  onClick: () => updateUserPreference(activity, 'dislike'),\n                  title: `Dislike ${activity.name || activity.activity_name}`,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-details-btn\",\n                onClick: () => {\n                  // Store current activities in localStorage for place detail access\n                  localStorage.setItem('recent_activities', JSON.stringify(activities));\n\n                  // Navigate with the actual place data\n                  const place = activity.places[0]; // This is the actual place\n                  navigate(`/place/${activity.place_id || activity.id}`, {\n                    state: {\n                      place: place,\n                      activityName: activity.activity_name\n                    }\n                  });\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-cta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Refine Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your preferences to get even better activity suggestions tailored just for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"goto-preferences-btn\",\n        children: \"Go to Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"x00sWPZLeJongcdUB8ro8a3aTNk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","userPreferences","convertTemperature","convertDistance","formatTemperature","formatDistance","convertSpeed","formatSpeed","jsxDEV","_jsxDEV","Dashboard","appSettings","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","_weatherData$main2","_weatherData$main3","_weatherData$uv","navigate","weatherData","setWeatherData","activities","setActivities","loading","setLoading","currentLocation","setCurrentLocation","selectedCategory","setSelectedCategory","userPreferenceState","setUserPreferenceState","getGreyPlaceholder","width","height","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","font","textAlign","textBaseline","fillText","toDataURL","handleImageError","event","fallbackSrc","img","target","src","hasAttribute","setAttribute","updateUserPreference","place","preference","response","post","place_id","place_name","name","activity_type","activity_name","type","user_id","data","success","console","log","likeActivity","dislikeActivity","error","activityCategories","transformActivitiesFromBackend","backendActivities","allPlaces","placeId","forEach","activity","places","length","push","id","category","mapActivityToCategory","description","vicinity","image","photos","rating","reviews","user_ratings_total","duration","difficulty","place_count","types","activityName","categoryMap","lowerActivity","toLowerCase","key","Object","entries","includes","fetchWeatherAndActivities","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","max_activities","activityResponse","headers","transformedActivities","sortedActivities","sortActivitiesByPreference","weather","weatherResponse","weatherError","main","temp","feels_like","humidity","wind","speed","visibility","uv","value","getFilteredActivities","filter","getTemperature","_appSettings$units","units","temperature","Math","round","convertedTemp","getTemperatureUnit","_appSettings$units2","getWindSpeed","_weatherData$wind","_appSettings$units3","speedInKmh","distance","speedInMph","getSpeedUnit","_appSettings$units4","getVisibility","_appSettings$units5","visibilityInKm","getDistanceUnit","_appSettings$units6","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","Date","toLocaleDateString","weekday","month","day","getPreferredActivities","map","onClick","alt","onError","e","getActivityScore","repeat","floor","title","localStorage","setItem","JSON","stringify","state","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertDistance, formatTemperature, formatDistance, convertSpeed, formatSpeed } from '../utils/UnitConverter';\nimport './Dashboard.css';\n\nconst Dashboard = ({ appSettings }) => {\n    const navigate = useNavigate();\n    const [weatherData, setWeatherData] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [selectedCategory, setSelectedCategory] = useState('All Activities');\n    const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n\n    // Generate grey placeholder image data URL\n    const getGreyPlaceholder = (width = 400, height = 200) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        \n        // Fill with grey background\n        ctx.fillStyle = '#f0f0f0';\n        ctx.fillRect(0, 0, width, height);\n        \n        // Add centered text\n        ctx.fillStyle = '#999';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('No Image Available', width / 2, height / 2);\n        \n        return canvas.toDataURL('image/png');\n    };\n\n    // Handle image load errors\n    const handleImageError = (event, fallbackSrc = null) => {\n        const img = event.target;\n        if (img.src !== getGreyPlaceholder() && !img.hasAttribute('data-fallback-attempted')) {\n            img.setAttribute('data-fallback-attempted', 'true');\n            img.src = fallbackSrc || getGreyPlaceholder();\n        }\n    };\n\n    // Handle preference updates to backend\n    const updateUserPreference = async (place, preference) => {\n        try {\n            const response = await axios.post('http://localhost:8000/api/update_user_preference/', {\n                place_id: place.place_id,\n                place_name: place.name,\n                activity_type: place.activity_name || place.type,\n                preference: preference,\n                user_id: 'anonymous' // You can implement proper user authentication later\n            });\n            \n            if (response.data.success) {\n                console.log(`Successfully ${preference}d place:`, place.name);\n                // Also update local preferences for immediate UI feedback\n                if (preference === 'like') {\n                    userPreferences.likeActivity(place.activity_name || place.name);\n                } else {\n                    userPreferences.dislikeActivity(place.activity_name || place.name);\n                }\n                // Force re-render to show updated preferences\n                setActivities([...activities]);\n            }\n        } catch (error) {\n            console.error(`Error updating ${preference} preference:`, error);\n            // Still update local preferences as fallback\n            if (preference === 'like') {\n                userPreferences.likeActivity(place.activity_name || place.name);\n            } else {\n                userPreferences.dislikeActivity(place.activity_name || place.name);\n            }\n        }\n    };\n\n    const activityCategories = [\n        'All Activities',\n        'Outdoor Adventures', \n        'Relaxing Indoors',\n        'Cultural Experiences',\n        'Family Fun'\n    ];\n\n    // Transform backend activity data to show individual places with real names\n    const transformActivitiesFromBackend = (backendActivities) => {\n        const allPlaces = [];\n        let placeId = 1;\n        \n        backendActivities.forEach((activity) => {\n            if (activity.places && activity.places.length > 0) {\n                activity.places.forEach((place) => {\n                    allPlaces.push({\n                        id: placeId++,\n                        name: place.name || 'Unknown Place', // Real place name\n                        category: mapActivityToCategory(activity.activity_name),\n                        description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n                        image: place.photos && place.photos.length > 0 \n                            ? place.photos[0] \n                            : `https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=250&fit=crop`,\n                        photos: place.photos || [], // All photos array\n                        rating: place.rating || 4.0,\n                        reviews: place.user_ratings_total || 0,\n                        duration: '1-3 hours',\n                        difficulty: 'Easy',\n                        activity_name: activity.activity_name,\n                        place_count: 1,\n                        places: [place], // The actual place data\n                        place_id: place.place_id,\n                        vicinity: place.vicinity,\n                        types: place.types || []\n                    });\n                });\n            }\n        });\n        \n        return allPlaces;\n    };\n\n    // Map activity names to our frontend categories\n    const mapActivityToCategory = (activityName) => {\n        if (!activityName) return 'All Activities';\n        \n        const categoryMap = {\n            // Outdoor Adventures\n            'park': 'Outdoor Adventures',\n            'hiking': 'Outdoor Adventures',\n            'garden': 'Outdoor Adventures',\n            'beach': 'Outdoor Adventures',\n            'outdoor sports': 'Outdoor Adventures',\n            'sports': 'Outdoor Adventures',\n            'trail': 'Outdoor Adventures',\n            \n            // Indoor Relaxation\n            'cafe': 'Relaxing Indoors',\n            'spa': 'Relaxing Indoors',\n            'library': 'Relaxing Indoors',\n            'bookstore': 'Relaxing Indoors',\n            'tea house': 'Relaxing Indoors',\n            'cinema': 'Relaxing Indoors',\n            \n            // Cultural Exploration\n            'museum': 'Cultural Experiences',\n            'gallery': 'Cultural Experiences',\n            'theater': 'Cultural Experiences',\n            'historical': 'Cultural Experiences',\n            'cultural center': 'Cultural Experiences',\n            'art': 'Cultural Experiences',\n            \n            // Culinary Delights\n            'restaurant': 'Family Fun',\n            'food market': 'Family Fun',\n            'bakery': 'Family Fun',\n            'wine bar': 'Family Fun',\n            'cooking': 'Family Fun',\n            'market': 'Family Fun',\n            \n            // General\n            'shopping': 'Family Fun',\n            'mall': 'Family Fun'\n        };\n        \n        const lowerActivity = activityName.toLowerCase();\n        for (const [key, category] of Object.entries(categoryMap)) {\n            if (lowerActivity.includes(key)) {\n                return category;\n            }\n        }\n        \n        return 'All Activities';\n    };\n\n    useEffect(() => {\n        fetchWeatherAndActivities();\n    }, []);\n\n    const fetchWeatherAndActivities = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setCurrentLocation({ lat: latitude, lng: longitude });\n                    \n                    try {\n                        console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n                        console.log('With data:', { \n                            latitude, \n                            longitude, \n                            max_activities: 8,\n                            activities: appSettings?.activities || {}\n                        });\n                        \n                        // Fetch activities and weather data from the activity suggestion API\n                        const activityResponse = await axios.post(\n                            'http://127.0.0.1:8000/api/activity-suggestion/',\n                            { \n                                latitude, \n                                longitude,\n                                max_activities: 8,  // Get more activities for variety\n                                activities: appSettings?.activities || {}  // Send user activity preferences\n                            },\n                            { \n                                headers: { 'Content-Type': 'application/json' } \n                            }\n                        );\n                        \n                        console.log('API Response:', activityResponse.data);\n                        \n                        if (activityResponse.data && activityResponse.data.activities) {\n                            console.log('Received activities from backend:', activityResponse.data.activities);\n                            // Transform backend activities to match frontend format\n                            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n                            console.log('Transformed activities:', transformedActivities);\n                            \n                            // Sort activities by user preferences\n                            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n                            setActivities(sortedActivities);\n                            \n                            // Set weather data from the same response\n                            if (activityResponse.data.weather) {\n                                setWeatherData(activityResponse.data.weather);\n                            }\n                        } else {\n                            console.log('No activities in backend response:', activityResponse.data);\n                            setActivities([]);\n                        }\n                    } catch (error) {\n                        console.error('Activity fetch error:', error);\n                        // Fallback to weather-only API if activity API fails\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/',\n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                        } catch (weatherError) {\n                            console.error('Weather fetch error:', weatherError);\n                            // Mock weather data for demo\n                            setWeatherData({\n                                name: 'New York City',\n                                main: { temp: 22, feels_like: 24, humidity: 65 },\n                                weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                                wind: { speed: 10 },\n                                visibility: 10000,\n                                uv: { value: 6 }\n                            });\n                        }\n                        \n                        console.log('No activities received from backend, setting empty array');\n                        setActivities([]);\n                    }\n                    setLoading(false);\n                },\n                (error) => {\n                    console.error('Geolocation error:', error);\n                    // Set fallback weather data and empty activities\n                    setWeatherData({\n                        name: 'Current Location',\n                        main: { temp: 22, feels_like: 24, humidity: 65 },\n                        weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                        wind: { speed: 10 },\n                        visibility: 10000\n                    });\n                    setActivities([]);\n                    setLoading(false);\n                }\n            );\n        }\n    };\n\n    const getFilteredActivities = () => {\n        if (selectedCategory === 'All Activities') {\n            return activities;\n        }\n        return activities.filter(activity => activity.category === selectedCategory);\n    };\n\n    const getTemperature = (temp) => {\n        if (!appSettings?.units?.temperature || !temp) return Math.round(temp);\n        // Weather API returns Celsius, convert if needed\n        const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n        return convertedTemp;\n    };\n\n    const getTemperatureUnit = () => {\n        return appSettings?.units?.temperature === 'Fahrenheit (°F)' ? '°F' : '°C';\n    };\n\n    const getWindSpeed = () => {\n        if (!weatherData?.wind?.speed) return 10;\n        // Weather API returns m/s, convert to appropriate unit\n        const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n            return Math.round(speedInMph);\n        }\n        return Math.round(speedInKmh);\n    };\n\n    const getSpeedUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mph' : 'km/h';\n    };\n\n    const getVisibility = () => {\n        if (!weatherData?.visibility) return 6;\n        const visibilityInKm = weatherData.visibility / 1000; // Convert meters to km\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            return Math.round(convertDistance(visibilityInKm, 'Kilometers (km)', 'Miles (mi)'));\n        }\n        return Math.round(visibilityInKm);\n    };\n\n    const getDistanceUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mi' : 'km';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading your personalized recommendations...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"dashboard\">\n            {/* Top Header */}\n            <div className=\"dashboard-header\">\n                <div className=\"header-content\">\n                    <h1>Dashboard</h1>\n                    <div className=\"header-actions\">\n                        <div className=\"search-bar\">\n                            <input type=\"text\" placeholder=\"Search activities or places...\" />\n                            <button className=\"search-btn\">🔍</button>\n                        </div>\n                        <div className=\"user-profile\">\n                            <div className=\"user-avatar\">👤</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Weather Section */}\n            <div className=\"weather-section\">\n                <h2>Current Weather & Conditions</h2>\n                <div className=\"weather-main\">\n                    <div className=\"temperature\">\n                        <span className=\"temp-value\">{getTemperature(weatherData?.main?.temp || 22)}{getTemperatureUnit()}</span>\n                        <p className=\"weather-description\">\n                            {weatherData?.weather?.[0]?.description || 'Sunny with clear skies'}\n                        </p>\n                        <p className=\"location\">{weatherData?.name || 'Current Location'} • Today, {new Date().toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</p>\n                    </div>\n                    \n                    <div className=\"weather-details\">\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Feels like</span>\n                            <span className=\"stat-value\">{getTemperature(weatherData?.main?.feels_like || 24)}{getTemperatureUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Humidity</span>\n                            <span className=\"stat-value\">{weatherData?.main?.humidity || 65}%</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Wind</span>\n                            <span className=\"stat-value\">{getWindSpeed()} {getSpeedUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">UV Index</span>\n                            <span className=\"stat-value\">{weatherData?.uv?.value || 6} (High)</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Activities Section */}\n            <div className=\"activities-section\">\n                <div className=\"section-header\">\n                    <h2>Recommended Activities</h2>\n                    <div className=\"user-preferences-summary\">\n                        <span className=\"preferences-text\">\n                            {userPreferences.getPreferredActivities().length > 0 \n                                ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned`\n                                : \"🔍 Building your preferences...\"\n                            }\n                        </span>\n                    </div>\n                </div>\n                \n                {/* Category Filter */}\n                <div className=\"category-filter\">\n                    {activityCategories.map(category => (\n                        <button\n                            key={category}\n                            className={`category-btn ${selectedCategory === category ? 'active' : ''}`}\n                            onClick={() => setSelectedCategory(category)}\n                        >\n                            {category}\n                        </button>\n                    ))}\n                </div>\n\n                {/* Activity Cards Grid */}\n                <div className=\"activities-grid\">\n                    {getFilteredActivities().map(activity => (\n                        <div key={activity.id} className=\"activity-card\">\n                            <div className=\"activity-image\">\n                                <img \n                                    src={activity.image || getGreyPlaceholder()} \n                                    alt={activity.name}\n                                    onError={(e) => handleImageError(e)}\n                                />\n                                <div className=\"activity-category\">{activity.category}</div>\n                                {userPreferences.getActivityScore(activity.activity_name || activity.name) > 0 && (\n                                    <div className=\"preference-indicator\">❤️ Liked</div>\n                                )}\n                            </div>\n                            <div className=\"activity-content\">\n                                <h3>{activity.name}</h3>\n                                <p className=\"activity-description\">{activity.description}</p>\n                                <div className=\"activity-meta\">\n                                    <div className=\"rating\">\n                                        <span className=\"stars\">\n                                            {'★'.repeat(Math.floor(activity.rating))}\n                                            {'☆'.repeat(5 - Math.floor(activity.rating))}\n                                        </span>\n                                        <span className=\"rating-text\">\n                                            {activity.rating} ({activity.reviews} reviews)\n                                        </span>\n                                    </div>\n                                    <div className=\"activity-info\">\n                                        <span className=\"duration\">{activity.duration}</span>\n                                        <span className=\"difficulty\">{activity.difficulty}</span>\n                                    </div>\n                                </div>\n                                <div className=\"activity-actions\">\n                                    <div className=\"activity-preferences\">\n                                        <button \n                                            className=\"like-btn\"\n                                            onClick={() => updateUserPreference(activity, 'like')}\n                                            title={`Like ${activity.name || activity.activity_name}`}\n                                        >\n                                            👍\n                                        </button>\n                                        <button \n                                            className=\"dislike-btn\"\n                                            onClick={() => updateUserPreference(activity, 'dislike')}\n                                            title={`Dislike ${activity.name || activity.activity_name}`}\n                                        >\n                                            👎\n                                        </button>\n                                    </div>\n                                    <button \n                                        className=\"view-details-btn\"\n                                        onClick={() => {\n                                            // Store current activities in localStorage for place detail access\n                                            localStorage.setItem('recent_activities', JSON.stringify(activities));\n                                            \n                                            // Navigate with the actual place data\n                                            const place = activity.places[0]; // This is the actual place\n                                            navigate(`/place/${activity.place_id || activity.id}`, {\n                                                state: {\n                                                    place: place,\n                                                    activityName: activity.activity_name\n                                                }\n                                            });\n                                        }}\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Preferences Reminder */}\n            <div className=\"preferences-cta\">\n                <h3>Refine Your Recommendations</h3>\n                <p>Update your preferences to get even better activity suggestions tailored just for you.</p>\n                <button className=\"goto-preferences-btn\">Go to Preferences</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,WAAW,QAAQ,wBAAwB;AAC1I,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,eAAA;EACnC,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,gBAAgB,CAAC;EAC1E,MAAM,CAACiC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAMmC,kBAAkB,GAAGA,CAACC,KAAK,GAAG,GAAG,EAAEC,MAAM,GAAG,GAAG,KAAK;IACtD,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACF,KAAK,GAAGA,KAAK;IACpBE,MAAM,CAACD,MAAM,GAAGA,MAAM;IACtB,MAAMI,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAD,GAAG,CAACE,SAAS,GAAG,SAAS;IACzBF,GAAG,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAER,KAAK,EAAEC,MAAM,CAAC;;IAEjC;IACAI,GAAG,CAACE,SAAS,GAAG,MAAM;IACtBF,GAAG,CAACI,IAAI,GAAG,YAAY;IACvBJ,GAAG,CAACK,SAAS,GAAG,QAAQ;IACxBL,GAAG,CAACM,YAAY,GAAG,QAAQ;IAC3BN,GAAG,CAACO,QAAQ,CAAC,oBAAoB,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC;IAEzD,OAAOC,MAAM,CAACW,SAAS,CAAC,WAAW,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,WAAW,GAAG,IAAI,KAAK;IACpD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM;IACxB,IAAID,GAAG,CAACE,GAAG,KAAKpB,kBAAkB,CAAC,CAAC,IAAI,CAACkB,GAAG,CAACG,YAAY,CAAC,yBAAyB,CAAC,EAAE;MAClFH,GAAG,CAACI,YAAY,CAAC,yBAAyB,EAAE,MAAM,CAAC;MACnDJ,GAAG,CAACE,GAAG,GAAGH,WAAW,IAAIjB,kBAAkB,CAAC,CAAC;IACjD;EACJ,CAAC;;EAED;EACA,MAAMuB,oBAAoB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,UAAU,KAAK;IACtD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM3D,KAAK,CAAC4D,IAAI,CAAC,mDAAmD,EAAE;QACnFC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;QACxBC,UAAU,EAAEL,KAAK,CAACM,IAAI;QACtBC,aAAa,EAAEP,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACS,IAAI;QAChDR,UAAU,EAAEA,UAAU;QACtBS,OAAO,EAAE,WAAW,CAAC;MACzB,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACS,IAAI,CAACC,OAAO,EAAE;QACvBC,OAAO,CAACC,GAAG,CAAC,gBAAgBb,UAAU,UAAU,EAAED,KAAK,CAACM,IAAI,CAAC;QAC7D;QACA,IAAIL,UAAU,KAAK,MAAM,EAAE;UACvBxD,eAAe,CAACsE,YAAY,CAACf,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACM,IAAI,CAAC;QACnE,CAAC,MAAM;UACH7D,eAAe,CAACuE,eAAe,CAAChB,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACM,IAAI,CAAC;QACtE;QACA;QACAvC,aAAa,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC;MAClC;IACJ,CAAC,CAAC,OAAOmD,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,kBAAkBhB,UAAU,cAAc,EAAEgB,KAAK,CAAC;MAChE;MACA,IAAIhB,UAAU,KAAK,MAAM,EAAE;QACvBxD,eAAe,CAACsE,YAAY,CAACf,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACM,IAAI,CAAC;MACnE,CAAC,MAAM;QACH7D,eAAe,CAACuE,eAAe,CAAChB,KAAK,CAACQ,aAAa,IAAIR,KAAK,CAACM,IAAI,CAAC;MACtE;IACJ;EACJ,CAAC;EAED,MAAMY,kBAAkB,GAAG,CACvB,gBAAgB,EAChB,oBAAoB,EACpB,kBAAkB,EAClB,sBAAsB,EACtB,YAAY,CACf;;EAED;EACA,MAAMC,8BAA8B,GAAIC,iBAAiB,IAAK;IAC1D,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,OAAO,GAAG,CAAC;IAEfF,iBAAiB,CAACG,OAAO,CAAEC,QAAQ,IAAK;MACpC,IAAIA,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;QAC/CF,QAAQ,CAACC,MAAM,CAACF,OAAO,CAAEvB,KAAK,IAAK;UAC/BqB,SAAS,CAACM,IAAI,CAAC;YACXC,EAAE,EAAEN,OAAO,EAAE;YACbhB,IAAI,EAAEN,KAAK,CAACM,IAAI,IAAI,eAAe;YAAE;YACrCuB,QAAQ,EAAEC,qBAAqB,CAACN,QAAQ,CAAChB,aAAa,CAAC;YACvDuB,WAAW,EAAE,GAAG/B,KAAK,CAACM,IAAI,MAAMN,KAAK,CAACgC,QAAQ,IAAI,yBAAyB,EAAE;YAC7EC,KAAK,EAAEjC,KAAK,CAACkC,MAAM,IAAIlC,KAAK,CAACkC,MAAM,CAACR,MAAM,GAAG,CAAC,GACxC1B,KAAK,CAACkC,MAAM,CAAC,CAAC,CAAC,GACf,mFAAmF;YACzFA,MAAM,EAAElC,KAAK,CAACkC,MAAM,IAAI,EAAE;YAAE;YAC5BC,MAAM,EAAEnC,KAAK,CAACmC,MAAM,IAAI,GAAG;YAC3BC,OAAO,EAAEpC,KAAK,CAACqC,kBAAkB,IAAI,CAAC;YACtCC,QAAQ,EAAE,WAAW;YACrBC,UAAU,EAAE,MAAM;YAClB/B,aAAa,EAAEgB,QAAQ,CAAChB,aAAa;YACrCgC,WAAW,EAAE,CAAC;YACdf,MAAM,EAAE,CAACzB,KAAK,CAAC;YAAE;YACjBI,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;YACxB4B,QAAQ,EAAEhC,KAAK,CAACgC,QAAQ;YACxBS,KAAK,EAAEzC,KAAK,CAACyC,KAAK,IAAI;UAC1B,CAAC,CAAC;QACN,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEF,OAAOpB,SAAS;EACpB,CAAC;;EAED;EACA,MAAMS,qBAAqB,GAAIY,YAAY,IAAK;IAC5C,IAAI,CAACA,YAAY,EAAE,OAAO,gBAAgB;IAE1C,MAAMC,WAAW,GAAG;MAChB;MACA,MAAM,EAAE,oBAAoB;MAC5B,QAAQ,EAAE,oBAAoB;MAC9B,QAAQ,EAAE,oBAAoB;MAC9B,OAAO,EAAE,oBAAoB;MAC7B,gBAAgB,EAAE,oBAAoB;MACtC,QAAQ,EAAE,oBAAoB;MAC9B,OAAO,EAAE,oBAAoB;MAE7B;MACA,MAAM,EAAE,kBAAkB;MAC1B,KAAK,EAAE,kBAAkB;MACzB,SAAS,EAAE,kBAAkB;MAC7B,WAAW,EAAE,kBAAkB;MAC/B,WAAW,EAAE,kBAAkB;MAC/B,QAAQ,EAAE,kBAAkB;MAE5B;MACA,QAAQ,EAAE,sBAAsB;MAChC,SAAS,EAAE,sBAAsB;MACjC,SAAS,EAAE,sBAAsB;MACjC,YAAY,EAAE,sBAAsB;MACpC,iBAAiB,EAAE,sBAAsB;MACzC,KAAK,EAAE,sBAAsB;MAE7B;MACA,YAAY,EAAE,YAAY;MAC1B,aAAa,EAAE,YAAY;MAC3B,QAAQ,EAAE,YAAY;MACtB,UAAU,EAAE,YAAY;MACxB,SAAS,EAAE,YAAY;MACvB,QAAQ,EAAE,YAAY;MAEtB;MACA,UAAU,EAAE,YAAY;MACxB,MAAM,EAAE;IACZ,CAAC;IAED,MAAMC,aAAa,GAAGF,YAAY,CAACG,WAAW,CAAC,CAAC;IAChD,KAAK,MAAM,CAACC,GAAG,EAAEjB,QAAQ,CAAC,IAAIkB,MAAM,CAACC,OAAO,CAACL,WAAW,CAAC,EAAE;MACvD,IAAIC,aAAa,CAACK,QAAQ,CAACH,GAAG,CAAC,EAAE;QAC7B,OAAOjB,QAAQ;MACnB;IACJ;IAEA,OAAO,gBAAgB;EAC3B,CAAC;EAEDvF,SAAS,CAAC,MAAM;IACZ4G,yBAAyB,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpC,MAAOC,QAAQ,IAAK;QAChB,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CtF,kBAAkB,CAAC;UAAEuF,GAAG,EAAEH,QAAQ;UAAEI,GAAG,EAAEH;QAAU,CAAC,CAAC;QAErD,IAAI;UACA3C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,gDAAgD,CAAC;UACpFD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;YACtByC,QAAQ;YACRC,SAAS;YACTI,cAAc,EAAE,CAAC;YACjB9F,UAAU,EAAE,CAAAX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,UAAU,KAAI,CAAC;UAC5C,CAAC,CAAC;;UAEF;UACA,MAAM+F,gBAAgB,GAAG,MAAMtH,KAAK,CAAC4D,IAAI,CACrC,gDAAgD,EAChD;YACIoD,QAAQ;YACRC,SAAS;YACTI,cAAc,EAAE,CAAC;YAAG;YACpB9F,UAAU,EAAE,CAAAX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,UAAU,KAAI,CAAC,CAAC,CAAE;UAC/C,CAAC,EACD;YACIgG,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB;UAClD,CACJ,CAAC;UAEDjD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE+C,gBAAgB,CAAClD,IAAI,CAAC;UAEnD,IAAIkD,gBAAgB,CAAClD,IAAI,IAAIkD,gBAAgB,CAAClD,IAAI,CAAC7C,UAAU,EAAE;YAC3D+C,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE+C,gBAAgB,CAAClD,IAAI,CAAC7C,UAAU,CAAC;YAClF;YACA,MAAMiG,qBAAqB,GAAG5C,8BAA8B,CAAC0C,gBAAgB,CAAClD,IAAI,CAAC7C,UAAU,CAAC;YAC9F+C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEiD,qBAAqB,CAAC;;YAE7D;YACA,MAAMC,gBAAgB,GAAGvH,eAAe,CAACwH,0BAA0B,CAACF,qBAAqB,CAAC;YAC1FhG,aAAa,CAACiG,gBAAgB,CAAC;;YAE/B;YACA,IAAIH,gBAAgB,CAAClD,IAAI,CAACuD,OAAO,EAAE;cAC/BrG,cAAc,CAACgG,gBAAgB,CAAClD,IAAI,CAACuD,OAAO,CAAC;YACjD;UACJ,CAAC,MAAM;YACHrD,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE+C,gBAAgB,CAAClD,IAAI,CAAC;YACxE5C,aAAa,CAAC,EAAE,CAAC;UACrB;QACJ,CAAC,CAAC,OAAOkD,KAAK,EAAE;UACZJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C;UACA,IAAI;YACA,MAAMkD,eAAe,GAAG,MAAM5H,KAAK,CAAC4D,IAAI,CACpC,wCAAwC,EACxC;cAAEoD,QAAQ;cAAEC;YAAU,CAAC,EACvB;cAAEM,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAoC;YAAE,CACvE,CAAC;YACDjG,cAAc,CAACsG,eAAe,CAACxD,IAAI,CAAC;UACxC,CAAC,CAAC,OAAOyD,YAAY,EAAE;YACnBvD,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEmD,YAAY,CAAC;YACnD;YACAvG,cAAc,CAAC;cACXyC,IAAI,EAAE,eAAe;cACrB+D,IAAI,EAAE;gBAAEC,IAAI,EAAE,EAAE;gBAAEC,UAAU,EAAE,EAAE;gBAAEC,QAAQ,EAAE;cAAG,CAAC;cAChDN,OAAO,EAAE,CAAC;gBAAEnC,WAAW,EAAE,wBAAwB;gBAAEsC,IAAI,EAAE;cAAQ,CAAC,CAAC;cACnEI,IAAI,EAAE;gBAAEC,KAAK,EAAE;cAAG,CAAC;cACnBC,UAAU,EAAE,KAAK;cACjBC,EAAE,EAAE;gBAAEC,KAAK,EAAE;cAAE;YACnB,CAAC,CAAC;UACN;UAEAhE,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;UACvE/C,aAAa,CAAC,EAAE,CAAC;QACrB;QACAE,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,EACAgD,KAAK,IAAK;QACPJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;QACApD,cAAc,CAAC;UACXyC,IAAI,EAAE,kBAAkB;UACxB+D,IAAI,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,UAAU,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC;UAChDN,OAAO,EAAE,CAAC;YAAEnC,WAAW,EAAE,wBAAwB;YAAEsC,IAAI,EAAE;UAAQ,CAAC,CAAC;UACnEI,IAAI,EAAE;YAAEC,KAAK,EAAE;UAAG,CAAC;UACnBC,UAAU,EAAE;QAChB,CAAC,CAAC;QACF5G,aAAa,CAAC,EAAE,CAAC;QACjBE,UAAU,CAAC,KAAK,CAAC;MACrB,CACJ,CAAC;IACL;EACJ,CAAC;EAED,MAAM6G,qBAAqB,GAAGA,CAAA,KAAM;IAChC,IAAI1G,gBAAgB,KAAK,gBAAgB,EAAE;MACvC,OAAON,UAAU;IACrB;IACA,OAAOA,UAAU,CAACiH,MAAM,CAACvD,QAAQ,IAAIA,QAAQ,CAACK,QAAQ,KAAKzD,gBAAgB,CAAC;EAChF,CAAC;EAED,MAAM4G,cAAc,GAAIV,IAAI,IAAK;IAAA,IAAAW,kBAAA;IAC7B,IAAI,EAAC9H,WAAW,aAAXA,WAAW,gBAAA8H,kBAAA,GAAX9H,WAAW,CAAE+H,KAAK,cAAAD,kBAAA,eAAlBA,kBAAA,CAAoBE,WAAW,KAAI,CAACb,IAAI,EAAE,OAAOc,IAAI,CAACC,KAAK,CAACf,IAAI,CAAC;IACtE;IACA,MAAMgB,aAAa,GAAG5I,kBAAkB,CAAC4H,IAAI,EAAE,cAAc,EAAEnH,WAAW,CAAC+H,KAAK,CAACC,WAAW,CAAC;IAC7F,OAAOG,aAAa;EACxB,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC7B,OAAO,CAAArI,WAAW,aAAXA,WAAW,wBAAAqI,mBAAA,GAAXrI,WAAW,CAAE+H,KAAK,cAAAM,mBAAA,uBAAlBA,mBAAA,CAAoBL,WAAW,MAAK,iBAAiB,GAAG,IAAI,GAAG,IAAI;EAC9E,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA,EAAAC,mBAAA;IACvB,IAAI,EAAC/H,WAAW,aAAXA,WAAW,gBAAA8H,iBAAA,GAAX9H,WAAW,CAAE6G,IAAI,cAAAiB,iBAAA,eAAjBA,iBAAA,CAAmBhB,KAAK,GAAE,OAAO,EAAE;IACxC;IACA,MAAMkB,UAAU,GAAGhI,WAAW,CAAC6G,IAAI,CAACC,KAAK,GAAG,GAAG,CAAC,CAAC;IACjD,IAAI,CAAAvH,WAAW,aAAXA,WAAW,wBAAAwI,mBAAA,GAAXxI,WAAW,CAAE+H,KAAK,cAAAS,mBAAA,uBAAlBA,mBAAA,CAAoBE,QAAQ,MAAK,YAAY,EAAE;MAC/C,MAAMC,UAAU,GAAGhJ,YAAY,CAAC8I,UAAU,EAAE,iBAAiB,EAAE,YAAY,CAAC;MAC5E,OAAOR,IAAI,CAACC,KAAK,CAACS,UAAU,CAAC;IACjC;IACA,OAAOV,IAAI,CAACC,KAAK,CAACO,UAAU,CAAC;EACjC,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IACvB,OAAO,CAAA7I,WAAW,aAAXA,WAAW,wBAAA6I,mBAAA,GAAX7I,WAAW,CAAE+H,KAAK,cAAAc,mBAAA,uBAAlBA,mBAAA,CAAoBH,QAAQ,MAAK,YAAY,GAAG,KAAK,GAAG,MAAM;EACzE,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IACxB,IAAI,EAACtI,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE+G,UAAU,GAAE,OAAO,CAAC;IACtC,MAAMwB,cAAc,GAAGvI,WAAW,CAAC+G,UAAU,GAAG,IAAI,CAAC,CAAC;IACtD,IAAI,CAAAxH,WAAW,aAAXA,WAAW,wBAAA+I,mBAAA,GAAX/I,WAAW,CAAE+H,KAAK,cAAAgB,mBAAA,uBAAlBA,mBAAA,CAAoBL,QAAQ,MAAK,YAAY,EAAE;MAC/C,OAAOT,IAAI,CAACC,KAAK,CAAC1I,eAAe,CAACwJ,cAAc,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;IACvF;IACA,OAAOf,IAAI,CAACC,KAAK,CAACc,cAAc,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC1B,OAAO,CAAAlJ,WAAW,aAAXA,WAAW,wBAAAkJ,mBAAA,GAAXlJ,WAAW,CAAE+H,KAAK,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBR,QAAQ,MAAK,YAAY,GAAG,IAAI,GAAG,IAAI;EACtE,CAAC;EAED,IAAI7H,OAAO,EAAE;IACT,oBACIf,OAAA;MAAKqJ,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BtJ,OAAA;QAAKqJ,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC1J,OAAA;QAAAsJ,QAAA,EAAG;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEd;EAEA,oBACI1J,OAAA;IAAKqJ,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBtJ,OAAA;MAAKqJ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BtJ,OAAA;QAAKqJ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BtJ,OAAA;UAAAsJ,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB1J,OAAA;UAAKqJ,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BtJ,OAAA;YAAKqJ,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBtJ,OAAA;cAAOwD,IAAI,EAAC,MAAM;cAACmG,WAAW,EAAC;YAAgC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClE1J,OAAA;cAAQqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACN1J,OAAA;YAAKqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,eACzBtJ,OAAA;cAAKqJ,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN1J,OAAA;MAAKqJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtJ,OAAA;QAAAsJ,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC1J,OAAA;QAAKqJ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBtJ,OAAA;UAAKqJ,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBtJ,OAAA;YAAMqJ,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEvB,cAAc,CAAC,CAAApH,WAAW,aAAXA,WAAW,wBAAAP,iBAAA,GAAXO,WAAW,CAAEyG,IAAI,cAAAhH,iBAAA,uBAAjBA,iBAAA,CAAmBiH,IAAI,KAAI,EAAE,CAAC,EAAEiB,kBAAkB,CAAC,CAAC;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzG1J,OAAA;YAAGqJ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAC7B,CAAA3I,WAAW,aAAXA,WAAW,wBAAAN,oBAAA,GAAXM,WAAW,CAAEsG,OAAO,cAAA5G,oBAAA,wBAAAC,qBAAA,GAApBD,oBAAA,CAAuB,CAAC,CAAC,cAAAC,qBAAA,uBAAzBA,qBAAA,CAA2BwE,WAAW,KAAI;UAAwB;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC,eACJ1J,OAAA;YAAGqJ,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAE,CAAA3I,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0C,IAAI,KAAI,kBAAkB,EAAC,iBAAU,EAAC,IAAIuG,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cAAEC,OAAO,EAAE,OAAO;cAAEC,KAAK,EAAE,OAAO;cAAEC,GAAG,EAAE;YAAU,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5K,CAAC,eAEN1J,OAAA;UAAKqJ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BtJ,OAAA;YAAKqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBtJ,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9C1J,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAEvB,cAAc,CAAC,CAAApH,WAAW,aAAXA,WAAW,wBAAAJ,kBAAA,GAAXI,WAAW,CAAEyG,IAAI,cAAA7G,kBAAA,uBAAjBA,kBAAA,CAAmB+G,UAAU,KAAI,EAAE,CAAC,EAAEgB,kBAAkB,CAAC,CAAC;YAAA;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9G,CAAC,eACN1J,OAAA;YAAKqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBtJ,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5C1J,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAE,CAAA3I,WAAW,aAAXA,WAAW,wBAAAH,kBAAA,GAAXG,WAAW,CAAEyG,IAAI,cAAA5G,kBAAA,uBAAjBA,kBAAA,CAAmB+G,QAAQ,KAAI,EAAE,EAAC,GAAC;YAAA;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eACN1J,OAAA;YAAKqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBtJ,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxC1J,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAEd,YAAY,CAAC,CAAC,EAAC,GAAC,EAACM,YAAY,CAAC,CAAC;YAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC,eACN1J,OAAA;YAAKqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBtJ,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5C1J,OAAA;cAAMqJ,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAE,CAAA3I,WAAW,aAAXA,WAAW,wBAAAF,eAAA,GAAXE,WAAW,CAAEgH,EAAE,cAAAlH,eAAA,uBAAfA,eAAA,CAAiBmH,KAAK,KAAI,CAAC,EAAC,SAAO;YAAA;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN1J,OAAA;MAAKqJ,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BtJ,OAAA;QAAKqJ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BtJ,OAAA;UAAAsJ,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B1J,OAAA;UAAKqJ,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACrCtJ,OAAA;YAAMqJ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC7B9J,eAAe,CAACyK,sBAAsB,CAAC,CAAC,CAACxF,MAAM,GAAG,CAAC,GAC9C,MAAMjF,eAAe,CAACyK,sBAAsB,CAAC,CAAC,CAACxF,MAAM,sBAAsB,GAC3E;UAAiC;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGN1J,OAAA;QAAKqJ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BrF,kBAAkB,CAACiG,GAAG,CAACtF,QAAQ,iBAC5B5E,OAAA;UAEIqJ,SAAS,EAAE,gBAAgBlI,gBAAgB,KAAKyD,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC3EuF,OAAO,EAAEA,CAAA,KAAM/I,mBAAmB,CAACwD,QAAQ,CAAE;UAAA0E,QAAA,EAE5C1E;QAAQ,GAJJA,QAAQ;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN1J,OAAA;QAAKqJ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BzB,qBAAqB,CAAC,CAAC,CAACqC,GAAG,CAAC3F,QAAQ,iBACjCvE,OAAA;UAAuBqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5CtJ,OAAA;YAAKqJ,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BtJ,OAAA;cACI2C,GAAG,EAAE4B,QAAQ,CAACS,KAAK,IAAIzD,kBAAkB,CAAC,CAAE;cAC5C6I,GAAG,EAAE7F,QAAQ,CAAClB,IAAK;cACnBgH,OAAO,EAAGC,CAAC,IAAKhI,gBAAgB,CAACgI,CAAC;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACF1J,OAAA;cAAKqJ,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAE/E,QAAQ,CAACK;YAAQ;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC3DlK,eAAe,CAAC+K,gBAAgB,CAAChG,QAAQ,CAAChB,aAAa,IAAIgB,QAAQ,CAAClB,IAAI,CAAC,GAAG,CAAC,iBAC1ErD,OAAA;cAAKqJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACtD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACN1J,OAAA;YAAKqJ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC7BtJ,OAAA;cAAAsJ,QAAA,EAAK/E,QAAQ,CAAClB;YAAI;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB1J,OAAA;cAAGqJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAE/E,QAAQ,CAACO;YAAW;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9D1J,OAAA;cAAKqJ,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1BtJ,OAAA;gBAAKqJ,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACnBtJ,OAAA;kBAAMqJ,SAAS,EAAC,OAAO;kBAAAC,QAAA,GAClB,GAAG,CAACkB,MAAM,CAACrC,IAAI,CAACsC,KAAK,CAAClG,QAAQ,CAACW,MAAM,CAAC,CAAC,EACvC,GAAG,CAACsF,MAAM,CAAC,CAAC,GAAGrC,IAAI,CAACsC,KAAK,CAAClG,QAAQ,CAACW,MAAM,CAAC,CAAC;gBAAA;kBAAAqE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1C,CAAC,eACP1J,OAAA;kBAAMqJ,SAAS,EAAC,aAAa;kBAAAC,QAAA,GACxB/E,QAAQ,CAACW,MAAM,EAAC,IAAE,EAACX,QAAQ,CAACY,OAAO,EAAC,WACzC;gBAAA;kBAAAoE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACN1J,OAAA;gBAAKqJ,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC1BtJ,OAAA;kBAAMqJ,SAAS,EAAC,UAAU;kBAAAC,QAAA,EAAE/E,QAAQ,CAACc;gBAAQ;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrD1J,OAAA;kBAAMqJ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAE/E,QAAQ,CAACe;gBAAU;kBAAAiE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACN1J,OAAA;cAAKqJ,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC7BtJ,OAAA;gBAAKqJ,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,gBACjCtJ,OAAA;kBACIqJ,SAAS,EAAC,UAAU;kBACpBc,OAAO,EAAEA,CAAA,KAAMrH,oBAAoB,CAACyB,QAAQ,EAAE,MAAM,CAAE;kBACtDmG,KAAK,EAAE,QAAQnG,QAAQ,CAAClB,IAAI,IAAIkB,QAAQ,CAAChB,aAAa,EAAG;kBAAA+F,QAAA,EAC5D;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT1J,OAAA;kBACIqJ,SAAS,EAAC,aAAa;kBACvBc,OAAO,EAAEA,CAAA,KAAMrH,oBAAoB,CAACyB,QAAQ,EAAE,SAAS,CAAE;kBACzDmG,KAAK,EAAE,WAAWnG,QAAQ,CAAClB,IAAI,IAAIkB,QAAQ,CAAChB,aAAa,EAAG;kBAAA+F,QAAA,EAC/D;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACN1J,OAAA;gBACIqJ,SAAS,EAAC,kBAAkB;gBAC5Bc,OAAO,EAAEA,CAAA,KAAM;kBACX;kBACAQ,YAAY,CAACC,OAAO,CAAC,mBAAmB,EAAEC,IAAI,CAACC,SAAS,CAACjK,UAAU,CAAC,CAAC;;kBAErE;kBACA,MAAMkC,KAAK,GAAGwB,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;kBAClC9D,QAAQ,CAAC,UAAU6D,QAAQ,CAACpB,QAAQ,IAAIoB,QAAQ,CAACI,EAAE,EAAE,EAAE;oBACnDoG,KAAK,EAAE;sBACHhI,KAAK,EAAEA,KAAK;sBACZ0C,YAAY,EAAElB,QAAQ,CAAChB;oBAC3B;kBACJ,CAAC,CAAC;gBACN,CAAE;gBAAA+F,QAAA,EACL;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,GAlEAnF,QAAQ,CAACI,EAAE;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmEhB,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN1J,OAAA;MAAKqJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtJ,OAAA;QAAAsJ,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC1J,OAAA;QAAAsJ,QAAA,EAAG;MAAsF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7F1J,OAAA;QAAQqJ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvJ,EAAA,CAneIF,SAAS;EAAA,QACMV,WAAW;AAAA;AAAAyL,EAAA,GAD1B/K,SAAS;AAqef,eAAeA,SAAS;AAAC,IAAA+K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}