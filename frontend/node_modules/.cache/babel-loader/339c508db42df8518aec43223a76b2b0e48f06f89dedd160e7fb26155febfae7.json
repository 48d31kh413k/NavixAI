{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  appSettings\n}) => {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$, _weatherData$main2, _weatherData$main3, _weatherData$uv;\n  const navigate = useNavigate();\n  const [weatherData, setWeatherData] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('All Activities');\n  const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Handle preference updates to backend\n  const updateUserPreference = async (place, preference) => {\n    try {\n      // Update local state immediately for UI feedback\n      setUserPreferenceState(prev => ({\n        ...prev,\n        [place.place_id]: preference\n      }));\n      const response = await axios.post('http://localhost:8000/api/user-preference/', {\n        place_id: place.place_id,\n        place_name: place.name,\n        activity_type: place.activity_name || place.type,\n        preference: preference,\n        user_id: 'anonymous' // You can implement proper user authentication later\n      });\n      if (response.data.success) {\n        console.log(`Successfully ${preference}d place:`, place.name);\n        // Also update local preferences for consistency\n        if (preference === 'like') {\n          userPreferences.likeActivity(place.activity_name || place.name);\n        } else {\n          userPreferences.dislikeActivity(place.activity_name || place.name);\n        }\n        // Force re-render to show updated preferences\n        setActivities([...activities]);\n      }\n    } catch (error) {\n      console.error(`Error updating ${preference} preference:`, error);\n      // Still update local preferences as fallback\n      if (preference === 'like') {\n        userPreferences.likeActivity(place.activity_name || place.name);\n      } else {\n        userPreferences.dislikeActivity(place.activity_name || place.name);\n      }\n    }\n  };\n  const activityCategories = ['All Activities', 'Outdoor Adventures', 'Relaxing Indoors', 'Cultural Experiences', 'Family Fun'];\n\n  // Transform backend activity data to show individual places with real names\n  const transformActivitiesFromBackend = backendActivities => {\n    const allPlaces = [];\n    let placeId = 1;\n    backendActivities.forEach(activity => {\n      if (activity.places && activity.places.length > 0) {\n        activity.places.forEach(place => {\n          allPlaces.push({\n            id: placeId++,\n            name: place.name || 'Unknown Place',\n            // Real place name\n            category: mapActivityToCategory(activity.activity_name),\n            description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n            photos: place.photos || [],\n            // All photos array\n            rating: place.rating || 4.0,\n            reviews: place.user_ratings_total || 0,\n            duration: '1-3 hours',\n            difficulty: 'Easy',\n            activity_name: activity.activity_name,\n            place_count: 1,\n            places: [place],\n            // The actual place data\n            place_id: place.place_id,\n            vicinity: place.vicinity,\n            types: place.types || []\n          });\n        });\n      }\n    });\n    return allPlaces;\n  };\n\n  // Map activity names to our frontend categories\n  const mapActivityToCategory = activityName => {\n    if (!activityName) return 'All Activities';\n    const categoryMap = {\n      // Outdoor Adventures\n      'park': 'Outdoor Adventures',\n      'hiking': 'Outdoor Adventures',\n      'garden': 'Outdoor Adventures',\n      'beach': 'Outdoor Adventures',\n      'outdoor sports': 'Outdoor Adventures',\n      'sports': 'Outdoor Adventures',\n      'trail': 'Outdoor Adventures',\n      // Indoor Relaxation\n      'cafe': 'Relaxing Indoors',\n      'spa': 'Relaxing Indoors',\n      'library': 'Relaxing Indoors',\n      'bookstore': 'Relaxing Indoors',\n      'tea house': 'Relaxing Indoors',\n      'cinema': 'Relaxing Indoors',\n      // Cultural Exploration\n      'museum': 'Cultural Experiences',\n      'gallery': 'Cultural Experiences',\n      'theater': 'Cultural Experiences',\n      'historical': 'Cultural Experiences',\n      'cultural center': 'Cultural Experiences',\n      'art': 'Cultural Experiences',\n      // Culinary Delights\n      'restaurant': 'Family Fun',\n      'food market': 'Family Fun',\n      'bakery': 'Family Fun',\n      'wine bar': 'Family Fun',\n      'cooking': 'Family Fun',\n      'market': 'Family Fun',\n      // General\n      'shopping': 'Family Fun',\n      'mall': 'Family Fun'\n    };\n    const lowerActivity = activityName.toLowerCase();\n    for (const [key, category] of Object.entries(categoryMap)) {\n      if (lowerActivity.includes(key)) {\n        return category;\n      }\n    }\n    return 'All Activities';\n  };\n  useEffect(() => {\n    fetchWeatherAndActivities();\n  }, []);\n  const fetchWeatherAndActivities = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n          console.log('With data:', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {}\n          });\n\n          // Fetch activities and weather data from the activity suggestion API\n          const activityResponse = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            // Get more activities for variety\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {} // Send user activity preferences\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('API Response:', activityResponse.data);\n          if (activityResponse.data && activityResponse.data.activities) {\n            console.log('Received activities from backend:', activityResponse.data.activities);\n            // Transform backend activities to match frontend format\n            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n            console.log('Transformed activities:', transformedActivities);\n\n            // Sort activities by user preferences\n            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n            setActivities(sortedActivities);\n\n            // Set weather data from the same response\n            if (activityResponse.data.weather) {\n              setWeatherData(activityResponse.data.weather);\n            }\n          } else {\n            console.log('No activities in backend response:', activityResponse.data);\n            setActivities([]);\n          }\n        } catch (error) {\n          console.error('Activity fetch error:', error);\n          // Fallback to weather-only API if activity API fails\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n          } catch (weatherError) {\n            console.error('Weather fetch error:', weatherError);\n            // Mock weather data for demo\n            setWeatherData({\n              name: 'New York City',\n              main: {\n                temp: 22,\n                feels_like: 24,\n                humidity: 65\n              },\n              weather: [{\n                description: 'sunny with clear skies',\n                main: 'Clear'\n              }],\n              wind: {\n                speed: 10\n              },\n              visibility: 10000,\n              uv: {\n                value: 6\n              }\n            });\n          }\n          console.log('No activities received from backend, setting empty array');\n          setActivities([]);\n        }\n        setLoading(false);\n      }, error => {\n        console.error('Geolocation error:', error);\n        // Set fallback weather data and empty activities\n        setWeatherData({\n          name: 'Current Location',\n          main: {\n            temp: 22,\n            feels_like: 24,\n            humidity: 65\n          },\n          weather: [{\n            description: 'sunny with clear skies',\n            main: 'Clear'\n          }],\n          wind: {\n            speed: 10\n          },\n          visibility: 10000\n        });\n        setActivities([]);\n        setLoading(false);\n      });\n    }\n  };\n\n  // Filter and sort activities with priority mixing\n  const getFilteredAndSortedActivities = () => {\n    let filtered = activities;\n\n    // Filter by search term\n    if (searchTerm.trim()) {\n      filtered = filtered.filter(activity => {\n        var _activity$name, _activity$vicinity, _activity$description, _activity$category, _activity$activity_na;\n        return ((_activity$name = activity.name) === null || _activity$name === void 0 ? void 0 : _activity$name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_activity$vicinity = activity.vicinity) === null || _activity$vicinity === void 0 ? void 0 : _activity$vicinity.toLowerCase().includes(searchTerm.toLowerCase())) || ((_activity$description = activity.description) === null || _activity$description === void 0 ? void 0 : _activity$description.toLowerCase().includes(searchTerm.toLowerCase())) || ((_activity$category = activity.category) === null || _activity$category === void 0 ? void 0 : _activity$category.toLowerCase().includes(searchTerm.toLowerCase())) || ((_activity$activity_na = activity.activity_name) === null || _activity$activity_na === void 0 ? void 0 : _activity$activity_na.toLowerCase().includes(searchTerm.toLowerCase()));\n      });\n    }\n\n    // Filter out places with less than 100 reviews\n    filtered = filtered.filter(activity => {\n      const reviewCount = activity.user_ratings_total || 0;\n      return reviewCount >= 100;\n    });\n\n    // Filter by category (if specific category selected)\n    if (selectedCategory !== 'All Activities') {\n      filtered = filtered.filter(activity => activity.category === selectedCategory);\n      // Sort by reviews if specific category\n      return filtered.sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    }\n\n    // For \"All Activities\", create priority mixed list\n    // First sort all activities by reviews within each category\n    const sortedByCategory = {};\n    filtered.forEach(activity => {\n      const category = activity.category || 'Other';\n      if (!sortedByCategory[category]) {\n        sortedByCategory[category] = [];\n      }\n      sortedByCategory[category].push(activity);\n    });\n\n    // Sort each category by number of reviews\n    Object.keys(sortedByCategory).forEach(category => {\n      sortedByCategory[category].sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    });\n\n    // Create mixed priority list\n    const mixedActivities = [];\n\n    // Priority: 3 from Family Fun, 3 from Relaxing Indoors\n    const familyFun = sortedByCategory['Family Fun'] || [];\n    const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n\n    // Add 3 from each priority category\n    mixedActivities.push(...familyFun.slice(0, 3));\n    mixedActivities.push(...relaxingIndoors.slice(0, 3));\n\n    // Add 2 from each other category\n    Object.keys(sortedByCategory).forEach(category => {\n      if (category !== 'Family Fun' && category !== 'Relaxing Indoors') {\n        mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n      }\n    });\n\n    // Shuffle the mixed activities to avoid grouping by category\n    const shuffled = [...mixedActivities];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  const getFilteredActivities = () => {\n    // Use the new sorting function instead\n    return getFilteredAndSortedActivities();\n  };\n  const getTemperature = temp => {\n    var _appSettings$units;\n    if (!(appSettings !== null && appSettings !== void 0 && (_appSettings$units = appSettings.units) !== null && _appSettings$units !== void 0 && _appSettings$units.temperature) || !temp) return Math.round(temp);\n    // Weather API returns Celsius, convert if needed\n    const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n    return convertedTemp;\n  };\n  const getTemperatureUnit = () => {\n    var _appSettings$units2;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units2 = appSettings.units) === null || _appSettings$units2 === void 0 ? void 0 : _appSettings$units2.temperature) === 'Fahrenheit (°F)' ? '°F' : '°C';\n  };\n  const getWindSpeed = () => {\n    var _weatherData$wind, _appSettings$units3;\n    if (!(weatherData !== null && weatherData !== void 0 && (_weatherData$wind = weatherData.wind) !== null && _weatherData$wind !== void 0 && _weatherData$wind.speed)) return 10;\n    // Weather API returns m/s, convert to appropriate unit\n    const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units3 = appSettings.units) === null || _appSettings$units3 === void 0 ? void 0 : _appSettings$units3.distance) === 'Miles (mi)') {\n      const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n      return Math.round(speedInMph);\n    }\n    return Math.round(speedInKmh);\n  };\n  const getSpeedUnit = () => {\n    var _appSettings$units4;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units4 = appSettings.units) === null || _appSettings$units4 === void 0 ? void 0 : _appSettings$units4.distance) === 'Miles (mi)' ? 'mph' : 'km/h';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your personalized recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search activities or places...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"search-btn\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            onClick: () => navigate('/preferences'),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather & Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp-value\",\n            children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) || 22), getTemperatureUnit()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-description\",\n            children: (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description) || 'Sunny with clear skies'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [(weatherData === null || weatherData === void 0 ? void 0 : weatherData.name) || 'Current Location', \" \\u2022 Today, \", new Date().toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Feels like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.feels_like) || 24), getTemperatureUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main3 = weatherData.main) === null || _weatherData$main3 === void 0 ? void 0 : _weatherData$main3.humidity) || 65, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getWindSpeed(), \" \", getSpeedUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$uv = weatherData.uv) === null || _weatherData$uv === void 0 ? void 0 : _weatherData$uv.value) || 6, \" (High)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-preferences-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preferences-text\",\n            children: userPreferences.getPreferredActivities().length > 0 ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned` : \"🔍 Building your preferences...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this), activityCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `category-btn ${selectedCategory === category ? 'active' : ''}`,\n            onClick: () => setSelectedCategory(category),\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activities-grid\",\n        children: getFilteredActivities().map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-image\",\n            children: [/*#__PURE__*/_jsxDEV(PhotoCarousel, {\n              photos: (() => {\n                const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                return photos;\n              })(),\n              altText: activity.name,\n              className: \"activity-carousel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-category\",\n              children: activity.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this), (() => {\n              const score = userPreferences.getActivityScore(activity.activity_name || activity.name);\n              const preference = userPreferenceState[activity.place_id] || (score > 0 ? 'liked' : score < 0 ? 'disliked' : null);\n              if (preference === 'liked') {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preference-indicator liked\",\n                  children: \"\\u2764\\uFE0F Liked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 48\n                }, this);\n              } else if (preference === 'disliked') {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preference-indicator disliked\",\n                  children: \"\\uD83D\\uDC4E Disliked\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 48\n                }, this);\n              }\n              return null;\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"activity-description\",\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stars\",\n                  children: ['★'.repeat(Math.floor(activity.rating)), '☆'.repeat(5 - Math.floor(activity.rating))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating-text\",\n                  children: [activity.rating, \" (\", activity.reviews, \" reviews)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: activity.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty\",\n                  children: activity.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-preferences\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"like-btn\",\n                  onClick: () => updateUserPreference(activity, 'like'),\n                  title: `Like ${activity.name || activity.activity_name}`,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"dislike-btn\",\n                  onClick: () => updateUserPreference(activity, 'dislike'),\n                  title: `Dislike ${activity.name || activity.activity_name}`,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-details-btn\",\n                onClick: () => {\n                  // Store current activities in localStorage for place detail access\n                  localStorage.setItem('recent_activities', JSON.stringify(activities));\n\n                  // Navigate with the actual place data\n                  const place = activity.places[0]; // This is the actual place\n                  navigate(`/place/${activity.place_id || activity.id}`, {\n                    state: {\n                      place: place,\n                      activityName: activity.activity_name\n                    }\n                  });\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 29\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-cta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Refine Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your preferences to get even better activity suggestions tailored just for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"goto-preferences-btn\",\n        children: \"Go to Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"Q5axu44XTbHXK5mPj5ILwTKiI74=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","userPreferences","convertTemperature","convertSpeed","PhotoCarousel","jsxDEV","_jsxDEV","Dashboard","appSettings","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","_weatherData$main2","_weatherData$main3","_weatherData$uv","navigate","weatherData","setWeatherData","activities","setActivities","loading","setLoading","selectedCategory","setSelectedCategory","userPreferenceState","setUserPreferenceState","searchTerm","setSearchTerm","updateUserPreference","place","preference","prev","place_id","response","post","place_name","name","activity_type","activity_name","type","user_id","data","success","console","log","likeActivity","dislikeActivity","error","activityCategories","transformActivitiesFromBackend","backendActivities","allPlaces","placeId","forEach","activity","places","length","push","id","category","mapActivityToCategory","description","vicinity","photos","rating","reviews","user_ratings_total","duration","difficulty","place_count","types","activityName","categoryMap","lowerActivity","toLowerCase","key","Object","entries","includes","fetchWeatherAndActivities","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","max_activities","activityResponse","headers","transformedActivities","sortedActivities","sortActivitiesByPreference","weather","weatherResponse","weatherError","main","temp","feels_like","humidity","wind","speed","visibility","uv","value","getFilteredAndSortedActivities","filtered","trim","filter","_activity$name","_activity$vicinity","_activity$description","_activity$category","_activity$activity_na","reviewCount","sort","a","b","sortedByCategory","keys","mixedActivities","familyFun","relaxingIndoors","slice","shuffled","i","j","Math","floor","random","getFilteredActivities","getTemperature","_appSettings$units","units","temperature","round","convertedTemp","getTemperatureUnit","_appSettings$units2","getWindSpeed","_weatherData$wind","_appSettings$units3","speedInKmh","distance","speedInMph","getSpeedUnit","_appSettings$units4","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","Date","toLocaleDateString","weekday","month","day","getPreferredActivities","map","altText","score","getActivityScore","repeat","title","localStorage","setItem","JSON","stringify","state","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\n\nconst Dashboard = ({ appSettings }) => {\n    const navigate = useNavigate();\n    const [weatherData, setWeatherData] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedCategory, setSelectedCategory] = useState('All Activities');\n    const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // Handle preference updates to backend\n    const updateUserPreference = async (place, preference) => {\n        try {\n            // Update local state immediately for UI feedback\n            setUserPreferenceState(prev => ({\n                ...prev,\n                [place.place_id]: preference\n            }));\n\n            const response = await axios.post('http://localhost:8000/api/user-preference/', {\n                place_id: place.place_id,\n                place_name: place.name,\n                activity_type: place.activity_name || place.type,\n                preference: preference,\n                user_id: 'anonymous' // You can implement proper user authentication later\n            });\n            \n            if (response.data.success) {\n                console.log(`Successfully ${preference}d place:`, place.name);\n                // Also update local preferences for consistency\n                if (preference === 'like') {\n                    userPreferences.likeActivity(place.activity_name || place.name);\n                } else {\n                    userPreferences.dislikeActivity(place.activity_name || place.name);\n                }\n                // Force re-render to show updated preferences\n                setActivities([...activities]);\n            }\n        } catch (error) {\n            console.error(`Error updating ${preference} preference:`, error);\n            // Still update local preferences as fallback\n            if (preference === 'like') {\n                userPreferences.likeActivity(place.activity_name || place.name);\n            } else {\n                userPreferences.dislikeActivity(place.activity_name || place.name);\n            }\n        }\n    };\n\n    const activityCategories = [\n        'All Activities',\n        'Outdoor Adventures', \n        'Relaxing Indoors',\n        'Cultural Experiences',\n        'Family Fun'\n    ];\n\n    // Transform backend activity data to show individual places with real names\n    const transformActivitiesFromBackend = (backendActivities) => {\n        const allPlaces = [];\n        let placeId = 1;\n        \n        backendActivities.forEach((activity) => {\n            if (activity.places && activity.places.length > 0) {\n                activity.places.forEach((place) => {\n                    allPlaces.push({\n                        id: placeId++,\n                        name: place.name || 'Unknown Place', // Real place name\n                        category: mapActivityToCategory(activity.activity_name),\n                        description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n                        photos: place.photos || [], // All photos array\n                        rating: place.rating || 4.0,\n                        reviews: place.user_ratings_total || 0,\n                        duration: '1-3 hours',\n                        difficulty: 'Easy',\n                        activity_name: activity.activity_name,\n                        place_count: 1,\n                        places: [place], // The actual place data\n                        place_id: place.place_id,\n                        vicinity: place.vicinity,\n                        types: place.types || []\n                    });\n                });\n            }\n        });\n        \n        return allPlaces;\n    };\n\n    // Map activity names to our frontend categories\n    const mapActivityToCategory = (activityName) => {\n        if (!activityName) return 'All Activities';\n        \n        const categoryMap = {\n            // Outdoor Adventures\n            'park': 'Outdoor Adventures',\n            'hiking': 'Outdoor Adventures',\n            'garden': 'Outdoor Adventures',\n            'beach': 'Outdoor Adventures',\n            'outdoor sports': 'Outdoor Adventures',\n            'sports': 'Outdoor Adventures',\n            'trail': 'Outdoor Adventures',\n            \n            // Indoor Relaxation\n            'cafe': 'Relaxing Indoors',\n            'spa': 'Relaxing Indoors',\n            'library': 'Relaxing Indoors',\n            'bookstore': 'Relaxing Indoors',\n            'tea house': 'Relaxing Indoors',\n            'cinema': 'Relaxing Indoors',\n            \n            // Cultural Exploration\n            'museum': 'Cultural Experiences',\n            'gallery': 'Cultural Experiences',\n            'theater': 'Cultural Experiences',\n            'historical': 'Cultural Experiences',\n            'cultural center': 'Cultural Experiences',\n            'art': 'Cultural Experiences',\n            \n            // Culinary Delights\n            'restaurant': 'Family Fun',\n            'food market': 'Family Fun',\n            'bakery': 'Family Fun',\n            'wine bar': 'Family Fun',\n            'cooking': 'Family Fun',\n            'market': 'Family Fun',\n            \n            // General\n            'shopping': 'Family Fun',\n            'mall': 'Family Fun'\n        };\n        \n        const lowerActivity = activityName.toLowerCase();\n        for (const [key, category] of Object.entries(categoryMap)) {\n            if (lowerActivity.includes(key)) {\n                return category;\n            }\n        }\n        \n        return 'All Activities';\n    };\n\n    useEffect(() => {\n        fetchWeatherAndActivities();\n    }, []);\n\n    const fetchWeatherAndActivities = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    \n                    try {\n                        console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n                        console.log('With data:', { \n                            latitude, \n                            longitude, \n                            max_activities: 8,\n                            activities: appSettings?.activities || {}\n                        });\n                        \n                        // Fetch activities and weather data from the activity suggestion API\n                        const activityResponse = await axios.post(\n                            'http://127.0.0.1:8000/api/activity-suggestion/',\n                            { \n                                latitude, \n                                longitude,\n                                max_activities: 8,  // Get more activities for variety\n                                activities: appSettings?.activities || {}  // Send user activity preferences\n                            },\n                            { \n                                headers: { 'Content-Type': 'application/json' } \n                            }\n                        );\n                        \n                        console.log('API Response:', activityResponse.data);\n                        \n                        if (activityResponse.data && activityResponse.data.activities) {\n                            console.log('Received activities from backend:', activityResponse.data.activities);\n                            // Transform backend activities to match frontend format\n                            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n                            console.log('Transformed activities:', transformedActivities);\n                            \n                            // Sort activities by user preferences\n                            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n                            setActivities(sortedActivities);\n                            \n                            // Set weather data from the same response\n                            if (activityResponse.data.weather) {\n                                setWeatherData(activityResponse.data.weather);\n                            }\n                        } else {\n                            console.log('No activities in backend response:', activityResponse.data);\n                            setActivities([]);\n                        }\n                    } catch (error) {\n                        console.error('Activity fetch error:', error);\n                        // Fallback to weather-only API if activity API fails\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/',\n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                        } catch (weatherError) {\n                            console.error('Weather fetch error:', weatherError);\n                            // Mock weather data for demo\n                            setWeatherData({\n                                name: 'New York City',\n                                main: { temp: 22, feels_like: 24, humidity: 65 },\n                                weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                                wind: { speed: 10 },\n                                visibility: 10000,\n                                uv: { value: 6 }\n                            });\n                        }\n                        \n                        console.log('No activities received from backend, setting empty array');\n                        setActivities([]);\n                    }\n                    setLoading(false);\n                },\n                (error) => {\n                    console.error('Geolocation error:', error);\n                    // Set fallback weather data and empty activities\n                    setWeatherData({\n                        name: 'Current Location',\n                        main: { temp: 22, feels_like: 24, humidity: 65 },\n                        weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                        wind: { speed: 10 },\n                        visibility: 10000\n                    });\n                    setActivities([]);\n                    setLoading(false);\n                }\n            );\n        }\n    };\n\n    // Filter and sort activities with priority mixing\n    const getFilteredAndSortedActivities = () => {\n        let filtered = activities;\n        \n        // Filter by search term\n        if (searchTerm.trim()) {\n            filtered = filtered.filter(activity => \n                activity.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                activity.vicinity?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                activity.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                activity.category?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                activity.activity_name?.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n        \n        // Filter out places with less than 100 reviews\n        filtered = filtered.filter(activity => {\n            const reviewCount = activity.user_ratings_total || 0;\n            return reviewCount >= 100;\n        });\n        \n        // Filter by category (if specific category selected)\n        if (selectedCategory !== 'All Activities') {\n            filtered = filtered.filter(activity => activity.category === selectedCategory);\n            // Sort by reviews if specific category\n            return filtered.sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        }\n        \n        // For \"All Activities\", create priority mixed list\n        // First sort all activities by reviews within each category\n        const sortedByCategory = {};\n        filtered.forEach(activity => {\n            const category = activity.category || 'Other';\n            if (!sortedByCategory[category]) {\n                sortedByCategory[category] = [];\n            }\n            sortedByCategory[category].push(activity);\n        });\n        \n        // Sort each category by number of reviews\n        Object.keys(sortedByCategory).forEach(category => {\n            sortedByCategory[category].sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        });\n        \n        // Create mixed priority list\n        const mixedActivities = [];\n        \n        // Priority: 3 from Family Fun, 3 from Relaxing Indoors\n        const familyFun = sortedByCategory['Family Fun'] || [];\n        const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n        \n        // Add 3 from each priority category\n        mixedActivities.push(...familyFun.slice(0, 3));\n        mixedActivities.push(...relaxingIndoors.slice(0, 3));\n        \n        // Add 2 from each other category\n        Object.keys(sortedByCategory).forEach(category => {\n            if (category !== 'Family Fun' && category !== 'Relaxing Indoors') {\n                mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n            }\n        });\n        \n        // Shuffle the mixed activities to avoid grouping by category\n        const shuffled = [...mixedActivities];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        \n        return shuffled;\n    };\n\n    const getFilteredActivities = () => {\n        // Use the new sorting function instead\n        return getFilteredAndSortedActivities();\n    };\n\n    const getTemperature = (temp) => {\n        if (!appSettings?.units?.temperature || !temp) return Math.round(temp);\n        // Weather API returns Celsius, convert if needed\n        const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n        return convertedTemp;\n    };\n\n    const getTemperatureUnit = () => {\n        return appSettings?.units?.temperature === 'Fahrenheit (°F)' ? '°F' : '°C';\n    };\n\n    const getWindSpeed = () => {\n        if (!weatherData?.wind?.speed) return 10;\n        // Weather API returns m/s, convert to appropriate unit\n        const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n            return Math.round(speedInMph);\n        }\n        return Math.round(speedInKmh);\n    };\n\n    const getSpeedUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mph' : 'km/h';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading your personalized recommendations...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"dashboard\">\n            {/* Top Header */}\n            <div className=\"dashboard-header\">\n                <div className=\"header-content\">\n                    <h1>Dashboard</h1>\n                    <div className=\"header-actions\">\n                        <div className=\"search-bar\">\n                            <input \n                                type=\"text\" \n                                placeholder=\"Search activities or places...\" \n                                value={searchTerm}\n                                onChange={(e) => setSearchTerm(e.target.value)}\n                            />\n                            <button className=\"search-btn\">🔍</button>\n                        </div>\n                        <div className=\"user-profile\" onClick={() => navigate('/preferences')}>\n                            <div className=\"user-avatar\">👤</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Weather Section */}\n            <div className=\"weather-section\">\n                <h2>Current Weather & Conditions</h2>\n                <div className=\"weather-main\">\n                    <div className=\"temperature\">\n                        <span className=\"temp-value\">{getTemperature(weatherData?.main?.temp || 22)}{getTemperatureUnit()}</span>\n                        <p className=\"weather-description\">\n                            {weatherData?.weather?.[0]?.description || 'Sunny with clear skies'}\n                        </p>\n                        <p className=\"location\">{weatherData?.name || 'Current Location'} • Today, {new Date().toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</p>\n                    </div>\n                    \n                    <div className=\"weather-details\">\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Feels like</span>\n                            <span className=\"stat-value\">{getTemperature(weatherData?.main?.feels_like || 24)}{getTemperatureUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Humidity</span>\n                            <span className=\"stat-value\">{weatherData?.main?.humidity || 65}%</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Wind</span>\n                            <span className=\"stat-value\">{getWindSpeed()} {getSpeedUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">UV Index</span>\n                            <span className=\"stat-value\">{weatherData?.uv?.value || 6} (High)</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Activities Section */}\n            <div className=\"activities-section\">\n                <div className=\"section-header\">\n                    <h2>Recommended Activities</h2>\n                    <div className=\"user-preferences-summary\">\n                        <span className=\"preferences-text\">\n                            {userPreferences.getPreferredActivities().length > 0 \n                                ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned`\n                                : \"🔍 Building your preferences...\"\n                            }\n                        </span>\n                    </div>\n                </div>\n                \n                {/* Category Filter */}\n                <div className=\"filters-container\">\n                    <div className=\"category-filter\">\n                        <h3>Categories</h3>\n                        {activityCategories.map(category => (\n                            <button\n                                key={category}\n                                className={`category-btn ${selectedCategory === category ? 'active' : ''}`}\n                                onClick={() => setSelectedCategory(category)}\n                            >\n                                {category}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Activity Cards Grid */}\n                <div className=\"activities-grid\">\n                    {getFilteredActivities().map(activity => (\n                        <div key={activity.id} className=\"activity-card\">\n                            <div className=\"activity-image\">\n                                <PhotoCarousel \n                                    photos={(() => {\n                                        const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                                        console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                                        return photos;\n                                    })()}\n                                    altText={activity.name}\n                                    className=\"activity-carousel\"\n                                />\n                                <div className=\"activity-category\">{activity.category}</div>\n                                {(() => {\n                                    const score = userPreferences.getActivityScore(activity.activity_name || activity.name);\n                                    const preference = userPreferenceState[activity.place_id] || \n                                                     (score > 0 ? 'liked' : score < 0 ? 'disliked' : null);\n                                    \n                                    if (preference === 'liked') {\n                                        return <div className=\"preference-indicator liked\">❤️ Liked</div>;\n                                    } else if (preference === 'disliked') {\n                                        return <div className=\"preference-indicator disliked\">👎 Disliked</div>;\n                                    }\n                                    return null;\n                                })()}\n                            </div>\n                            <div className=\"activity-content\">\n                                <h3>{activity.name}</h3>\n                                <p className=\"activity-description\">{activity.description}</p>\n                                <div className=\"activity-meta\">\n                                    <div className=\"rating\">\n                                        <span className=\"stars\">\n                                            {'★'.repeat(Math.floor(activity.rating))}\n                                            {'☆'.repeat(5 - Math.floor(activity.rating))}\n                                        </span>\n                                        <span className=\"rating-text\">\n                                            {activity.rating} ({activity.reviews} reviews)\n                                        </span>\n                                    </div>\n                                    <div className=\"activity-info\">\n                                        <span className=\"duration\">{activity.duration}</span>\n                                        <span className=\"difficulty\">{activity.difficulty}</span>\n                                    </div>\n                                </div>\n                                <div className=\"activity-actions\">\n                                    <div className=\"activity-preferences\">\n                                        <button \n                                            className=\"like-btn\"\n                                            onClick={() => updateUserPreference(activity, 'like')}\n                                            title={`Like ${activity.name || activity.activity_name}`}\n                                        >\n                                            👍\n                                        </button>\n                                        <button \n                                            className=\"dislike-btn\"\n                                            onClick={() => updateUserPreference(activity, 'dislike')}\n                                            title={`Dislike ${activity.name || activity.activity_name}`}\n                                        >\n                                            👎\n                                        </button>\n                                    </div>\n                                    <button \n                                        className=\"view-details-btn\"\n                                        onClick={() => {\n                                            // Store current activities in localStorage for place detail access\n                                            localStorage.setItem('recent_activities', JSON.stringify(activities));\n                                            \n                                            // Navigate with the actual place data\n                                            const place = activity.places[0]; // This is the actual place\n                                            navigate(`/place/${activity.place_id || activity.id}`, {\n                                                state: {\n                                                    place: place,\n                                                    activityName: activity.activity_name\n                                                }\n                                            });\n                                        }}\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Preferences Reminder */}\n            <div className=\"preferences-cta\">\n                <h3>Refine Your Recommendations</h3>\n                <p>Update your preferences to get even better activity suggestions tailored just for you.</p>\n                <button className=\"goto-preferences-btn\">Go to Preferences</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}