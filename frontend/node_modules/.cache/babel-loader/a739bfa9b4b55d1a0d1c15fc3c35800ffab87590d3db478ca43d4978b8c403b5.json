{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [locationError, setLocationError] = useState(null);\n\n  // Fetch test data from backend\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/test/').then(response => {\n      setData(response.data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch user location and send to backend\n  useEffect(() => {\n    const fetchUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          try {\n            const response = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            setWeatherData(response.data);\n          } catch (err) {\n            setLocationError('Failed to get weather data');\n            console.error(\"Weather API error:\", err);\n          }\n        }, error => {\n          setLocationError('Location access denied');\n          console.error(\"Geolocation error:\", error);\n        });\n      } else {\n        setLocationError('Geolocation not supported');\n      }\n    };\n    fetchUserLocation();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Welcome to the React Frontend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Backend Response: \", data === null || data === void 0 ? void 0 : data.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), locationError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'red',\n                marginTop: '20px'\n              },\n              children: [\"Location Error: \", locationError]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this) : weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Weather Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: JSON.stringify(weatherData, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"Loading weather data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HEcuv8jCr6KJymrwjA+QY7AKB4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","weatherData","setWeatherData","locationError","setLocationError","get","then","response","catch","fetchUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","post","headers","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","to","path","element","style","color","marginTop","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n\nfunction App() {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [weatherData, setWeatherData] = useState(null);\n    const [locationError, setLocationError] = useState(null);\n\n    // Fetch test data from backend\n    useEffect(() => {\n        axios.get('http://127.0.0.1:8000/api/test/')\n            .then(response => {\n                setData(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            });\n    }, []);\n\n    // Fetch user location and send to backend\n    useEffect(() => {\n        const fetchUserLocation = () => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    async (position) => {\n                        const { latitude, longitude } = position.coords;\n                        try {\n                            const response = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/', \n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/json' } }\n                            );\n                            setWeatherData(response.data);\n                        } catch (err) {\n                            setLocationError('Failed to get weather data');\n                            console.error(\"Weather API error:\", err);\n                        }\n                    },\n                    (error) => {\n                        setLocationError('Location access denied');\n                        console.error(\"Geolocation error:\", error);\n                    }\n                );\n            } else {\n                setLocationError('Geolocation not supported');\n            }\n        };\n\n        fetchUserLocation();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error.message}</div>;\n\n    return (\n        <Router>\n            <div>\n                <header>\n                    <nav>\n                        <Link to=\"/\">Home</Link>\n                    </nav>\n                </header>\n\n                <Routes>\n                    <Route path=\"/\" element={\n                        <div>\n                            <h1>Welcome to the React Frontend</h1>\n                            <p>Backend Response: {data?.message}</p>\n                            \n                            {locationError ? (\n                                <div style={{ color: 'red', marginTop: '20px' }}>\n                                    Location Error: {locationError}\n                                </div>\n                            ) : weatherData ? (\n                                <div style={{ marginTop: '20px' }}>\n                                    <h2>Weather Information</h2>\n                                    <pre>{JSON.stringify(weatherData, null, 2)}</pre>\n                                </div>\n                            ) : (\n                                <div style={{ marginTop: '20px' }}>\n                                    Loading weather data...\n                                </div>\n                            )}\n                        </div>\n                    } />\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACoB,GAAG,CAAC,iCAAiC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAI;MACdX,OAAO,CAACW,QAAQ,CAACZ,IAAI,CAAC;MACtBG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDU,KAAK,CAACT,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAd,SAAS,CAAC,MAAM;IACZ,MAAMyB,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpC,MAAOC,QAAQ,IAAK;UAChB,MAAM;YAAEC,QAAQ;YAAEC;UAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;UAC/C,IAAI;YACA,MAAMT,QAAQ,GAAG,MAAMtB,KAAK,CAACgC,IAAI,CAC7B,wCAAwC,EACxC;cAAEH,QAAQ;cAAEC;YAAU,CAAC,EACvB;cAAEG,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAmB;YAAE,CACtD,CAAC;YACDhB,cAAc,CAACK,QAAQ,CAACZ,IAAI,CAAC;UACjC,CAAC,CAAC,OAAOwB,GAAG,EAAE;YACVf,gBAAgB,CAAC,4BAA4B,CAAC;YAC9CgB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,EAAEoB,GAAG,CAAC;UAC5C;QACJ,CAAC,EACApB,KAAK,IAAK;UACPK,gBAAgB,CAAC,wBAAwB,CAAC;UAC1CgB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC9C,CACJ,CAAC;MACL,CAAC,MAAM;QACHK,gBAAgB,CAAC,2BAA2B,CAAC;MACjD;IACJ,CAAC;IAEDK,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIZ,OAAO,EAAE,oBAAOL,OAAA;IAAA6B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAI1B,KAAK,EAAE,oBAAOP,OAAA;IAAA6B,QAAA,GAAK,SAAO,EAACtB,KAAK,CAAC2B,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEnD,oBACIjC,OAAA,CAACL,MAAM;IAAAkC,QAAA,eACH7B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QAAA6B,QAAA,eACI7B,OAAA;UAAA6B,QAAA,eACI7B,OAAA,CAACF,IAAI;YAACqC,EAAE,EAAC,GAAG;YAAAN,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAETjC,OAAA,CAACH,MAAM;QAAAgC,QAAA,eACH7B,OAAA,CAACJ,KAAK;UAACwC,IAAI,EAAC,GAAG;UAACC,OAAO,eACnBrC,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAI;YAA6B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtCjC,OAAA;cAAA6B,QAAA,GAAG,oBAAkB,EAAC1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+B,OAAO;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAEvCtB,aAAa,gBACVX,OAAA;cAAKsC,KAAK,EAAE;gBAAEC,KAAK,EAAE,KAAK;gBAAEC,SAAS,EAAE;cAAO,CAAE;cAAAX,QAAA,GAAC,kBAC7B,EAAClB,aAAa;YAAA;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,GACNxB,WAAW,gBACXT,OAAA;cAAKsC,KAAK,EAAE;gBAAEE,SAAS,EAAE;cAAO,CAAE;cAAAX,QAAA,gBAC9B7B,OAAA;gBAAA6B,QAAA,EAAI;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC5BjC,OAAA;gBAAA6B,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACjC,WAAW,EAAE,IAAI,EAAE,CAAC;cAAC;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,gBAENjC,OAAA;cAAKsC,KAAK,EAAE;gBAAEE,SAAS,EAAE;cAAO,CAAE;cAAAX,QAAA,EAAC;YAEnC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAAC/B,EAAA,CA1FQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA4FZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}