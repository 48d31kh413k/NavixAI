{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed, convertDistance, formatDistance } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  appSettings\n}) => {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$, _weatherData$main2, _weatherData$main3, _weatherData$uv;\n  const navigate = useNavigate();\n  const [weatherData, setWeatherData] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('All Activities');\n  const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n  const [likedPlaces, setLikedPlaces] = useState(new Set()); // Track liked places\n\n  // Debug activities changes\n  useEffect(() => {\n    console.log('Activities state changed. Count:', activities.length);\n    if (activities.length === 0 && !loading) {\n      console.warn('Activities array is empty but not loading!');\n    }\n  }, [activities, loading]);\n  const activityCategories = ['All Activities', 'Outdoor Adventures', 'Relaxing Indoors', 'Cultural Experiences', 'Family Fun'];\n\n  // Transform backend activity data to show individual places with real names\n  const transformActivitiesFromBackend = backendActivities => {\n    const allPlaces = [];\n    let placeId = 1;\n    backendActivities.forEach(activity => {\n      if (activity.places && activity.places.length > 0) {\n        activity.places.forEach(place => {\n          allPlaces.push({\n            id: placeId++,\n            name: place.name || 'Unknown Place',\n            // Real place name\n            category: mapActivityToCategory(activity.activity_name),\n            description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n            photos: place.photos || [],\n            // All photos array\n            rating: place.rating || 4.0,\n            reviews: place.user_ratings_total || 0,\n            walkingTime: place.walking_time || null,\n            drivingTime: place.driving_time || null,\n            walkingDistance: place.walking_distance || null,\n            drivingDistance: place.driving_distance || null,\n            activity_name: activity.activity_name,\n            place_count: 1,\n            places: [place],\n            // The actual place data\n            place_id: place.place_id,\n            vicinity: place.vicinity,\n            types: place.types || []\n          });\n        });\n      }\n    });\n    return allPlaces;\n  };\n\n  // Map activity names to our frontend categories\n  const mapActivityToCategory = activityName => {\n    if (!activityName) return 'All Activities';\n    console.log('Mapping activity to category:', activityName);\n    const categoryMap = {\n      // Outdoor Adventures\n      'park': 'Outdoor Adventures',\n      'hiking': 'Outdoor Adventures',\n      'garden': 'Outdoor Adventures',\n      'beach': 'Outdoor Adventures',\n      'outdoor sports': 'Outdoor Adventures',\n      'sports': 'Outdoor Adventures',\n      'trail': 'Outdoor Adventures',\n      // Indoor Relaxation\n      'cafe': 'Relaxing Indoors',\n      'spa': 'Relaxing Indoors',\n      'library': 'Relaxing Indoors',\n      'bookstore': 'Relaxing Indoors',\n      'tea house': 'Relaxing Indoors',\n      'cinema': 'Relaxing Indoors',\n      // Cultural Exploration\n      'museum': 'Cultural Experiences',\n      'gallery': 'Cultural Experiences',\n      'theater': 'Cultural Experiences',\n      'historical': 'Cultural Experiences',\n      'cultural center': 'Cultural Experiences',\n      'art': 'Cultural Experiences',\n      // Culinary Delights\n      'restaurant': 'Family Fun',\n      'food market': 'Family Fun',\n      'bakery': 'Family Fun',\n      'wine bar': 'Family Fun',\n      'cooking': 'Family Fun',\n      'market': 'Family Fun',\n      // General\n      'shopping': 'Family Fun',\n      'mall': 'Family Fun'\n    };\n    const lowerActivity = activityName.toLowerCase();\n    for (const [key, category] of Object.entries(categoryMap)) {\n      if (lowerActivity.includes(key)) {\n        console.log(`\"${activityName}\" -> \"${category}\" (matched \"${key}\")`);\n        return category;\n      }\n    }\n    console.log(`\"${activityName}\" -> \"All Activities\" (no match found)`);\n    return 'All Activities';\n  };\n  useEffect(() => {\n    fetchWeatherAndActivities();\n  }, []);\n\n  // Load liked places whenever activities change\n  useEffect(() => {\n    if (activities.length > 0) {\n      loadLikedPlaces();\n    }\n  }, [activities]);\n  const loadLikedPlaces = () => {\n    const liked = userPreferences.getLikedPlaces();\n    const likedPlaceIds = new Set();\n    liked.forEach(place => {\n      if (place.placeId) likedPlaceIds.add(place.placeId);\n      // Also check for activities with same name/vicinity as fallback\n      activities.forEach(activity => {\n        if (activity.name === place.name && activity.vicinity === place.vicinity) {\n          if (activity.place_id) likedPlaceIds.add(activity.place_id);\n          if (activity.id) likedPlaceIds.add(activity.id);\n        }\n      });\n    });\n    setLikedPlaces(likedPlaceIds);\n  };\n  const fetchWeatherAndActivities = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n          console.log('With data:', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {}\n          });\n\n          // Fetch activities and weather data from the activity suggestion API\n          const activityResponse = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            // Get more activities for variety\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {} // Send user activity preferences\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('API Response:', activityResponse.data);\n          if (activityResponse.data && activityResponse.data.activities) {\n            console.log('Received activities from backend:', activityResponse.data.activities);\n            // Transform backend activities to match frontend format\n            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n            console.log('Transformed activities:', transformedActivities);\n\n            // Debug: Check categories\n            const categoryCount = {};\n            transformedActivities.forEach(activity => {\n              const cat = activity.category;\n              categoryCount[cat] = (categoryCount[cat] || 0) + 1;\n            });\n            console.log('Activities by category:', categoryCount);\n\n            // Sort activities by user preferences\n            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n            setActivities(sortedActivities);\n\n            // Set weather data from the same response\n            if (activityResponse.data.weather) {\n              setWeatherData(activityResponse.data.weather);\n            }\n          } else {\n            console.log('No activities in backend response:', activityResponse.data);\n            setActivities([]);\n          }\n        } catch (error) {\n          console.error('Activity fetch error:', error);\n          // Fallback to weather-only API if activity API fails\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n          } catch (weatherError) {\n            console.error('Weather fetch error:', weatherError);\n            // Mock weather data for demo\n            setWeatherData({\n              name: 'New York City',\n              main: {\n                temp: 22,\n                feels_like: 24,\n                humidity: 65\n              },\n              weather: [{\n                description: 'sunny with clear skies',\n                main: 'Clear'\n              }],\n              wind: {\n                speed: 10\n              },\n              visibility: 10000,\n              uv: {\n                value: 6\n              }\n            });\n          }\n          console.log('No activities received from backend, setting empty array');\n          setActivities([]);\n        }\n        setLoading(false);\n      }, error => {\n        console.error('Geolocation error:', error);\n        // Set fallback weather data and empty activities\n        setWeatherData({\n          name: 'Current Location',\n          main: {\n            temp: 22,\n            feels_like: 24,\n            humidity: 65\n          },\n          weather: [{\n            description: 'sunny with clear skies',\n            main: 'Clear'\n          }],\n          wind: {\n            speed: 10\n          },\n          visibility: 10000\n        });\n        setActivities([]);\n        setLoading(false);\n      });\n    }\n  };\n\n  // Filter and sort activities with priority mixing\n  const getFilteredAndSortedActivities = () => {\n    let filtered = activities;\n\n    // Filter by category (if specific category selected)\n    if (selectedCategory !== 'All Activities') {\n      filtered = filtered.filter(activity => activity.category === selectedCategory);\n      // Sort by reviews if specific category\n      return filtered.sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    }\n\n    // For \"All Activities\", create priority mixed list\n    // First sort all activities by reviews within each category\n    const sortedByCategory = {};\n    filtered.forEach(activity => {\n      const category = activity.category || 'Other';\n      if (!sortedByCategory[category]) {\n        sortedByCategory[category] = [];\n      }\n      sortedByCategory[category].push(activity);\n    });\n\n    // Sort each category by number of reviews\n    Object.keys(sortedByCategory).forEach(category => {\n      sortedByCategory[category].sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    });\n\n    // Create mixed priority list with balanced representation\n    const mixedActivities = [];\n\n    // Equal priority: 3 from each main category\n    const familyFun = sortedByCategory['Family Fun'] || [];\n    const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n    const culturalExperiences = sortedByCategory['Cultural Experiences'] || [];\n    const outdoorAdventures = sortedByCategory['Outdoor Adventures'] || [];\n\n    // Add 3 from each main category for balanced representation\n    mixedActivities.push(...familyFun.slice(0, 3));\n    mixedActivities.push(...relaxingIndoors.slice(0, 3));\n    mixedActivities.push(...culturalExperiences.slice(0, 3));\n    mixedActivities.push(...outdoorAdventures.slice(0, 3));\n\n    // Add remaining activities from any other categories\n    Object.keys(sortedByCategory).forEach(category => {\n      if (!['Family Fun', 'Relaxing Indoors', 'Cultural Experiences', 'Outdoor Adventures'].includes(category)) {\n        mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n      }\n    });\n\n    // Shuffle the mixed activities to avoid grouping by category\n    const shuffled = [...mixedActivities];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  const getFilteredActivities = () => {\n    // Use the new sorting function instead\n    return getFilteredAndSortedActivities();\n  };\n  const getTemperature = temp => {\n    var _appSettings$units;\n    if (!(appSettings !== null && appSettings !== void 0 && (_appSettings$units = appSettings.units) !== null && _appSettings$units !== void 0 && _appSettings$units.temperature) || !temp) return Math.round(temp);\n    // Weather API returns Celsius, convert if needed\n    const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n    return convertedTemp;\n  };\n  const getTemperatureUnit = () => {\n    var _appSettings$units2;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units2 = appSettings.units) === null || _appSettings$units2 === void 0 ? void 0 : _appSettings$units2.temperature) === 'Fahrenheit (°F)' ? '°F' : '°C';\n  };\n  const getWindSpeed = () => {\n    var _weatherData$wind, _appSettings$units3;\n    if (!(weatherData !== null && weatherData !== void 0 && (_weatherData$wind = weatherData.wind) !== null && _weatherData$wind !== void 0 && _weatherData$wind.speed)) return 10;\n    // Weather API returns m/s, convert to appropriate unit\n    const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units3 = appSettings.units) === null || _appSettings$units3 === void 0 ? void 0 : _appSettings$units3.distance) === 'Miles (mi)') {\n      const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n      return Math.round(speedInMph);\n    }\n    return Math.round(speedInKmh);\n  };\n  const getSpeedUnit = () => {\n    var _appSettings$units4;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units4 = appSettings.units) === null || _appSettings$units4 === void 0 ? void 0 : _appSettings$units4.distance) === 'Miles (mi)' ? 'mph' : 'km/h';\n  };\n  const getDistance = distanceString => {\n    var _appSettings$units5;\n    if (!distanceString || !(appSettings !== null && appSettings !== void 0 && (_appSettings$units5 = appSettings.units) !== null && _appSettings$units5 !== void 0 && _appSettings$units5.distance)) return distanceString;\n\n    // Extract the numeric value and unit from the distance string (e.g., \"1.2 km\")\n    const match = distanceString.match(/^([\\d.]+)\\s*(km|mi)$/);\n    if (!match) return distanceString;\n    const [, value, currentUnit] = match;\n    const numericValue = parseFloat(value);\n    const currentUnitFull = currentUnit === 'km' ? 'Kilometers (km)' : 'Miles (mi)';\n\n    // Convert if the current unit doesn't match the user's preference\n    if (currentUnitFull !== appSettings.units.distance) {\n      const convertedValue = convertDistance(numericValue, currentUnitFull, appSettings.units.distance);\n      const newUnit = appSettings.units.distance === 'Miles (mi)' ? 'mi' : 'km';\n      return `${convertedValue} ${newUnit}`;\n    }\n    return distanceString;\n  };\n  const getDistanceUnit = () => {\n    var _appSettings$units6;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units6 = appSettings.units) === null || _appSettings$units6 === void 0 ? void 0 : _appSettings$units6.distance) === 'Miles (mi)' ? 'mi' : 'km';\n  };\n  const handleLikeActivity = activity => {\n    try {\n      const activityKey = activity.place_id || activity.id;\n\n      // Check if already liked to prevent double-processing\n      if (likedPlaces.has(activityKey)) {\n        console.log('Activity already liked:', activity.name);\n        return;\n      }\n      console.log('Liking activity:', activity.name, 'ID:', activityKey);\n\n      // Like the place\n      const placeData = {\n        place_id: activity.place_id || activity.id,\n        name: activity.name,\n        vicinity: activity.vicinity,\n        rating: activity.rating,\n        types: activity.types || []\n      };\n\n      // Save to preferences\n      userPreferences.likePlace(placeData, activity.activity_name || 'general');\n\n      // Update local state immediately to reflect the change\n      setLikedPlaces(prev => {\n        const newSet = new Set(prev);\n        if (activity.place_id) newSet.add(activity.place_id);\n        if (activity.id) newSet.add(activity.id);\n        console.log('Updated liked places set:', newSet);\n        return newSet;\n      });\n      console.log('Successfully liked activity:', activity.name);\n    } catch (error) {\n      console.error('Error liking activity:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your personalized recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navix-logo\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-text\",\n              children: \"NavixAI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-separator\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            onClick: () => navigate('/settings'),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather & Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp-value\",\n            children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) || 22), getTemperatureUnit()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-description\",\n            children: (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description) || 'Sunny with clear skies'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [(weatherData === null || weatherData === void 0 ? void 0 : weatherData.name) || 'Current Location', \" \\u2022 Today, \", new Date().toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Feels like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.feels_like) || 24), getTemperatureUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main3 = weatherData.main) === null || _weatherData$main3 === void 0 ? void 0 : _weatherData$main3.humidity) || 65, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getWindSpeed(), \" \", getSpeedUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$uv = weatherData.uv) === null || _weatherData$uv === void 0 ? void 0 : _weatherData$uv.value) || 6, \" (High)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-preferences-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preferences-text\",\n            children: userPreferences.getPreferredActivities().length > 0 ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned` : \"🔍 Building your preferences...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), activityCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `category-btn ${selectedCategory === category ? 'active' : ''}`,\n            onClick: () => setSelectedCategory(category),\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activities-grid\",\n        children: getFilteredActivities().map((activity, index) => {\n          const stableKey = activity.place_id || activity.id || `activity-${index}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-image\",\n              children: [/*#__PURE__*/_jsxDEV(PhotoCarousel, {\n                photos: (() => {\n                  const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                  console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                  return photos;\n                })(),\n                altText: activity.name,\n                className: \"activity-carousel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-category\",\n                children: activity.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"activity-description\",\n                children: activity.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stars\",\n                    children: ['★'.repeat(Math.floor(activity.rating)), '☆'.repeat(5 - Math.floor(activity.rating))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-text\",\n                    children: [activity.rating, \" (\", activity.reviews, \" reviews)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"activity-info\",\n                  children: [activity.walkingTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"travel-time walking\",\n                    children: [\"\\uD83D\\uDEB6 \", activity.walkingTime, activity.walkingDistance && ` (${getDistance(activity.walkingDistance)})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 45\n                  }, this), activity.drivingTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"travel-time driving\",\n                    children: [\"\\uD83D\\uDE97 \", activity.drivingTime, activity.drivingDistance && ` (${getDistance(activity.drivingDistance)})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 45\n                  }, this), !activity.walkingTime && !activity.drivingTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"travel-time loading\",\n                    children: \"\\u23F1\\uFE0F Calculating...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `like-btn ${likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id) ? 'liked' : ''}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleLikeActivity(activity);\n                  },\n                  disabled: likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id),\n                  title: likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id) ? 'Added to favorites' : 'Add to favorites',\n                  children: likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id) ? '❤️' : '🤍'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-details-btn\",\n                  onClick: () => {\n                    // Store current activities in localStorage for place detail access\n                    localStorage.setItem('recent_activities', JSON.stringify(activities));\n\n                    // Navigate with the actual place data\n                    const place = activity.places[0]; // This is the actual place\n                    navigate(`/place/${activity.place_id || activity.id}`, {\n                      state: {\n                        place: place,\n                        activityName: activity.activity_name\n                      }\n                    });\n                  },\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this)]\n          }, stableKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-cta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Refine Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your preferences to get even better activity suggestions tailored just for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"goto-preferences-btn\",\n        children: \"Go to Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"tTUvytabExbOSvzlqG0ZrzcYBkA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","userPreferences","convertTemperature","convertSpeed","convertDistance","formatDistance","PhotoCarousel","jsxDEV","_jsxDEV","Dashboard","appSettings","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","_weatherData$main2","_weatherData$main3","_weatherData$uv","navigate","weatherData","setWeatherData","activities","setActivities","loading","setLoading","selectedCategory","setSelectedCategory","userPreferenceState","setUserPreferenceState","likedPlaces","setLikedPlaces","Set","console","log","length","warn","activityCategories","transformActivitiesFromBackend","backendActivities","allPlaces","placeId","forEach","activity","places","place","push","id","name","category","mapActivityToCategory","activity_name","description","vicinity","photos","rating","reviews","user_ratings_total","walkingTime","walking_time","drivingTime","driving_time","walkingDistance","walking_distance","drivingDistance","driving_distance","place_count","place_id","types","activityName","categoryMap","lowerActivity","toLowerCase","key","Object","entries","includes","fetchWeatherAndActivities","loadLikedPlaces","liked","getLikedPlaces","likedPlaceIds","add","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","max_activities","activityResponse","post","headers","data","transformedActivities","categoryCount","cat","sortedActivities","sortActivitiesByPreference","weather","error","weatherResponse","weatherError","main","temp","feels_like","humidity","wind","speed","visibility","uv","value","getFilteredAndSortedActivities","filtered","filter","sort","a","b","sortedByCategory","keys","mixedActivities","familyFun","relaxingIndoors","culturalExperiences","outdoorAdventures","slice","shuffled","i","j","Math","floor","random","getFilteredActivities","getTemperature","_appSettings$units","units","temperature","round","convertedTemp","getTemperatureUnit","_appSettings$units2","getWindSpeed","_weatherData$wind","_appSettings$units3","speedInKmh","distance","speedInMph","getSpeedUnit","_appSettings$units4","getDistance","distanceString","_appSettings$units5","match","currentUnit","numericValue","parseFloat","currentUnitFull","convertedValue","newUnit","getDistanceUnit","_appSettings$units6","handleLikeActivity","activityKey","has","placeData","likePlace","prev","newSet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","toLocaleDateString","weekday","month","day","getPreferredActivities","map","index","stableKey","altText","repeat","e","stopPropagation","disabled","title","localStorage","setItem","JSON","stringify","state","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed, convertDistance, formatDistance } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\n\nconst Dashboard = ({ appSettings }) => {\n    const navigate = useNavigate();\n    const [weatherData, setWeatherData] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedCategory, setSelectedCategory] = useState('All Activities');\n    const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n    const [likedPlaces, setLikedPlaces] = useState(new Set()); // Track liked places\n\n    // Debug activities changes\n    useEffect(() => {\n        console.log('Activities state changed. Count:', activities.length);\n        if (activities.length === 0 && !loading) {\n            console.warn('Activities array is empty but not loading!');\n        }\n    }, [activities, loading]);\n\n    const activityCategories = [\n        'All Activities',\n        'Outdoor Adventures', \n        'Relaxing Indoors',\n        'Cultural Experiences',\n        'Family Fun'\n    ];\n\n    // Transform backend activity data to show individual places with real names\n    const transformActivitiesFromBackend = (backendActivities) => {\n        const allPlaces = [];\n        let placeId = 1;\n        \n        backendActivities.forEach((activity) => {\n            if (activity.places && activity.places.length > 0) {\n                activity.places.forEach((place) => {\n                    allPlaces.push({\n                        id: placeId++,\n                        name: place.name || 'Unknown Place', // Real place name\n                        category: mapActivityToCategory(activity.activity_name),\n                        description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n                        photos: place.photos || [], // All photos array\n                        rating: place.rating || 4.0,\n                        reviews: place.user_ratings_total || 0,\n                        walkingTime: place.walking_time || null,\n                        drivingTime: place.driving_time || null,\n                        walkingDistance: place.walking_distance || null,\n                        drivingDistance: place.driving_distance || null,\n                        activity_name: activity.activity_name,\n                        place_count: 1,\n                        places: [place], // The actual place data\n                        place_id: place.place_id,\n                        vicinity: place.vicinity,\n                        types: place.types || []\n                    });\n                });\n            }\n        });\n        \n        return allPlaces;\n    };\n\n    // Map activity names to our frontend categories\n    const mapActivityToCategory = (activityName) => {\n        if (!activityName) return 'All Activities';\n        \n        console.log('Mapping activity to category:', activityName);\n        \n        const categoryMap = {\n            // Outdoor Adventures\n            'park': 'Outdoor Adventures',\n            'hiking': 'Outdoor Adventures',\n            'garden': 'Outdoor Adventures',\n            'beach': 'Outdoor Adventures',\n            'outdoor sports': 'Outdoor Adventures',\n            'sports': 'Outdoor Adventures',\n            'trail': 'Outdoor Adventures',\n            \n            // Indoor Relaxation\n            'cafe': 'Relaxing Indoors',\n            'spa': 'Relaxing Indoors',\n            'library': 'Relaxing Indoors',\n            'bookstore': 'Relaxing Indoors',\n            'tea house': 'Relaxing Indoors',\n            'cinema': 'Relaxing Indoors',\n            \n            // Cultural Exploration\n            'museum': 'Cultural Experiences',\n            'gallery': 'Cultural Experiences',\n            'theater': 'Cultural Experiences',\n            'historical': 'Cultural Experiences',\n            'cultural center': 'Cultural Experiences',\n            'art': 'Cultural Experiences',\n            \n            // Culinary Delights\n            'restaurant': 'Family Fun',\n            'food market': 'Family Fun',\n            'bakery': 'Family Fun',\n            'wine bar': 'Family Fun',\n            'cooking': 'Family Fun',\n            'market': 'Family Fun',\n            \n            // General\n            'shopping': 'Family Fun',\n            'mall': 'Family Fun'\n        };\n        \n        const lowerActivity = activityName.toLowerCase();\n        for (const [key, category] of Object.entries(categoryMap)) {\n            if (lowerActivity.includes(key)) {\n                console.log(`\"${activityName}\" -> \"${category}\" (matched \"${key}\")`);\n                return category;\n            }\n        }\n        \n        console.log(`\"${activityName}\" -> \"All Activities\" (no match found)`);\n        return 'All Activities';\n    };\n\n    useEffect(() => {\n        fetchWeatherAndActivities();\n    }, []);\n\n    // Load liked places whenever activities change\n    useEffect(() => {\n        if (activities.length > 0) {\n            loadLikedPlaces();\n        }\n    }, [activities]);\n\n    const loadLikedPlaces = () => {\n        const liked = userPreferences.getLikedPlaces();\n        const likedPlaceIds = new Set();\n        liked.forEach(place => {\n            if (place.placeId) likedPlaceIds.add(place.placeId);\n            // Also check for activities with same name/vicinity as fallback\n            activities.forEach(activity => {\n                if (activity.name === place.name && activity.vicinity === place.vicinity) {\n                    if (activity.place_id) likedPlaceIds.add(activity.place_id);\n                    if (activity.id) likedPlaceIds.add(activity.id);\n                }\n            });\n        });\n        setLikedPlaces(likedPlaceIds);\n    };\n\n    const fetchWeatherAndActivities = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    \n                    try {\n                        console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n                        console.log('With data:', { \n                            latitude, \n                            longitude, \n                            max_activities: 8,\n                            activities: appSettings?.activities || {}\n                        });\n                        \n                        // Fetch activities and weather data from the activity suggestion API\n                        const activityResponse = await axios.post(\n                            'http://127.0.0.1:8000/api/activity-suggestion/',\n                            { \n                                latitude, \n                                longitude,\n                                max_activities: 8,  // Get more activities for variety\n                                activities: appSettings?.activities || {}  // Send user activity preferences\n                            },\n                            { \n                                headers: { 'Content-Type': 'application/json' } \n                            }\n                        );\n                        \n                        console.log('API Response:', activityResponse.data);\n                        \n                        if (activityResponse.data && activityResponse.data.activities) {\n                            console.log('Received activities from backend:', activityResponse.data.activities);\n                            // Transform backend activities to match frontend format\n                            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n                            console.log('Transformed activities:', transformedActivities);\n                            \n                            // Debug: Check categories\n                            const categoryCount = {};\n                            transformedActivities.forEach(activity => {\n                                const cat = activity.category;\n                                categoryCount[cat] = (categoryCount[cat] || 0) + 1;\n                            });\n                            console.log('Activities by category:', categoryCount);\n                            \n                            // Sort activities by user preferences\n                            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n                            setActivities(sortedActivities);\n                            \n                            // Set weather data from the same response\n                            if (activityResponse.data.weather) {\n                                setWeatherData(activityResponse.data.weather);\n                            }\n                        } else {\n                            console.log('No activities in backend response:', activityResponse.data);\n                            setActivities([]);\n                        }\n                    } catch (error) {\n                        console.error('Activity fetch error:', error);\n                        // Fallback to weather-only API if activity API fails\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/',\n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                        } catch (weatherError) {\n                            console.error('Weather fetch error:', weatherError);\n                            // Mock weather data for demo\n                            setWeatherData({\n                                name: 'New York City',\n                                main: { temp: 22, feels_like: 24, humidity: 65 },\n                                weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                                wind: { speed: 10 },\n                                visibility: 10000,\n                                uv: { value: 6 }\n                            });\n                        }\n                        \n                        console.log('No activities received from backend, setting empty array');\n                        setActivities([]);\n                    }\n                    setLoading(false);\n                },\n                (error) => {\n                    console.error('Geolocation error:', error);\n                    // Set fallback weather data and empty activities\n                    setWeatherData({\n                        name: 'Current Location',\n                        main: { temp: 22, feels_like: 24, humidity: 65 },\n                        weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                        wind: { speed: 10 },\n                        visibility: 10000\n                    });\n                    setActivities([]);\n                    setLoading(false);\n                }\n            );\n        }\n    };\n\n    // Filter and sort activities with priority mixing\n    const getFilteredAndSortedActivities = () => {\n        let filtered = activities;\n        \n        // Filter by category (if specific category selected)\n        if (selectedCategory !== 'All Activities') {\n            filtered = filtered.filter(activity => activity.category === selectedCategory);\n            // Sort by reviews if specific category\n            return filtered.sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        }\n        \n        // For \"All Activities\", create priority mixed list\n        // First sort all activities by reviews within each category\n        const sortedByCategory = {};\n        filtered.forEach(activity => {\n            const category = activity.category || 'Other';\n            if (!sortedByCategory[category]) {\n                sortedByCategory[category] = [];\n            }\n            sortedByCategory[category].push(activity);\n        });\n        \n        // Sort each category by number of reviews\n        Object.keys(sortedByCategory).forEach(category => {\n            sortedByCategory[category].sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        });\n        \n        // Create mixed priority list with balanced representation\n        const mixedActivities = [];\n        \n        // Equal priority: 3 from each main category\n        const familyFun = sortedByCategory['Family Fun'] || [];\n        const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n        const culturalExperiences = sortedByCategory['Cultural Experiences'] || [];\n        const outdoorAdventures = sortedByCategory['Outdoor Adventures'] || [];\n        \n        // Add 3 from each main category for balanced representation\n        mixedActivities.push(...familyFun.slice(0, 3));\n        mixedActivities.push(...relaxingIndoors.slice(0, 3));\n        mixedActivities.push(...culturalExperiences.slice(0, 3));\n        mixedActivities.push(...outdoorAdventures.slice(0, 3));\n        \n        // Add remaining activities from any other categories\n        Object.keys(sortedByCategory).forEach(category => {\n            if (!['Family Fun', 'Relaxing Indoors', 'Cultural Experiences', 'Outdoor Adventures'].includes(category)) {\n                mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n            }\n        });\n        \n        // Shuffle the mixed activities to avoid grouping by category\n        const shuffled = [...mixedActivities];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        \n        return shuffled;\n    };\n\n    const getFilteredActivities = () => {\n        // Use the new sorting function instead\n        return getFilteredAndSortedActivities();\n    };\n\n    const getTemperature = (temp) => {\n        if (!appSettings?.units?.temperature || !temp) return Math.round(temp);\n        // Weather API returns Celsius, convert if needed\n        const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n        return convertedTemp;\n    };\n\n    const getTemperatureUnit = () => {\n        return appSettings?.units?.temperature === 'Fahrenheit (°F)' ? '°F' : '°C';\n    };\n\n    const getWindSpeed = () => {\n        if (!weatherData?.wind?.speed) return 10;\n        // Weather API returns m/s, convert to appropriate unit\n        const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n            return Math.round(speedInMph);\n        }\n        return Math.round(speedInKmh);\n    };\n\n    const getSpeedUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mph' : 'km/h';\n    };\n\n    const getDistance = (distanceString) => {\n        if (!distanceString || !appSettings?.units?.distance) return distanceString;\n        \n        // Extract the numeric value and unit from the distance string (e.g., \"1.2 km\")\n        const match = distanceString.match(/^([\\d.]+)\\s*(km|mi)$/);\n        if (!match) return distanceString;\n        \n        const [, value, currentUnit] = match;\n        const numericValue = parseFloat(value);\n        const currentUnitFull = currentUnit === 'km' ? 'Kilometers (km)' : 'Miles (mi)';\n        \n        // Convert if the current unit doesn't match the user's preference\n        if (currentUnitFull !== appSettings.units.distance) {\n            const convertedValue = convertDistance(numericValue, currentUnitFull, appSettings.units.distance);\n            const newUnit = appSettings.units.distance === 'Miles (mi)' ? 'mi' : 'km';\n            return `${convertedValue} ${newUnit}`;\n        }\n        \n        return distanceString;\n    };\n\n    const getDistanceUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mi' : 'km';\n    };\n\n    const handleLikeActivity = (activity) => {\n        try {\n            const activityKey = activity.place_id || activity.id;\n            \n            // Check if already liked to prevent double-processing\n            if (likedPlaces.has(activityKey)) {\n                console.log('Activity already liked:', activity.name);\n                return;\n            }\n            \n            console.log('Liking activity:', activity.name, 'ID:', activityKey);\n            \n            // Like the place\n            const placeData = {\n                place_id: activity.place_id || activity.id,\n                name: activity.name,\n                vicinity: activity.vicinity,\n                rating: activity.rating,\n                types: activity.types || []\n            };\n            \n            // Save to preferences\n            userPreferences.likePlace(placeData, activity.activity_name || 'general');\n            \n            // Update local state immediately to reflect the change\n            setLikedPlaces(prev => {\n                const newSet = new Set(prev);\n                if (activity.place_id) newSet.add(activity.place_id);\n                if (activity.id) newSet.add(activity.id);\n                console.log('Updated liked places set:', newSet);\n                return newSet;\n            });\n            \n            console.log('Successfully liked activity:', activity.name);\n            \n        } catch (error) {\n            console.error('Error liking activity:', error);\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading your personalized recommendations...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"dashboard\">\n            {/* Top Header with NavixAI Logo */}\n            <div className=\"dashboard-header\">\n                <div className=\"header-content\">\n                    <div className=\"header-left\">\n                        <div className=\"navix-logo\">\n                            <span className=\"logo-text\">NavixAI</span>\n                        </div>\n                        <div className=\"header-separator\">|</div>\n                        <h1>Dashboard</h1>\n                    </div>\n                    <div className=\"header-actions\">\n                        <div className=\"user-profile\" onClick={() => navigate('/settings')}>\n                            <div className=\"user-avatar\">👤</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Weather Section */}\n            <div className=\"weather-section\">\n                <h2>Current Weather & Conditions</h2>\n                <div className=\"weather-main\">\n                    <div className=\"temperature\">\n                        <span className=\"temp-value\">{getTemperature(weatherData?.main?.temp || 22)}{getTemperatureUnit()}</span>\n                        <p className=\"weather-description\">\n                            {weatherData?.weather?.[0]?.description || 'Sunny with clear skies'}\n                        </p>\n                        <p className=\"location\">{weatherData?.name || 'Current Location'} • Today, {new Date().toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</p>\n                    </div>\n                    \n                    <div className=\"weather-details\">\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Feels like</span>\n                            <span className=\"stat-value\">{getTemperature(weatherData?.main?.feels_like || 24)}{getTemperatureUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Humidity</span>\n                            <span className=\"stat-value\">{weatherData?.main?.humidity || 65}%</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Wind</span>\n                            <span className=\"stat-value\">{getWindSpeed()} {getSpeedUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">UV Index</span>\n                            <span className=\"stat-value\">{weatherData?.uv?.value || 6} (High)</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Activities Section */}\n            <div className=\"activities-section\">\n                <div className=\"section-header\">\n                    <h2>Recommended Activities</h2>\n                    <div className=\"user-preferences-summary\">\n                        <span className=\"preferences-text\">\n                            {userPreferences.getPreferredActivities().length > 0 \n                                ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned`\n                                : \"🔍 Building your preferences...\"\n                            }\n                        </span>\n                    </div>\n                </div>\n                \n                {/* Category Filter */}\n                <div className=\"filters-container\">\n                    <div className=\"category-filter\">\n                        <h3>Categories</h3>\n                        {activityCategories.map(category => (\n                            <button\n                                key={category}\n                                className={`category-btn ${selectedCategory === category ? 'active' : ''}`}\n                                onClick={() => setSelectedCategory(category)}\n                            >\n                                {category}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Activity Cards Grid */}\n                <div className=\"activities-grid\">\n                    {getFilteredActivities().map((activity, index) => {\n                        const stableKey = activity.place_id || activity.id || `activity-${index}`;\n                        return (\n                            <div key={stableKey} className=\"activity-card\">\n                            <div className=\"activity-image\">\n                                <PhotoCarousel \n                                    photos={(() => {\n                                        const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                                        console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                                        return photos;\n                                    })()}\n                                    altText={activity.name}\n                                    className=\"activity-carousel\"\n                                />\n                                <div className=\"activity-category\">{activity.category}</div>\n                            </div>\n                            <div className=\"activity-content\">\n                                <h3>{activity.name}</h3>\n                                <p className=\"activity-description\">{activity.description}</p>\n                                <div className=\"activity-meta\">\n                                    <div className=\"rating\">\n                                        <span className=\"stars\">\n                                            {'★'.repeat(Math.floor(activity.rating))}\n                                            {'☆'.repeat(5 - Math.floor(activity.rating))}\n                                        </span>\n                                        <span className=\"rating-text\">\n                                            {activity.rating} ({activity.reviews} reviews)\n                                        </span>\n                                    </div>\n                                    <div className=\"activity-info\">\n                                        {activity.walkingTime && (\n                                            <span className=\"travel-time walking\">\n                                                🚶 {activity.walkingTime}\n                                                {activity.walkingDistance && ` (${getDistance(activity.walkingDistance)})`}\n                                            </span>\n                                        )}\n                                        {activity.drivingTime && (\n                                            <span className=\"travel-time driving\">\n                                                🚗 {activity.drivingTime}\n                                                {activity.drivingDistance && ` (${getDistance(activity.drivingDistance)})`}\n                                            </span>\n                                        )}\n                                        {!activity.walkingTime && !activity.drivingTime && (\n                                            <span className=\"travel-time loading\">\n                                                ⏱️ Calculating...\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"activity-actions\">\n                                    <button \n                                        className={`like-btn ${(likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id)) ? 'liked' : ''}`}\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            handleLikeActivity(activity);\n                                        }}\n                                        disabled={likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id)}\n                                        title={(likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id)) ? 'Added to favorites' : 'Add to favorites'}\n                                    >\n                                        {(likedPlaces.has(activity.place_id) || likedPlaces.has(activity.id)) ? '❤️' : '🤍'}\n                                    </button>\n                                    <button \n                                        className=\"view-details-btn\"\n                                        onClick={() => {\n                                            // Store current activities in localStorage for place detail access\n                                            localStorage.setItem('recent_activities', JSON.stringify(activities));\n                                            \n                                            // Navigate with the actual place data\n                                            const place = activity.places[0]; // This is the actual place\n                                            navigate(`/place/${activity.place_id || activity.id}`, {\n                                                state: {\n                                                    place: place,\n                                                    activityName: activity.activity_name\n                                                }\n                                            });\n                                        }}\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        );\n                    })}\n                </div>\n            </div>\n\n            {/* Preferences Reminder */}\n            <div className=\"preferences-cta\">\n                <h3>Refine Your Recommendations</h3>\n                <p>Update your preferences to get even better activity suggestions tailored just for you.</p>\n                <button className=\"goto-preferences-btn\">Go to Preferences</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}