{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Settings from './components/Settings';\nimport Sidebar from './components/Sidebar';\nimport UserHistory from './components/UserHistory';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [locationError, setLocationError] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [selectedActivities, setSelectedActivities] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [userPrefs, setUserPrefs] = useState({});\n\n  // Load user preferences on app start\n  useEffect(() => {\n    const prefs = {};\n    const preferredActivities = userPreferences.getPreferredActivities();\n    preferredActivities.forEach(pref => {\n      prefs[pref.activity] = pref.score;\n    });\n    setUserPrefs(prefs);\n  }, []);\n\n  // Fetch test data from backend\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/test/').then(response => {\n      setData(response.data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch activity suggestion with personalization\n  const fetchActivitySuggestion = async (latitude, longitude) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n        latitude,\n        longitude,\n        max_activities: 8 // Get more activities for better selection\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let activitiesData = response.data.activities || [];\n      console.log('Activities received:', activitiesData);\n\n      // Sort by user preferences\n      activitiesData = userPreferences.sortActivitiesByPreference(activitiesData);\n      setActivities(activitiesData);\n      setCurrentLocation({\n        latitude,\n        longitude\n      });\n    } catch (error) {\n      console.error(\"Failed to fetch activities:\", error);\n      setLocationError('Failed to fetch activities');\n    }\n  };\n\n  // Handle activity selection\n  const handleActivitySelection = selectedActivityNames => {\n    setSelectedActivities(selectedActivityNames);\n\n    // Record user's activity preferences\n    selectedActivityNames.forEach(activityName => {\n      userPreferences.likeActivity(activityName);\n    });\n\n    // Update local preferences state\n    const updatedPrefs = {\n      ...userPrefs\n    };\n    selectedActivityNames.forEach(activityName => {\n      updatedPrefs[activityName] = userPreferences.getActivityScore(activityName);\n    });\n    setUserPrefs(updatedPrefs);\n  };\n\n  // Handle place interactions\n  const handlePlaceLike = (place, activityType) => {\n    userPreferences.likePlace(place, activityType);\n\n    // Update preferences state\n    const updatedPrefs = {\n      ...userPrefs\n    };\n    updatedPrefs[activityType] = userPreferences.getActivityScore(activityType);\n    setUserPrefs(updatedPrefs);\n  };\n  const handlePlaceDislike = (place, activityType) => {\n    userPreferences.dislikePlace(place, activityType);\n\n    // Update preferences state\n    const updatedPrefs = {\n      ...userPrefs\n    };\n    updatedPrefs[activityType] = userPreferences.getActivityScore(activityType);\n    setUserPrefs(updatedPrefs);\n  };\n\n  // Fetch user location, weather, and activity suggestion\n  useEffect(() => {\n    const fetchUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n            await fetchActivitySuggestion(latitude, longitude);\n          } catch (err) {\n            setLocationError('Failed to get weather data');\n            console.error(\"API error:\", err);\n          }\n        }, error => {\n          setLocationError('Location access denied');\n          console.error(\"Geolocation error:\", error);\n        });\n      } else {\n        setLocationError('Geolocation not supported');\n      }\n    };\n    fetchUserLocation();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-brand\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Navix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Discover activities near you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-links\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"nav-link\",\n              children: \"\\uD83C\\uDFE0 Explore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/history\",\n              className: \"nav-link\",\n              children: \"\\uD83D\\uDC64 Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: locationError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Location Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: locationError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => window.location.reload(),\n                  children: \"Try Again\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-banner\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Current Weather\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"weather-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"weather-location\",\n                      children: [\"\\uD83D\\uDCCD \", weatherData.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"weather-temp\",\n                      children: [(_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp, \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"weather-desc\",\n                      children: (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 45\n                }, this), activities && activities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ActivitySelector, {\n                    activities: activities,\n                    onActivitySelect: handleActivitySelection,\n                    userPreferences: userPrefs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 49\n                  }, this), selectedActivities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-activities-display\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Your Selected Activities\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"activity-places\",\n                      children: activities.filter(activity => selectedActivities.includes(activity.activity_name)).map((activity, index) => {\n                        var _activity$places;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"activity-section\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                            children: activity.activity_name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"places-list\",\n                            children: (_activity$places = activity.places) === null || _activity$places === void 0 ? void 0 : _activity$places.slice(0, 3).map((place, placeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"place-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"place-info\",\n                                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                                  children: place.name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 205,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                  children: place.vicinity\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 206,\n                                  columnNumber: 85\n                                }, this), place.rating && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: [\"\\u2B50 \", place.rating]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 207,\n                                  columnNumber: 102\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 204,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"place-actions\",\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => handlePlaceLike(place, activity.activity_name),\n                                  className: \"like-btn\",\n                                  children: \"\\u2764\\uFE0F\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 210,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => handlePlaceDislike(place, activity.activity_name),\n                                  className: \"dislike-btn\",\n                                  children: \"\\uD83D\\uDC4E\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 216,\n                                  columnNumber: 85\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 209,\n                                columnNumber: 81\n                              }, this)]\n                            }, placeIndex, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 203,\n                              columnNumber: 77\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 201,\n                            columnNumber: 69\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 65\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 53\n                  }, this), userPreferences.getPreferredActivities().length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"personalization-notice\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\uD83C\\uDFAF Suggestions personalized based on your preferences!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true), !activities.length && !locationError && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-activities\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"\\uD83D\\uDD0D Finding activities near you...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/history\",\n            element: /*#__PURE__*/_jsxDEV(UserHistory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RNedTIQg1vgIaiUGdijT5G4qBks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Route","Routes","Dashboard","Settings","Sidebar","UserHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","data","setData","useState","loading","setLoading","error","setError","weatherData","setWeatherData","locationError","setLocationError","activities","setActivities","selectedActivities","setSelectedActivities","currentLocation","setCurrentLocation","userPrefs","setUserPrefs","useEffect","prefs","preferredActivities","userPreferences","getPreferredActivities","forEach","pref","activity","score","axios","get","then","response","catch","fetchActivitySuggestion","latitude","longitude","post","max_activities","headers","activitiesData","console","log","sortActivitiesByPreference","handleActivitySelection","selectedActivityNames","activityName","likeActivity","updatedPrefs","getActivityScore","handlePlaceLike","place","activityType","likePlace","handlePlaceDislike","dislikePlace","fetchUserLocation","navigator","geolocation","getCurrentPosition","position","coords","weatherResponse","err","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","Link","to","path","element","onClick","window","location","reload","name","main","temp","weather","description","length","ActivitySelector","onActivitySelect","filter","includes","activity_name","map","index","_activity$places","replace","l","toUpperCase","places","slice","placeIndex","vicinity","rating","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Settings from './components/Settings';\nimport Sidebar from './components/Sidebar';\nimport UserHistory from './components/UserHistory';\nimport './App.css';\n\nfunction App() {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [weatherData, setWeatherData] = useState(null);\n    const [locationError, setLocationError] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [selectedActivities, setSelectedActivities] = useState([]);\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [userPrefs, setUserPrefs] = useState({});\n\n    // Load user preferences on app start\n    useEffect(() => {\n        const prefs = {};\n        const preferredActivities = userPreferences.getPreferredActivities();\n        preferredActivities.forEach(pref => {\n            prefs[pref.activity] = pref.score;\n        });\n        setUserPrefs(prefs);\n    }, []);\n\n    // Fetch test data from backend\n    useEffect(() => {\n        axios.get('http://127.0.0.1:8000/api/test/')\n            .then(response => {\n                setData(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            });\n    }, []);\n\n    // Fetch activity suggestion with personalization\n    const fetchActivitySuggestion = async (latitude, longitude) => {\n        try {\n            const response = await axios.post(\n                'http://127.0.0.1:8000/api/activity-suggestion/',\n                { \n                    latitude, \n                    longitude, \n                    max_activities: 8 // Get more activities for better selection\n                },\n                { headers: { 'Content-Type': 'application/json' } }\n            );\n            \n            let activitiesData = response.data.activities || [];\n            console.log('Activities received:', activitiesData);\n            \n            // Sort by user preferences\n            activitiesData = userPreferences.sortActivitiesByPreference(activitiesData);\n            \n            setActivities(activitiesData);\n            setCurrentLocation({ latitude, longitude });\n        } catch (error) {\n            console.error(\"Failed to fetch activities:\", error);\n            setLocationError('Failed to fetch activities');\n        }\n    };\n\n    // Handle activity selection\n    const handleActivitySelection = (selectedActivityNames) => {\n        setSelectedActivities(selectedActivityNames);\n        \n        // Record user's activity preferences\n        selectedActivityNames.forEach(activityName => {\n            userPreferences.likeActivity(activityName);\n        });\n        \n        // Update local preferences state\n        const updatedPrefs = { ...userPrefs };\n        selectedActivityNames.forEach(activityName => {\n            updatedPrefs[activityName] = userPreferences.getActivityScore(activityName);\n        });\n        setUserPrefs(updatedPrefs);\n    };\n\n    // Handle place interactions\n    const handlePlaceLike = (place, activityType) => {\n        userPreferences.likePlace(place, activityType);\n        \n        // Update preferences state\n        const updatedPrefs = { ...userPrefs };\n        updatedPrefs[activityType] = userPreferences.getActivityScore(activityType);\n        setUserPrefs(updatedPrefs);\n    };\n\n    const handlePlaceDislike = (place, activityType) => {\n        userPreferences.dislikePlace(place, activityType);\n        \n        // Update preferences state\n        const updatedPrefs = { ...userPrefs };\n        updatedPrefs[activityType] = userPreferences.getActivityScore(activityType);\n        setUserPrefs(updatedPrefs);\n    };\n\n    // Fetch user location, weather, and activity suggestion\n    useEffect(() => {\n        const fetchUserLocation = () => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    async (position) => {\n                        const { latitude, longitude } = position.coords;\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/', \n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                            \n                            await fetchActivitySuggestion(latitude, longitude);\n                        } catch (err) {\n                            setLocationError('Failed to get weather data');\n                            console.error(\"API error:\", err);\n                        }\n                    },\n                    (error) => {\n                        setLocationError('Location access denied');\n                        console.error(\"Geolocation error:\", error);\n                    }\n                );\n            } else {\n                setLocationError('Geolocation not supported');\n            }\n        };\n\n        fetchUserLocation();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error.message}</div>;\n\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <nav className=\"nav-bar\">\n                        <div className=\"nav-brand\">\n                            <h1>Navix</h1>\n                            <p>Discover activities near you</p>\n                        </div>\n                        <div className=\"nav-links\">\n                            <Link to=\"/\" className=\"nav-link\">🏠 Explore</Link>\n                            <Link to=\"/history\" className=\"nav-link\">👤 Profile</Link>\n                        </div>\n                    </nav>\n                </header>\n\n                <main className=\"main-content\">\n                    <Routes>\n                        <Route path=\"/\" element={\n                            <div>\n                                {locationError ? (\n                                    <div className=\"error-message\">\n                                        <h2>Location Error</h2>\n                                        <p>{locationError}</p>\n                                        <button onClick={() => window.location.reload()}>\n                                            Try Again\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <>\n                                        {weatherData && (\n                                            <div className=\"weather-banner\">\n                                                <h3>Current Weather</h3>\n                                                <div className=\"weather-info\">\n                                                    <span className=\"weather-location\">📍 {weatherData.name}</span>\n                                                    <span className=\"weather-temp\">{weatherData.main?.temp}°C</span>\n                                                    <span className=\"weather-desc\">{weatherData.weather?.[0]?.description}</span>\n                                                </div>\n                                            </div>\n                                        )}\n                                        \n                                        {activities && activities.length > 0 && (\n                                            <>\n                                                <ActivitySelector\n                                                    activities={activities}\n                                                    onActivitySelect={handleActivitySelection}\n                                                    userPreferences={userPrefs}\n                                                />\n                                                \n                                                {selectedActivities.length > 0 && (\n                                                    <div className=\"selected-activities-display\">\n                                                        <h3>Your Selected Activities</h3>\n                                                        <div className=\"activity-places\">\n                                                            {activities\n                                                                .filter(activity => selectedActivities.includes(activity.activity_name))\n                                                                .map((activity, index) => (\n                                                                <div key={index} className=\"activity-section\">\n                                                                    <h4>{activity.activity_name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</h4>\n                                                                    <div className=\"places-list\">\n                                                                        {activity.places?.slice(0, 3).map((place, placeIndex) => (\n                                                                            <div key={placeIndex} className=\"place-item\">\n                                                                                <div className=\"place-info\">\n                                                                                    <h5>{place.name}</h5>\n                                                                                    <p>{place.vicinity}</p>\n                                                                                    {place.rating && <span>⭐ {place.rating}</span>}\n                                                                                </div>\n                                                                                <div className=\"place-actions\">\n                                                                                    <button \n                                                                                        onClick={() => handlePlaceLike(place, activity.activity_name)}\n                                                                                        className=\"like-btn\"\n                                                                                    >\n                                                                                        ❤️\n                                                                                    </button>\n                                                                                    <button \n                                                                                        onClick={() => handlePlaceDislike(place, activity.activity_name)}\n                                                                                        className=\"dislike-btn\"\n                                                                                    >\n                                                                                        👎\n                                                                                    </button>\n                                                                                </div>\n                                                                            </div>\n                                                                        ))}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                \n                                                {userPreferences.getPreferredActivities().length > 0 && (\n                                                    <div className=\"personalization-notice\">\n                                                        <p>🎯 Suggestions personalized based on your preferences!</p>\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                        \n                                        {!activities.length && !locationError && (\n                                            <div className=\"loading-activities\">\n                                                <p>🔍 Finding activities near you...</p>\n                                            </div>\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                        } />\n                        \n                        <Route path=\"/history\" element={<UserHistory />} />\n                    </Routes>\n                </main>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}