{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  appSettings\n}) => {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$, _weatherData$main2, _weatherData$main3, _weatherData$uv;\n  const navigate = useNavigate();\n  const [weatherData, setWeatherData] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('All Activities');\n  const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n\n  const activityCategories = ['All Activities', 'Outdoor Adventures', 'Relaxing Indoors', 'Cultural Experiences', 'Family Fun'];\n\n  // Transform backend activity data to show individual places with real names\n  const transformActivitiesFromBackend = backendActivities => {\n    const allPlaces = [];\n    let placeId = 1;\n    backendActivities.forEach(activity => {\n      if (activity.places && activity.places.length > 0) {\n        activity.places.forEach(place => {\n          allPlaces.push({\n            id: placeId++,\n            name: place.name || 'Unknown Place',\n            // Real place name\n            category: mapActivityToCategory(activity.activity_name),\n            description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n            photos: place.photos || [],\n            // All photos array\n            rating: place.rating || 4.0,\n            reviews: place.user_ratings_total || 0,\n            walkingTime: place.walking_time || null,\n            drivingTime: place.driving_time || null,\n            activity_name: activity.activity_name,\n            place_count: 1,\n            places: [place],\n            // The actual place data\n            place_id: place.place_id,\n            vicinity: place.vicinity,\n            types: place.types || []\n          });\n        });\n      }\n    });\n    return allPlaces;\n  };\n\n  // Map activity names to our frontend categories\n  const mapActivityToCategory = activityName => {\n    if (!activityName) return 'All Activities';\n    console.log('Mapping activity to category:', activityName);\n    const categoryMap = {\n      // Outdoor Adventures\n      'park': 'Outdoor Adventures',\n      'hiking': 'Outdoor Adventures',\n      'garden': 'Outdoor Adventures',\n      'beach': 'Outdoor Adventures',\n      'outdoor sports': 'Outdoor Adventures',\n      'sports': 'Outdoor Adventures',\n      'trail': 'Outdoor Adventures',\n      // Indoor Relaxation\n      'cafe': 'Relaxing Indoors',\n      'spa': 'Relaxing Indoors',\n      'library': 'Relaxing Indoors',\n      'bookstore': 'Relaxing Indoors',\n      'tea house': 'Relaxing Indoors',\n      'cinema': 'Relaxing Indoors',\n      // Cultural Exploration\n      'museum': 'Cultural Experiences',\n      'gallery': 'Cultural Experiences',\n      'theater': 'Cultural Experiences',\n      'historical': 'Cultural Experiences',\n      'cultural center': 'Cultural Experiences',\n      'art': 'Cultural Experiences',\n      // Culinary Delights\n      'restaurant': 'Family Fun',\n      'food market': 'Family Fun',\n      'bakery': 'Family Fun',\n      'wine bar': 'Family Fun',\n      'cooking': 'Family Fun',\n      'market': 'Family Fun',\n      // General\n      'shopping': 'Family Fun',\n      'mall': 'Family Fun'\n    };\n    const lowerActivity = activityName.toLowerCase();\n    for (const [key, category] of Object.entries(categoryMap)) {\n      if (lowerActivity.includes(key)) {\n        console.log(`\"${activityName}\" -> \"${category}\" (matched \"${key}\")`);\n        return category;\n      }\n    }\n    console.log(`\"${activityName}\" -> \"All Activities\" (no match found)`);\n    return 'All Activities';\n  };\n  useEffect(() => {\n    fetchWeatherAndActivities();\n  }, []);\n  const fetchWeatherAndActivities = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n          console.log('With data:', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {}\n          });\n\n          // Fetch activities and weather data from the activity suggestion API\n          const activityResponse = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n            latitude,\n            longitude,\n            max_activities: 8,\n            // Get more activities for variety\n            activities: (appSettings === null || appSettings === void 0 ? void 0 : appSettings.activities) || {} // Send user activity preferences\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('API Response:', activityResponse.data);\n          if (activityResponse.data && activityResponse.data.activities) {\n            console.log('Received activities from backend:', activityResponse.data.activities);\n            // Transform backend activities to match frontend format\n            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n            console.log('Transformed activities:', transformedActivities);\n\n            // Debug: Check categories\n            const categoryCount = {};\n            transformedActivities.forEach(activity => {\n              const cat = activity.category;\n              categoryCount[cat] = (categoryCount[cat] || 0) + 1;\n            });\n            console.log('Activities by category:', categoryCount);\n\n            // Sort activities by user preferences\n            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n            setActivities(sortedActivities);\n\n            // Set weather data from the same response\n            if (activityResponse.data.weather) {\n              setWeatherData(activityResponse.data.weather);\n            }\n          } else {\n            console.log('No activities in backend response:', activityResponse.data);\n            setActivities([]);\n          }\n        } catch (error) {\n          console.error('Activity fetch error:', error);\n          // Fallback to weather-only API if activity API fails\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n          } catch (weatherError) {\n            console.error('Weather fetch error:', weatherError);\n            // Mock weather data for demo\n            setWeatherData({\n              name: 'New York City',\n              main: {\n                temp: 22,\n                feels_like: 24,\n                humidity: 65\n              },\n              weather: [{\n                description: 'sunny with clear skies',\n                main: 'Clear'\n              }],\n              wind: {\n                speed: 10\n              },\n              visibility: 10000,\n              uv: {\n                value: 6\n              }\n            });\n          }\n          console.log('No activities received from backend, setting empty array');\n          setActivities([]);\n        }\n        setLoading(false);\n      }, error => {\n        console.error('Geolocation error:', error);\n        // Set fallback weather data and empty activities\n        setWeatherData({\n          name: 'Current Location',\n          main: {\n            temp: 22,\n            feels_like: 24,\n            humidity: 65\n          },\n          weather: [{\n            description: 'sunny with clear skies',\n            main: 'Clear'\n          }],\n          wind: {\n            speed: 10\n          },\n          visibility: 10000\n        });\n        setActivities([]);\n        setLoading(false);\n      });\n    }\n  };\n\n  // Filter and sort activities with priority mixing\n  const getFilteredAndSortedActivities = () => {\n    let filtered = activities;\n\n    // Filter by category (if specific category selected)\n    if (selectedCategory !== 'All Activities') {\n      filtered = filtered.filter(activity => activity.category === selectedCategory);\n      // Sort by reviews if specific category\n      return filtered.sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    }\n\n    // For \"All Activities\", create priority mixed list\n    // First sort all activities by reviews within each category\n    const sortedByCategory = {};\n    filtered.forEach(activity => {\n      const category = activity.category || 'Other';\n      if (!sortedByCategory[category]) {\n        sortedByCategory[category] = [];\n      }\n      sortedByCategory[category].push(activity);\n    });\n\n    // Sort each category by number of reviews\n    Object.keys(sortedByCategory).forEach(category => {\n      sortedByCategory[category].sort((a, b) => {\n        return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n      });\n    });\n\n    // Create mixed priority list with balanced representation\n    const mixedActivities = [];\n\n    // Equal priority: 3 from each main category\n    const familyFun = sortedByCategory['Family Fun'] || [];\n    const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n    const culturalExperiences = sortedByCategory['Cultural Experiences'] || [];\n    const outdoorAdventures = sortedByCategory['Outdoor Adventures'] || [];\n\n    // Add 3 from each main category for balanced representation\n    mixedActivities.push(...familyFun.slice(0, 3));\n    mixedActivities.push(...relaxingIndoors.slice(0, 3));\n    mixedActivities.push(...culturalExperiences.slice(0, 3));\n    mixedActivities.push(...outdoorAdventures.slice(0, 3));\n\n    // Add remaining activities from any other categories\n    Object.keys(sortedByCategory).forEach(category => {\n      if (!['Family Fun', 'Relaxing Indoors', 'Cultural Experiences', 'Outdoor Adventures'].includes(category)) {\n        mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n      }\n    });\n\n    // Shuffle the mixed activities to avoid grouping by category\n    const shuffled = [...mixedActivities];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  const getFilteredActivities = () => {\n    // Use the new sorting function instead\n    return getFilteredAndSortedActivities();\n  };\n  const getTemperature = temp => {\n    var _appSettings$units;\n    if (!(appSettings !== null && appSettings !== void 0 && (_appSettings$units = appSettings.units) !== null && _appSettings$units !== void 0 && _appSettings$units.temperature) || !temp) return Math.round(temp);\n    // Weather API returns Celsius, convert if needed\n    const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n    return convertedTemp;\n  };\n  const getTemperatureUnit = () => {\n    var _appSettings$units2;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units2 = appSettings.units) === null || _appSettings$units2 === void 0 ? void 0 : _appSettings$units2.temperature) === 'Fahrenheit (°F)' ? '°F' : '°C';\n  };\n  const getWindSpeed = () => {\n    var _weatherData$wind, _appSettings$units3;\n    if (!(weatherData !== null && weatherData !== void 0 && (_weatherData$wind = weatherData.wind) !== null && _weatherData$wind !== void 0 && _weatherData$wind.speed)) return 10;\n    // Weather API returns m/s, convert to appropriate unit\n    const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units3 = appSettings.units) === null || _appSettings$units3 === void 0 ? void 0 : _appSettings$units3.distance) === 'Miles (mi)') {\n      const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n      return Math.round(speedInMph);\n    }\n    return Math.round(speedInKmh);\n  };\n  const getSpeedUnit = () => {\n    var _appSettings$units4;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units4 = appSettings.units) === null || _appSettings$units4 === void 0 ? void 0 : _appSettings$units4.distance) === 'Miles (mi)' ? 'mph' : 'km/h';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your personalized recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            onClick: () => navigate('/preferences'),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather & Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp-value\",\n            children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) || 22), getTemperatureUnit()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-description\",\n            children: (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description) || 'Sunny with clear skies'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [(weatherData === null || weatherData === void 0 ? void 0 : weatherData.name) || 'Current Location', \" \\u2022 Today, \", new Date().toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Feels like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.feels_like) || 24), getTemperatureUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main3 = weatherData.main) === null || _weatherData$main3 === void 0 ? void 0 : _weatherData$main3.humidity) || 65, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getWindSpeed(), \" \", getSpeedUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$uv = weatherData.uv) === null || _weatherData$uv === void 0 ? void 0 : _weatherData$uv.value) || 6, \" (High)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-preferences-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preferences-text\",\n            children: userPreferences.getPreferredActivities().length > 0 ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned` : \"🔍 Building your preferences...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }, this), activityCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `category-btn ${selectedCategory === category ? 'active' : ''}`,\n            onClick: () => setSelectedCategory(category),\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activities-grid\",\n        children: getFilteredActivities().map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-image\",\n            children: [/*#__PURE__*/_jsxDEV(PhotoCarousel, {\n              photos: (() => {\n                const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                return photos;\n              })(),\n              altText: activity.name,\n              className: \"activity-carousel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-category\",\n              children: activity.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"activity-description\",\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stars\",\n                  children: ['★'.repeat(Math.floor(activity.rating)), '☆'.repeat(5 - Math.floor(activity.rating))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating-text\",\n                  children: [activity.rating, \" (\", activity.reviews, \" reviews)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: activity.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty\",\n                  children: activity.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view-details-btn\",\n                onClick: () => {\n                  // Store current activities in localStorage for place detail access\n                  localStorage.setItem('recent_activities', JSON.stringify(activities));\n\n                  // Navigate with the actual place data\n                  const place = activity.places[0]; // This is the actual place\n                  navigate(`/place/${activity.place_id || activity.id}`, {\n                    state: {\n                      place: place,\n                      activityName: activity.activity_name\n                    }\n                  });\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 29\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-cta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Refine Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your preferences to get even better activity suggestions tailored just for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"goto-preferences-btn\",\n        children: \"Go to Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"19Jl1kXigt8xQdhBHlNCW7cIVb8=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","userPreferences","convertTemperature","convertSpeed","PhotoCarousel","jsxDEV","_jsxDEV","Dashboard","appSettings","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","_weatherData$main2","_weatherData$main3","_weatherData$uv","navigate","weatherData","setWeatherData","activities","setActivities","loading","setLoading","selectedCategory","setSelectedCategory","userPreferenceState","setUserPreferenceState","activityCategories","transformActivitiesFromBackend","backendActivities","allPlaces","placeId","forEach","activity","places","length","place","push","id","name","category","mapActivityToCategory","activity_name","description","vicinity","photos","rating","reviews","user_ratings_total","walkingTime","walking_time","drivingTime","driving_time","place_count","place_id","types","activityName","console","log","categoryMap","lowerActivity","toLowerCase","key","Object","entries","includes","fetchWeatherAndActivities","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","max_activities","activityResponse","post","headers","data","transformedActivities","categoryCount","cat","sortedActivities","sortActivitiesByPreference","weather","error","weatherResponse","weatherError","main","temp","feels_like","humidity","wind","speed","visibility","uv","value","getFilteredAndSortedActivities","filtered","filter","sort","a","b","sortedByCategory","keys","mixedActivities","familyFun","relaxingIndoors","culturalExperiences","outdoorAdventures","slice","shuffled","i","j","Math","floor","random","getFilteredActivities","getTemperature","_appSettings$units","units","temperature","round","convertedTemp","getTemperatureUnit","_appSettings$units2","getWindSpeed","_weatherData$wind","_appSettings$units3","speedInKmh","distance","speedInMph","getSpeedUnit","_appSettings$units4","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","toLocaleDateString","weekday","month","day","getPreferredActivities","map","altText","repeat","duration","difficulty","localStorage","setItem","JSON","stringify","state","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertSpeed } from '../utils/UnitConverter';\nimport PhotoCarousel from './PhotoCarousel';\nimport './Dashboard.css';\n\nconst Dashboard = ({ appSettings }) => {\n    const navigate = useNavigate();\n    const [weatherData, setWeatherData] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedCategory, setSelectedCategory] = useState('All Activities');\n    const [userPreferenceState, setUserPreferenceState] = useState({}); // Track preference state\n\n    const activityCategories = [\n        'All Activities',\n        'Outdoor Adventures', \n        'Relaxing Indoors',\n        'Cultural Experiences',\n        'Family Fun'\n    ];\n\n    // Transform backend activity data to show individual places with real names\n    const transformActivitiesFromBackend = (backendActivities) => {\n        const allPlaces = [];\n        let placeId = 1;\n        \n        backendActivities.forEach((activity) => {\n            if (activity.places && activity.places.length > 0) {\n                activity.places.forEach((place) => {\n                    allPlaces.push({\n                        id: placeId++,\n                        name: place.name || 'Unknown Place', // Real place name\n                        category: mapActivityToCategory(activity.activity_name),\n                        description: `${place.name} - ${place.vicinity || 'Great location to visit'}`,\n                        photos: place.photos || [], // All photos array\n                        rating: place.rating || 4.0,\n                        reviews: place.user_ratings_total || 0,\n                        walkingTime: place.walking_time || null,\n                        drivingTime: place.driving_time || null,\n                        activity_name: activity.activity_name,\n                        place_count: 1,\n                        places: [place], // The actual place data\n                        place_id: place.place_id,\n                        vicinity: place.vicinity,\n                        types: place.types || []\n                    });\n                });\n            }\n        });\n        \n        return allPlaces;\n    };\n\n    // Map activity names to our frontend categories\n    const mapActivityToCategory = (activityName) => {\n        if (!activityName) return 'All Activities';\n        \n        console.log('Mapping activity to category:', activityName);\n        \n        const categoryMap = {\n            // Outdoor Adventures\n            'park': 'Outdoor Adventures',\n            'hiking': 'Outdoor Adventures',\n            'garden': 'Outdoor Adventures',\n            'beach': 'Outdoor Adventures',\n            'outdoor sports': 'Outdoor Adventures',\n            'sports': 'Outdoor Adventures',\n            'trail': 'Outdoor Adventures',\n            \n            // Indoor Relaxation\n            'cafe': 'Relaxing Indoors',\n            'spa': 'Relaxing Indoors',\n            'library': 'Relaxing Indoors',\n            'bookstore': 'Relaxing Indoors',\n            'tea house': 'Relaxing Indoors',\n            'cinema': 'Relaxing Indoors',\n            \n            // Cultural Exploration\n            'museum': 'Cultural Experiences',\n            'gallery': 'Cultural Experiences',\n            'theater': 'Cultural Experiences',\n            'historical': 'Cultural Experiences',\n            'cultural center': 'Cultural Experiences',\n            'art': 'Cultural Experiences',\n            \n            // Culinary Delights\n            'restaurant': 'Family Fun',\n            'food market': 'Family Fun',\n            'bakery': 'Family Fun',\n            'wine bar': 'Family Fun',\n            'cooking': 'Family Fun',\n            'market': 'Family Fun',\n            \n            // General\n            'shopping': 'Family Fun',\n            'mall': 'Family Fun'\n        };\n        \n        const lowerActivity = activityName.toLowerCase();\n        for (const [key, category] of Object.entries(categoryMap)) {\n            if (lowerActivity.includes(key)) {\n                console.log(`\"${activityName}\" -> \"${category}\" (matched \"${key}\")`);\n                return category;\n            }\n        }\n        \n        console.log(`\"${activityName}\" -> \"All Activities\" (no match found)`);\n        return 'All Activities';\n    };\n\n    useEffect(() => {\n        fetchWeatherAndActivities();\n    }, []);\n\n    const fetchWeatherAndActivities = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    \n                    try {\n                        console.log('Making API call to:', 'http://127.0.0.1:8000/api/activity-suggestion/');\n                        console.log('With data:', { \n                            latitude, \n                            longitude, \n                            max_activities: 8,\n                            activities: appSettings?.activities || {}\n                        });\n                        \n                        // Fetch activities and weather data from the activity suggestion API\n                        const activityResponse = await axios.post(\n                            'http://127.0.0.1:8000/api/activity-suggestion/',\n                            { \n                                latitude, \n                                longitude,\n                                max_activities: 8,  // Get more activities for variety\n                                activities: appSettings?.activities || {}  // Send user activity preferences\n                            },\n                            { \n                                headers: { 'Content-Type': 'application/json' } \n                            }\n                        );\n                        \n                        console.log('API Response:', activityResponse.data);\n                        \n                        if (activityResponse.data && activityResponse.data.activities) {\n                            console.log('Received activities from backend:', activityResponse.data.activities);\n                            // Transform backend activities to match frontend format\n                            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n                            console.log('Transformed activities:', transformedActivities);\n                            \n                            // Debug: Check categories\n                            const categoryCount = {};\n                            transformedActivities.forEach(activity => {\n                                const cat = activity.category;\n                                categoryCount[cat] = (categoryCount[cat] || 0) + 1;\n                            });\n                            console.log('Activities by category:', categoryCount);\n                            \n                            // Sort activities by user preferences\n                            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n                            setActivities(sortedActivities);\n                            \n                            // Set weather data from the same response\n                            if (activityResponse.data.weather) {\n                                setWeatherData(activityResponse.data.weather);\n                            }\n                        } else {\n                            console.log('No activities in backend response:', activityResponse.data);\n                            setActivities([]);\n                        }\n                    } catch (error) {\n                        console.error('Activity fetch error:', error);\n                        // Fallback to weather-only API if activity API fails\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/',\n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                        } catch (weatherError) {\n                            console.error('Weather fetch error:', weatherError);\n                            // Mock weather data for demo\n                            setWeatherData({\n                                name: 'New York City',\n                                main: { temp: 22, feels_like: 24, humidity: 65 },\n                                weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                                wind: { speed: 10 },\n                                visibility: 10000,\n                                uv: { value: 6 }\n                            });\n                        }\n                        \n                        console.log('No activities received from backend, setting empty array');\n                        setActivities([]);\n                    }\n                    setLoading(false);\n                },\n                (error) => {\n                    console.error('Geolocation error:', error);\n                    // Set fallback weather data and empty activities\n                    setWeatherData({\n                        name: 'Current Location',\n                        main: { temp: 22, feels_like: 24, humidity: 65 },\n                        weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                        wind: { speed: 10 },\n                        visibility: 10000\n                    });\n                    setActivities([]);\n                    setLoading(false);\n                }\n            );\n        }\n    };\n\n    // Filter and sort activities with priority mixing\n    const getFilteredAndSortedActivities = () => {\n        let filtered = activities;\n        \n        // Filter by category (if specific category selected)\n        if (selectedCategory !== 'All Activities') {\n            filtered = filtered.filter(activity => activity.category === selectedCategory);\n            // Sort by reviews if specific category\n            return filtered.sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        }\n        \n        // For \"All Activities\", create priority mixed list\n        // First sort all activities by reviews within each category\n        const sortedByCategory = {};\n        filtered.forEach(activity => {\n            const category = activity.category || 'Other';\n            if (!sortedByCategory[category]) {\n                sortedByCategory[category] = [];\n            }\n            sortedByCategory[category].push(activity);\n        });\n        \n        // Sort each category by number of reviews\n        Object.keys(sortedByCategory).forEach(category => {\n            sortedByCategory[category].sort((a, b) => {\n                return (b.user_ratings_total || 0) - (a.user_ratings_total || 0);\n            });\n        });\n        \n        // Create mixed priority list with balanced representation\n        const mixedActivities = [];\n        \n        // Equal priority: 3 from each main category\n        const familyFun = sortedByCategory['Family Fun'] || [];\n        const relaxingIndoors = sortedByCategory['Relaxing Indoors'] || [];\n        const culturalExperiences = sortedByCategory['Cultural Experiences'] || [];\n        const outdoorAdventures = sortedByCategory['Outdoor Adventures'] || [];\n        \n        // Add 3 from each main category for balanced representation\n        mixedActivities.push(...familyFun.slice(0, 3));\n        mixedActivities.push(...relaxingIndoors.slice(0, 3));\n        mixedActivities.push(...culturalExperiences.slice(0, 3));\n        mixedActivities.push(...outdoorAdventures.slice(0, 3));\n        \n        // Add remaining activities from any other categories\n        Object.keys(sortedByCategory).forEach(category => {\n            if (!['Family Fun', 'Relaxing Indoors', 'Cultural Experiences', 'Outdoor Adventures'].includes(category)) {\n                mixedActivities.push(...sortedByCategory[category].slice(0, 2));\n            }\n        });\n        \n        // Shuffle the mixed activities to avoid grouping by category\n        const shuffled = [...mixedActivities];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        \n        return shuffled;\n    };\n\n    const getFilteredActivities = () => {\n        // Use the new sorting function instead\n        return getFilteredAndSortedActivities();\n    };\n\n    const getTemperature = (temp) => {\n        if (!appSettings?.units?.temperature || !temp) return Math.round(temp);\n        // Weather API returns Celsius, convert if needed\n        const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n        return convertedTemp;\n    };\n\n    const getTemperatureUnit = () => {\n        return appSettings?.units?.temperature === 'Fahrenheit (°F)' ? '°F' : '°C';\n    };\n\n    const getWindSpeed = () => {\n        if (!weatherData?.wind?.speed) return 10;\n        // Weather API returns m/s, convert to appropriate unit\n        const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n            return Math.round(speedInMph);\n        }\n        return Math.round(speedInKmh);\n    };\n\n    const getSpeedUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mph' : 'km/h';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading your personalized recommendations...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"dashboard\">\n            {/* Top Header */}\n            <div className=\"dashboard-header\">\n                <div className=\"header-content\">\n                    <h1>Dashboard</h1>\n                    <div className=\"header-actions\">\n                        <div className=\"user-profile\" onClick={() => navigate('/preferences')}>\n                            <div className=\"user-avatar\">👤</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Weather Section */}\n            <div className=\"weather-section\">\n                <h2>Current Weather & Conditions</h2>\n                <div className=\"weather-main\">\n                    <div className=\"temperature\">\n                        <span className=\"temp-value\">{getTemperature(weatherData?.main?.temp || 22)}{getTemperatureUnit()}</span>\n                        <p className=\"weather-description\">\n                            {weatherData?.weather?.[0]?.description || 'Sunny with clear skies'}\n                        </p>\n                        <p className=\"location\">{weatherData?.name || 'Current Location'} • Today, {new Date().toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</p>\n                    </div>\n                    \n                    <div className=\"weather-details\">\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Feels like</span>\n                            <span className=\"stat-value\">{getTemperature(weatherData?.main?.feels_like || 24)}{getTemperatureUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Humidity</span>\n                            <span className=\"stat-value\">{weatherData?.main?.humidity || 65}%</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Wind</span>\n                            <span className=\"stat-value\">{getWindSpeed()} {getSpeedUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">UV Index</span>\n                            <span className=\"stat-value\">{weatherData?.uv?.value || 6} (High)</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Activities Section */}\n            <div className=\"activities-section\">\n                <div className=\"section-header\">\n                    <h2>Recommended Activities</h2>\n                    <div className=\"user-preferences-summary\">\n                        <span className=\"preferences-text\">\n                            {userPreferences.getPreferredActivities().length > 0 \n                                ? `🎯 ${userPreferences.getPreferredActivities().length} preferences learned`\n                                : \"🔍 Building your preferences...\"\n                            }\n                        </span>\n                    </div>\n                </div>\n                \n                {/* Category Filter */}\n                <div className=\"filters-container\">\n                    <div className=\"category-filter\">\n                        <h3>Categories</h3>\n                        {activityCategories.map(category => (\n                            <button\n                                key={category}\n                                className={`category-btn ${selectedCategory === category ? 'active' : ''}`}\n                                onClick={() => setSelectedCategory(category)}\n                            >\n                                {category}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Activity Cards Grid */}\n                <div className=\"activities-grid\">\n                    {getFilteredActivities().map(activity => (\n                        <div key={activity.id} className=\"activity-card\">\n                            <div className=\"activity-image\">\n                                <PhotoCarousel \n                                    photos={(() => {\n                                        const photos = activity.photos && activity.photos.length > 0 ? activity.photos : [];\n                                        console.log(`Activity \"${activity.name}\" has ${photos.length} photos:`, photos);\n                                        return photos;\n                                    })()}\n                                    altText={activity.name}\n                                    className=\"activity-carousel\"\n                                />\n                                <div className=\"activity-category\">{activity.category}</div>\n                            </div>\n                            <div className=\"activity-content\">\n                                <h3>{activity.name}</h3>\n                                <p className=\"activity-description\">{activity.description}</p>\n                                <div className=\"activity-meta\">\n                                    <div className=\"rating\">\n                                        <span className=\"stars\">\n                                            {'★'.repeat(Math.floor(activity.rating))}\n                                            {'☆'.repeat(5 - Math.floor(activity.rating))}\n                                        </span>\n                                        <span className=\"rating-text\">\n                                            {activity.rating} ({activity.reviews} reviews)\n                                        </span>\n                                    </div>\n                                    <div className=\"activity-info\">\n                                        <span className=\"duration\">{activity.duration}</span>\n                                        <span className=\"difficulty\">{activity.difficulty}</span>\n                                    </div>\n                                </div>\n                                <div className=\"activity-actions\">\n                                    <button \n                                        className=\"view-details-btn\"\n                                        onClick={() => {\n                                            // Store current activities in localStorage for place detail access\n                                            localStorage.setItem('recent_activities', JSON.stringify(activities));\n                                            \n                                            // Navigate with the actual place data\n                                            const place = activity.places[0]; // This is the actual place\n                                            navigate(`/place/${activity.place_id || activity.id}`, {\n                                                state: {\n                                                    place: place,\n                                                    activityName: activity.activity_name\n                                                }\n                                            });\n                                        }}\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Preferences Reminder */}\n            <div className=\"preferences-cta\">\n                <h3>Refine Your Recommendations</h3>\n                <p>Update your preferences to get even better activity suggestions tailored just for you.</p>\n                <button className=\"goto-preferences-btn\">Go to Preferences</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}