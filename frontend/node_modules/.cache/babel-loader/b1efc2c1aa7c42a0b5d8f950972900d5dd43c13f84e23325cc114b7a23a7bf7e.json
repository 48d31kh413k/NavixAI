{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertDistance, formatTemperature, formatDistance, convertSpeed, formatSpeed } from '../utils/UnitConverter';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  appSettings\n}) => {\n  _s();\n  var _weatherData$main, _weatherData$weather, _weatherData$weather$, _weatherData$main2, _weatherData$main3, _weatherData$uv;\n  const [weatherData, setWeatherData] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState('All Activities');\n  const activityCategories = ['All Activities', 'Outdoor Adventures', 'Relaxing Indoors', 'Cultural Experiences', 'Family Fun'];\n  const mockActivities = [{\n    id: 1,\n    name: 'Central Park Picnic',\n    category: 'Outdoor Adventures',\n    description: 'Enjoy a beautiful day out with scenic views and fresh air.',\n    image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=250&fit=crop',\n    rating: 4.8,\n    reviews: 125,\n    duration: '2-4 hours',\n    difficulty: 'Easy'\n  }, {\n    id: 2,\n    name: 'Museum Hopping',\n    category: 'Cultural Experiences',\n    description: 'Explore world-class art and history galleries.',\n    image: 'https://images.unsplash.com/photo-1554907984-15263bfd63bd?w=400&h=250&fit=crop',\n    rating: 4.6,\n    reviews: 89,\n    duration: '3-5 hours',\n    difficulty: 'Easy'\n  }, {\n    id: 3,\n    name: 'Cozy Coffee Shops',\n    category: 'Relaxing Indoors',\n    description: 'Relax with a warm beverage and a good book.',\n    image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?w=400&h=250&fit=crop',\n    rating: 4.4,\n    reviews: 67,\n    duration: '1-2 hours',\n    difficulty: 'Easy'\n  }, {\n    id: 4,\n    name: 'Bike Rentals',\n    category: 'Outdoor Adventures',\n    description: 'Discover the city on two wheels, explore hidden gems.',\n    image: 'https://images.unsplash.com/photo-1558531304-a4773b7e3a9e?w=400&h=250&fit=crop',\n    rating: 4.7,\n    reviews: 156,\n    duration: '2-6 hours',\n    difficulty: 'Medium'\n  }, {\n    id: 5,\n    name: 'Indoor Rock Climbing',\n    category: 'Outdoor Adventures',\n    description: 'Challenge yourself with exciting routes and friendly community.',\n    image: 'https://images.unsplash.com/photo-1522163182402-834f871fd851?w=400&h=250&fit=crop',\n    rating: 4.5,\n    reviews: 203,\n    duration: '1-3 hours',\n    difficulty: 'Hard'\n  }, {\n    id: 6,\n    name: 'Local Farmers Market',\n    category: 'Family Fun',\n    description: 'Discover fresh produce and artisan goods.',\n    image: 'https://images.unsplash.com/photo-1488459716781-31db52582fe9?w=400&h=250&fit=crop',\n    rating: 4.3,\n    reviews: 78,\n    duration: '1-2 hours',\n    difficulty: 'Easy'\n  }, {\n    id: 7,\n    name: 'Virtual Reality Arcade',\n    category: 'Family Fun',\n    description: 'Immerse yourself in new worlds and experiences.',\n    image: 'https://images.unsplash.com/photo-1592478411213-6153e4ebc07d?w=400&h=250&fit=crop',\n    rating: 4.6,\n    reviews: 134,\n    duration: '1-2 hours',\n    difficulty: 'Easy'\n  }, {\n    id: 8,\n    name: 'Gourmet Cooking Class',\n    category: 'Relaxing Indoors',\n    description: 'Learn new culinary skills and savor delicious creations.',\n    image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400&h=250&fit=crop',\n    rating: 4.9,\n    reviews: 92,\n    duration: '2-3 hours',\n    difficulty: 'Medium'\n  }];\n  useEffect(() => {\n    fetchWeatherAndActivities();\n  }, []);\n  const fetchWeatherAndActivities = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n        try {\n          // Fetch activities and weather data from the activity suggestion API\n          const activityResponse = await axios.post('http://127.0.0.1:8000/api/activity-suggestion/', {\n            latitude,\n            longitude,\n            max_activities: 8 // Get more activities for variety\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (activityResponse.data && activityResponse.data.activities) {\n            // Transform backend activities to match frontend format\n            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n\n            // Sort activities by user preferences\n            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n            setActivities(sortedActivities);\n\n            // Set weather data from the same response\n            if (activityResponse.data.weather) {\n              setWeatherData(activityResponse.data.weather);\n            }\n          }\n        } catch (error) {\n          console.error('Activity fetch error:', error);\n          // Fallback to weather-only API if activity API fails\n          try {\n            const weatherResponse = await axios.post('http://127.0.0.1:8000/api/suggestions/', {\n              latitude,\n              longitude\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            setWeatherData(weatherResponse.data);\n          } catch (weatherError) {\n            console.error('Weather fetch error:', weatherError);\n            // Mock weather data for demo\n            setWeatherData({\n              name: 'New York City',\n              main: {\n                temp: 22,\n                feels_like: 24,\n                humidity: 65\n              },\n              weather: [{\n                description: 'sunny with clear skies',\n                main: 'Clear'\n              }],\n              wind: {\n                speed: 10\n              },\n              visibility: 10000,\n              uv: {\n                value: 6\n              }\n            });\n          }\n\n          // Use mock activities as fallback\n          const sortedActivities = userPreferences.sortActivitiesByPreference(mockActivities.map(activity => ({\n            ...activity,\n            activity_name: activity.category.toLowerCase().replace(' ', '_'),\n            place_count: 1,\n            places: [activity]\n          })));\n          setActivities(sortedActivities);\n        }\n        setLoading(false);\n      }, error => {\n        console.error('Geolocation error:', error);\n        // Set mock data anyway\n        setWeatherData({\n          name: 'Current Location',\n          main: {\n            temp: 22,\n            feels_like: 24,\n            humidity: 65\n          },\n          weather: [{\n            description: 'sunny with clear skies',\n            main: 'Clear'\n          }],\n          wind: {\n            speed: 10\n          },\n          visibility: 10000\n        });\n        setActivities(mockActivities);\n        setLoading(false);\n      });\n    }\n  };\n  const getFilteredActivities = () => {\n    if (selectedCategory === 'All Activities') {\n      return mockActivities;\n    }\n    return mockActivities.filter(activity => activity.category === selectedCategory);\n  };\n  const getTemperature = temp => {\n    var _appSettings$units;\n    if (!(appSettings !== null && appSettings !== void 0 && (_appSettings$units = appSettings.units) !== null && _appSettings$units !== void 0 && _appSettings$units.temperature) || !temp) return Math.round(temp);\n    // Weather API returns Celsius, convert if needed\n    const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n    return convertedTemp;\n  };\n  const getTemperatureUnit = () => {\n    var _appSettings$units2;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units2 = appSettings.units) === null || _appSettings$units2 === void 0 ? void 0 : _appSettings$units2.temperature) === 'Fahrenheit (°F)' ? '°F' : '°C';\n  };\n  const getWindSpeed = () => {\n    var _weatherData$wind, _appSettings$units3;\n    if (!(weatherData !== null && weatherData !== void 0 && (_weatherData$wind = weatherData.wind) !== null && _weatherData$wind !== void 0 && _weatherData$wind.speed)) return 10;\n    // Weather API returns m/s, convert to appropriate unit\n    const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units3 = appSettings.units) === null || _appSettings$units3 === void 0 ? void 0 : _appSettings$units3.distance) === 'Miles (mi)') {\n      const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n      return Math.round(speedInMph);\n    }\n    return Math.round(speedInKmh);\n  };\n  const getSpeedUnit = () => {\n    var _appSettings$units4;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units4 = appSettings.units) === null || _appSettings$units4 === void 0 ? void 0 : _appSettings$units4.distance) === 'Miles (mi)' ? 'mph' : 'km/h';\n  };\n  const getVisibility = () => {\n    var _appSettings$units5;\n    if (!(weatherData !== null && weatherData !== void 0 && weatherData.visibility)) return 6;\n    const visibilityInKm = weatherData.visibility / 1000; // Convert meters to km\n    if ((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units5 = appSettings.units) === null || _appSettings$units5 === void 0 ? void 0 : _appSettings$units5.distance) === 'Miles (mi)') {\n      return Math.round(convertDistance(visibilityInKm, 'Kilometers (km)', 'Miles (mi)'));\n    }\n    return Math.round(visibilityInKm);\n  };\n  const getDistanceUnit = () => {\n    var _appSettings$units6;\n    return (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$units6 = appSettings.units) === null || _appSettings$units6 === void 0 ? void 0 : _appSettings$units6.distance) === 'Miles (mi)' ? 'mi' : 'km';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your personalized recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather & Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp-value\",\n            children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) || 22), getTemperatureUnit()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-description\",\n            children: (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather = weatherData.weather) === null || _weatherData$weather === void 0 ? void 0 : (_weatherData$weather$ = _weatherData$weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description) || 'Sunny with clear skies'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [(weatherData === null || weatherData === void 0 ? void 0 : weatherData.name) || 'Current Location', \" \\u2022 Today, \", new Date().toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Feels like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getTemperature((weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.feels_like) || 24), getTemperatureUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main3 = weatherData.main) === null || _weatherData$main3 === void 0 ? void 0 : _weatherData$main3.humidity) || 65, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [getWindSpeed(), \" \", getSpeedUnit()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"UV Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$uv = weatherData.uv) === null || _weatherData$uv === void 0 ? void 0 : _weatherData$uv.value) || 6, \" (High)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filter\",\n        children: activityCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-btn ${selectedCategory === category ? 'active' : ''}`,\n          onClick: () => setSelectedCategory(category),\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activities-grid\",\n        children: getFilteredActivities().map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: activity.image,\n              alt: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-category\",\n              children: activity.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: activity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"activity-description\",\n              children: activity.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stars\",\n                  children: ['★'.repeat(Math.floor(activity.rating)), '☆'.repeat(5 - Math.floor(activity.rating))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating-text\",\n                  children: [activity.rating, \" (\", activity.reviews, \" reviews)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: activity.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty\",\n                  children: activity.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-details-btn\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-cta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Refine Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your preferences to get even better activity suggestions tailored just for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"goto-preferences-btn\",\n        children: \"Go to Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"tmnJ8YjQ/vXeTGHzo56aa8Zzono=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","userPreferences","convertTemperature","convertDistance","formatTemperature","formatDistance","convertSpeed","formatSpeed","jsxDEV","_jsxDEV","Dashboard","appSettings","_s","_weatherData$main","_weatherData$weather","_weatherData$weather$","_weatherData$main2","_weatherData$main3","_weatherData$uv","weatherData","setWeatherData","activities","setActivities","loading","setLoading","currentLocation","setCurrentLocation","selectedCategory","setSelectedCategory","activityCategories","mockActivities","id","name","category","description","image","rating","reviews","duration","difficulty","fetchWeatherAndActivities","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","activityResponse","post","max_activities","headers","data","transformedActivities","transformActivitiesFromBackend","sortedActivities","sortActivitiesByPreference","weather","error","console","weatherResponse","weatherError","main","temp","feels_like","humidity","wind","speed","visibility","uv","value","map","activity","activity_name","toLowerCase","replace","place_count","places","getFilteredActivities","filter","getTemperature","_appSettings$units","units","temperature","Math","round","convertedTemp","getTemperatureUnit","_appSettings$units2","getWindSpeed","_weatherData$wind","_appSettings$units3","speedInKmh","distance","speedInMph","getSpeedUnit","_appSettings$units4","getVisibility","_appSettings$units5","visibilityInKm","getDistanceUnit","_appSettings$units6","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","month","day","onClick","src","alt","repeat","floor","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport userPreferences from '../utils/UserPreferences';\nimport { convertTemperature, convertDistance, formatTemperature, formatDistance, convertSpeed, formatSpeed } from '../utils/UnitConverter';\nimport './Dashboard.css';\n\nconst Dashboard = ({ appSettings }) => {\n    const [weatherData, setWeatherData] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [selectedCategory, setSelectedCategory] = useState('All Activities');\n\n    const activityCategories = [\n        'All Activities',\n        'Outdoor Adventures', \n        'Relaxing Indoors',\n        'Cultural Experiences',\n        'Family Fun'\n    ];\n\n    const mockActivities = [\n        {\n            id: 1,\n            name: 'Central Park Picnic',\n            category: 'Outdoor Adventures',\n            description: 'Enjoy a beautiful day out with scenic views and fresh air.',\n            image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=250&fit=crop',\n            rating: 4.8,\n            reviews: 125,\n            duration: '2-4 hours',\n            difficulty: 'Easy'\n        },\n        {\n            id: 2,\n            name: 'Museum Hopping',\n            category: 'Cultural Experiences',\n            description: 'Explore world-class art and history galleries.',\n            image: 'https://images.unsplash.com/photo-1554907984-15263bfd63bd?w=400&h=250&fit=crop',\n            rating: 4.6,\n            reviews: 89,\n            duration: '3-5 hours',\n            difficulty: 'Easy'\n        },\n        {\n            id: 3,\n            name: 'Cozy Coffee Shops',\n            category: 'Relaxing Indoors',\n            description: 'Relax with a warm beverage and a good book.',\n            image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?w=400&h=250&fit=crop',\n            rating: 4.4,\n            reviews: 67,\n            duration: '1-2 hours',\n            difficulty: 'Easy'\n        },\n        {\n            id: 4,\n            name: 'Bike Rentals',\n            category: 'Outdoor Adventures',\n            description: 'Discover the city on two wheels, explore hidden gems.',\n            image: 'https://images.unsplash.com/photo-1558531304-a4773b7e3a9e?w=400&h=250&fit=crop',\n            rating: 4.7,\n            reviews: 156,\n            duration: '2-6 hours',\n            difficulty: 'Medium'\n        },\n        {\n            id: 5,\n            name: 'Indoor Rock Climbing',\n            category: 'Outdoor Adventures',\n            description: 'Challenge yourself with exciting routes and friendly community.',\n            image: 'https://images.unsplash.com/photo-1522163182402-834f871fd851?w=400&h=250&fit=crop',\n            rating: 4.5,\n            reviews: 203,\n            duration: '1-3 hours',\n            difficulty: 'Hard'\n        },\n        {\n            id: 6,\n            name: 'Local Farmers Market',\n            category: 'Family Fun',\n            description: 'Discover fresh produce and artisan goods.',\n            image: 'https://images.unsplash.com/photo-1488459716781-31db52582fe9?w=400&h=250&fit=crop',\n            rating: 4.3,\n            reviews: 78,\n            duration: '1-2 hours',\n            difficulty: 'Easy'\n        },\n        {\n            id: 7,\n            name: 'Virtual Reality Arcade',\n            category: 'Family Fun',\n            description: 'Immerse yourself in new worlds and experiences.',\n            image: 'https://images.unsplash.com/photo-1592478411213-6153e4ebc07d?w=400&h=250&fit=crop',\n            rating: 4.6,\n            reviews: 134,\n            duration: '1-2 hours',\n            difficulty: 'Easy'\n        },\n        {\n            id: 8,\n            name: 'Gourmet Cooking Class',\n            category: 'Relaxing Indoors',\n            description: 'Learn new culinary skills and savor delicious creations.',\n            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400&h=250&fit=crop',\n            rating: 4.9,\n            reviews: 92,\n            duration: '2-3 hours',\n            difficulty: 'Medium'\n        }\n    ];\n\n    useEffect(() => {\n        fetchWeatherAndActivities();\n    }, []);\n\n    const fetchWeatherAndActivities = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setCurrentLocation({ lat: latitude, lng: longitude });\n                    \n                    try {\n                        // Fetch activities and weather data from the activity suggestion API\n                        const activityResponse = await axios.post(\n                            'http://127.0.0.1:8000/api/activity-suggestion/',\n                            { \n                                latitude, \n                                longitude,\n                                max_activities: 8  // Get more activities for variety\n                            },\n                            { \n                                headers: { 'Content-Type': 'application/json' } \n                            }\n                        );\n                        \n                        if (activityResponse.data && activityResponse.data.activities) {\n                            // Transform backend activities to match frontend format\n                            const transformedActivities = transformActivitiesFromBackend(activityResponse.data.activities);\n                            \n                            // Sort activities by user preferences\n                            const sortedActivities = userPreferences.sortActivitiesByPreference(transformedActivities);\n                            setActivities(sortedActivities);\n                            \n                            // Set weather data from the same response\n                            if (activityResponse.data.weather) {\n                                setWeatherData(activityResponse.data.weather);\n                            }\n                        }\n                    } catch (error) {\n                        console.error('Activity fetch error:', error);\n                        // Fallback to weather-only API if activity API fails\n                        try {\n                            const weatherResponse = await axios.post(\n                                'http://127.0.0.1:8000/api/suggestions/',\n                                { latitude, longitude },\n                                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n                            );\n                            setWeatherData(weatherResponse.data);\n                        } catch (weatherError) {\n                            console.error('Weather fetch error:', weatherError);\n                            // Mock weather data for demo\n                            setWeatherData({\n                                name: 'New York City',\n                                main: { temp: 22, feels_like: 24, humidity: 65 },\n                                weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                                wind: { speed: 10 },\n                                visibility: 10000,\n                                uv: { value: 6 }\n                            });\n                        }\n                        \n                        // Use mock activities as fallback\n                        const sortedActivities = userPreferences.sortActivitiesByPreference(\n                            mockActivities.map(activity => ({\n                                ...activity,\n                                activity_name: activity.category.toLowerCase().replace(' ', '_'),\n                                place_count: 1,\n                                places: [activity]\n                            }))\n                        );\n                        setActivities(sortedActivities);\n                    }\n                    setLoading(false);\n                },\n                (error) => {\n                    console.error('Geolocation error:', error);\n                    // Set mock data anyway\n                    setWeatherData({\n                        name: 'Current Location',\n                        main: { temp: 22, feels_like: 24, humidity: 65 },\n                        weather: [{ description: 'sunny with clear skies', main: 'Clear' }],\n                        wind: { speed: 10 },\n                        visibility: 10000\n                    });\n                    setActivities(mockActivities);\n                    setLoading(false);\n                }\n            );\n        }\n    };\n\n    const getFilteredActivities = () => {\n        if (selectedCategory === 'All Activities') {\n            return mockActivities;\n        }\n        return mockActivities.filter(activity => activity.category === selectedCategory);\n    };\n\n    const getTemperature = (temp) => {\n        if (!appSettings?.units?.temperature || !temp) return Math.round(temp);\n        // Weather API returns Celsius, convert if needed\n        const convertedTemp = convertTemperature(temp, 'Celsius (°C)', appSettings.units.temperature);\n        return convertedTemp;\n    };\n\n    const getTemperatureUnit = () => {\n        return appSettings?.units?.temperature === 'Fahrenheit (°F)' ? '°F' : '°C';\n    };\n\n    const getWindSpeed = () => {\n        if (!weatherData?.wind?.speed) return 10;\n        // Weather API returns m/s, convert to appropriate unit\n        const speedInKmh = weatherData.wind.speed * 3.6; // Convert m/s to km/h\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            const speedInMph = convertSpeed(speedInKmh, 'Kilometers (km)', 'Miles (mi)');\n            return Math.round(speedInMph);\n        }\n        return Math.round(speedInKmh);\n    };\n\n    const getSpeedUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mph' : 'km/h';\n    };\n\n    const getVisibility = () => {\n        if (!weatherData?.visibility) return 6;\n        const visibilityInKm = weatherData.visibility / 1000; // Convert meters to km\n        if (appSettings?.units?.distance === 'Miles (mi)') {\n            return Math.round(convertDistance(visibilityInKm, 'Kilometers (km)', 'Miles (mi)'));\n        }\n        return Math.round(visibilityInKm);\n    };\n\n    const getDistanceUnit = () => {\n        return appSettings?.units?.distance === 'Miles (mi)' ? 'mi' : 'km';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading your personalized recommendations...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"dashboard\">\n            {/* Weather Section */}\n            <div className=\"weather-section\">\n                <h2>Current Weather & Conditions</h2>\n                <div className=\"weather-main\">\n                    <div className=\"temperature\">\n                        <span className=\"temp-value\">{getTemperature(weatherData?.main?.temp || 22)}{getTemperatureUnit()}</span>\n                        <p className=\"weather-description\">\n                            {weatherData?.weather?.[0]?.description || 'Sunny with clear skies'}\n                        </p>\n                        <p className=\"location\">{weatherData?.name || 'Current Location'} • Today, {new Date().toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</p>\n                    </div>\n                    \n                    <div className=\"weather-details\">\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Feels like</span>\n                            <span className=\"stat-value\">{getTemperature(weatherData?.main?.feels_like || 24)}{getTemperatureUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Humidity</span>\n                            <span className=\"stat-value\">{weatherData?.main?.humidity || 65}%</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">Wind</span>\n                            <span className=\"stat-value\">{getWindSpeed()} {getSpeedUnit()}</span>\n                        </div>\n                        <div className=\"weather-stat\">\n                            <span className=\"stat-label\">UV Index</span>\n                            <span className=\"stat-value\">{weatherData?.uv?.value || 6} (High)</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Activities Section */}\n            <div className=\"activities-section\">\n                <h2>Recommended Activities</h2>\n                \n                {/* Category Filter */}\n                <div className=\"category-filter\">\n                    {activityCategories.map(category => (\n                        <button\n                            key={category}\n                            className={`category-btn ${selectedCategory === category ? 'active' : ''}`}\n                            onClick={() => setSelectedCategory(category)}\n                        >\n                            {category}\n                        </button>\n                    ))}\n                </div>\n\n                {/* Activity Cards Grid */}\n                <div className=\"activities-grid\">\n                    {getFilteredActivities().map(activity => (\n                        <div key={activity.id} className=\"activity-card\">\n                            <div className=\"activity-image\">\n                                <img src={activity.image} alt={activity.name} />\n                                <div className=\"activity-category\">{activity.category}</div>\n                            </div>\n                            <div className=\"activity-content\">\n                                <h3>{activity.name}</h3>\n                                <p className=\"activity-description\">{activity.description}</p>\n                                <div className=\"activity-meta\">\n                                    <div className=\"rating\">\n                                        <span className=\"stars\">\n                                            {'★'.repeat(Math.floor(activity.rating))}\n                                            {'☆'.repeat(5 - Math.floor(activity.rating))}\n                                        </span>\n                                        <span className=\"rating-text\">\n                                            {activity.rating} ({activity.reviews} reviews)\n                                        </span>\n                                    </div>\n                                    <div className=\"activity-info\">\n                                        <span className=\"duration\">{activity.duration}</span>\n                                        <span className=\"difficulty\">{activity.difficulty}</span>\n                                    </div>\n                                </div>\n                                <button className=\"view-details-btn\">View Details</button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Preferences Reminder */}\n            <div className=\"preferences-cta\">\n                <h3>Refine Your Recommendations</h3>\n                <p>Update your preferences to get even better activity suggestions tailored just for you.</p>\n                <button className=\"goto-preferences-btn\">Go to Preferences</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}