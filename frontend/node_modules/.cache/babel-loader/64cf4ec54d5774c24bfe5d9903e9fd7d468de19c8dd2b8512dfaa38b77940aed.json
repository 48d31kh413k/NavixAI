{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userPreferences from '../utils/UserPreferences';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  appSettings,\n  updateAppSettings\n}) => {\n  _s();\n  const defaultSettings = {\n    activities: {\n      outdoorAdventure: true,\n      indoorRelaxation: true,\n      culturalExploration: false,\n      culinaryDelights: true\n    },\n    location: {\n      recommendationRadius: 'Local Area (5km)',\n      useCurrentLocation: true\n    },\n    notifications: {\n      weatherAlerts: true,\n      newRecommendations: true,\n      dailyDigest: false\n    },\n    units: {\n      temperature: 'Celsius (°C)',\n      distance: 'Kilometers (km)'\n    },\n    privacy: {\n      shareData: false,\n      analytics: true\n    }\n  };\n  const [preferences, setPreferences] = useState(() => {\n    // Ensure we always have a valid preferences object\n    if (appSettings && typeof appSettings === 'object') {\n      return {\n        ...defaultSettings,\n        ...appSettings,\n        // Ensure nested objects exist\n        activities: {\n          ...defaultSettings.activities,\n          ...(appSettings.activities || {})\n        },\n        location: {\n          ...defaultSettings.location,\n          ...(appSettings.location || {})\n        },\n        notifications: {\n          ...defaultSettings.notifications,\n          ...(appSettings.notifications || {})\n        },\n        units: {\n          ...defaultSettings.units,\n          ...(appSettings.units || {})\n        },\n        privacy: {\n          ...defaultSettings.privacy,\n          ...(appSettings.privacy || {})\n        }\n      };\n    }\n    return defaultSettings;\n  });\n\n  // Update local preferences when appSettings change\n  useEffect(() => {\n    if (appSettings) {\n      setPreferences(appSettings);\n    }\n  }, [appSettings]);\n  const [hasChanges, setHasChanges] = useState(false);\n  const handleToggleChange = (category, key) => {\n    try {\n      const newPreferences = {\n        ...preferences,\n        [category]: {\n          ...preferences[category],\n          [key]: !preferences[category][key]\n        }\n      };\n      setPreferences(newPreferences);\n\n      // Update global app settings\n      if (updateAppSettings) {\n        updateAppSettings(newPreferences);\n      }\n\n      // Save to user preferences for activity-related settings\n      if (category === 'activities') {\n        const activityName = key;\n        if (newPreferences[category][key]) {\n          userPreferences.likeActivity(activityName);\n        } else {\n          userPreferences.dislikeActivity(activityName);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n    }\n  };\n  const handleSelectChange = (category, key, value) => {\n    const newPreferences = {\n      ...preferences,\n      [category]: {\n        ...preferences[category],\n        [key]: value\n      }\n    };\n    setPreferences(newPreferences);\n\n    // Update global app settings\n    if (updateAppSettings) {\n      updateAppSettings(newPreferences);\n    }\n  };\n  const handleSaveChanges = () => {\n    userPreferences.updateSettings(preferences);\n    setHasChanges(false);\n\n    // Show success feedback\n    const button = document.querySelector('.save-btn');\n    const originalText = button.textContent;\n    button.textContent = '✓ Saved!';\n    button.style.background = '#4CAF50';\n    setTimeout(() => {\n      button.textContent = originalText;\n      button.style.background = '#ff6b35';\n    }, 2000);\n  };\n  const handleCancel = () => {\n    // Reload preferences from storage\n    const userSettings = userPreferences.getSettings();\n    setPreferences(prev => ({\n      ...prev,\n      ...userSettings\n    }));\n    setHasChanges(false);\n  };\n  const handleDeleteAccount = () => {\n    if (window.confirm('Are you sure you want to delete your account? This action cannot be undone and will remove all your data.')) {\n      userPreferences.clearPreferences();\n      userPreferences.clearHistory();\n      alert('Account data has been deleted.');\n    }\n  };\n  const ToggleSwitch = ({\n    checked,\n    onChange,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle-switch ${checked ? 'active' : ''}`,\n      onClick: onChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n  const SelectDropdown = ({\n    value,\n    onChange,\n    options,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"setting-select\",\n      value: value,\n      onChange: e => onChange(e.target.value),\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-nav-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-item\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-separator\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-current\",\n          children: \"Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search activities or places...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Preferences & Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your experience and manage your account preferences.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Activity Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Customize the types of activities you'd like to receive recommendations for.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.outdoorAdventure,\n          onChange: () => handleToggleChange('activities', 'outdoorAdventure'),\n          label: \"Outdoor Adventure\",\n          description: \"Activities like hiking, cycling, and kayaking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.indoorRelaxation,\n          onChange: () => handleToggleChange('activities', 'indoorRelaxation'),\n          label: \"Indoor Relaxation\",\n          description: \"Activities such as reading, board games, or crafting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.culturalExploration,\n          onChange: () => handleToggleChange('activities', 'culturalExploration'),\n          label: \"Cultural Exploration\",\n          description: \"Visits to museums, art galleries, and historical sites.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.culinaryDelights,\n          onChange: () => handleToggleChange('activities', 'culinaryDelights'),\n          label: \"Culinary Delights\",\n          description: \"Recommendations for restaurants, cafes, and cooking courses.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Location Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Define the geographical scope for your activity recommendations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {\n          value: preferences.location.recommendationRadius,\n          onChange: value => handleSelectChange('location', 'recommendationRadius', value),\n          options: ['Local Area (5km)', 'City Wide (25km)', 'Regional (50km)', 'Extended (100km)'],\n          label: \"Recommendation Radius\",\n          description: \"Select how far you're willing to travel for activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notification Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Manage how and when you receive updates from WeatherWise Explorer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.notifications.weatherAlerts,\n          onChange: () => handleToggleChange('notifications', 'weatherAlerts'),\n          label: \"Weather Alerts\",\n          description: \"Get notifications for significant weather changes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.notifications.newRecommendations,\n          onChange: () => handleToggleChange('notifications', 'newRecommendations'),\n          label: \"New Recommendations\",\n          description: \"Receive alerts for new activity recommendations based on your preferences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.notifications.dailyDigest,\n          onChange: () => handleToggleChange('notifications', 'dailyDigest'),\n          label: \"Daily Digest\",\n          description: \"Get a daily summary of weather and recommended activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unit Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Choose your preferred units for displaying weather and distance information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {\n          value: preferences.units.temperature,\n          onChange: value => handleSelectChange('units', 'temperature', value),\n          options: ['Celsius (°C)', 'Fahrenheit (°F)'],\n          label: \"Temperature Unit\",\n          description: \"Select your preferred temperature scale.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {\n          value: preferences.units.distance,\n          onChange: value => handleSelectChange('units', 'distance', value),\n          options: ['Kilometers (km)', 'Miles (mi)'],\n          label: \"Distance Unit\",\n          description: \"Choose how distances should be displayed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data & Privacy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Manage your account data and privacy settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.privacy.shareData,\n          onChange: () => handleToggleChange('privacy', 'shareData'),\n          label: \"Share Usage Data\",\n          description: \"Help improve the app by sharing anonymous usage statistics.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.privacy.analytics,\n          onChange: () => handleToggleChange('privacy', 'analytics'),\n          label: \"Analytics\",\n          description: \"Allow collection of analytics data to improve recommendations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"danger-zone\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Danger Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Permanent actions that cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-account-btn\",\n            onClick: handleDeleteAccount,\n            children: \"Delete My Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), hasChanges && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-btn\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"Z0/5lXABtWfnlIKYHxLQfd6XwxY=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","userPreferences","jsxDEV","_jsxDEV","Settings","appSettings","updateAppSettings","_s","defaultSettings","activities","outdoorAdventure","indoorRelaxation","culturalExploration","culinaryDelights","location","recommendationRadius","useCurrentLocation","notifications","weatherAlerts","newRecommendations","dailyDigest","units","temperature","distance","privacy","shareData","analytics","preferences","setPreferences","hasChanges","setHasChanges","handleToggleChange","category","key","newPreferences","activityName","likeActivity","dislikeActivity","error","console","handleSelectChange","value","handleSaveChanges","updateSettings","button","document","querySelector","originalText","textContent","style","background","setTimeout","handleCancel","userSettings","getSettings","prev","handleDeleteAccount","window","confirm","clearPreferences","clearHistory","alert","ToggleSwitch","checked","onChange","label","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SelectDropdown","options","e","target","map","option","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport userPreferences from '../utils/UserPreferences';\nimport './Settings.css';\n\nconst Settings = ({ appSettings, updateAppSettings }) => {\n    const defaultSettings = {\n        activities: {\n            outdoorAdventure: true,\n            indoorRelaxation: true,\n            culturalExploration: false,\n            culinaryDelights: true\n        },\n        location: {\n            recommendationRadius: 'Local Area (5km)',\n            useCurrentLocation: true\n        },\n        notifications: {\n            weatherAlerts: true,\n            newRecommendations: true,\n            dailyDigest: false\n        },\n        units: {\n            temperature: 'Celsius (°C)',\n            distance: 'Kilometers (km)'\n        },\n        privacy: {\n            shareData: false,\n            analytics: true\n        }\n    };\n\n    const [preferences, setPreferences] = useState(() => {\n        // Ensure we always have a valid preferences object\n        if (appSettings && typeof appSettings === 'object') {\n            return {\n                ...defaultSettings,\n                ...appSettings,\n                // Ensure nested objects exist\n                activities: { ...defaultSettings.activities, ...(appSettings.activities || {}) },\n                location: { ...defaultSettings.location, ...(appSettings.location || {}) },\n                notifications: { ...defaultSettings.notifications, ...(appSettings.notifications || {}) },\n                units: { ...defaultSettings.units, ...(appSettings.units || {}) },\n                privacy: { ...defaultSettings.privacy, ...(appSettings.privacy || {}) }\n            };\n        }\n        return defaultSettings;\n    });\n\n    // Update local preferences when appSettings change\n    useEffect(() => {\n        if (appSettings) {\n            setPreferences(appSettings);\n        }\n    }, [appSettings]);\n\n    const [hasChanges, setHasChanges] = useState(false);\n\n    const handleToggleChange = (category, key) => {\n        try {\n            const newPreferences = {\n                ...preferences,\n                [category]: {\n                    ...preferences[category],\n                    [key]: !preferences[category][key]\n                }\n            };\n            setPreferences(newPreferences);\n            \n            // Update global app settings\n            if (updateAppSettings) {\n                updateAppSettings(newPreferences);\n            }\n            \n            // Save to user preferences for activity-related settings\n            if (category === 'activities') {\n                const activityName = key;\n                if (newPreferences[category][key]) {\n                    userPreferences.likeActivity(activityName);\n                } else {\n                    userPreferences.dislikeActivity(activityName);\n                }\n            }\n        } catch (error) {\n            console.error('Error updating preferences:', error);\n        }\n    };    const handleSelectChange = (category, key, value) => {\n        const newPreferences = {\n            ...preferences,\n            [category]: {\n                ...preferences[category],\n                [key]: value\n            }\n        };\n        setPreferences(newPreferences);\n        \n        // Update global app settings\n        if (updateAppSettings) {\n            updateAppSettings(newPreferences);\n        }\n    };    const handleSaveChanges = () => {\n        userPreferences.updateSettings(preferences);\n        setHasChanges(false);\n        \n        // Show success feedback\n        const button = document.querySelector('.save-btn');\n        const originalText = button.textContent;\n        button.textContent = '✓ Saved!';\n        button.style.background = '#4CAF50';\n        \n        setTimeout(() => {\n            button.textContent = originalText;\n            button.style.background = '#ff6b35';\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        // Reload preferences from storage\n        const userSettings = userPreferences.getSettings();\n        setPreferences(prev => ({ ...prev, ...userSettings }));\n        setHasChanges(false);\n    };\n\n    const handleDeleteAccount = () => {\n        if (window.confirm('Are you sure you want to delete your account? This action cannot be undone and will remove all your data.')) {\n            userPreferences.clearPreferences();\n            userPreferences.clearHistory();\n            alert('Account data has been deleted.');\n        }\n    };\n\n    const ToggleSwitch = ({ checked, onChange, label, description }) => (\n        <div className=\"setting-item\">\n            <div className=\"setting-info\">\n                <div className=\"setting-label\">{label}</div>\n                <div className=\"setting-description\">{description}</div>\n            </div>\n            <div className={`toggle-switch ${checked ? 'active' : ''}`} onClick={onChange}>\n                <div className=\"toggle-slider\"></div>\n            </div>\n        </div>\n    );\n\n    const SelectDropdown = ({ value, onChange, options, label, description }) => (\n        <div className=\"setting-item\">\n            <div className=\"setting-info\">\n                <div className=\"setting-label\">{label}</div>\n                <div className=\"setting-description\">{description}</div>\n            </div>\n            <select \n                className=\"setting-select\" \n                value={value} \n                onChange={(e) => onChange(e.target.value)}\n            >\n                {options.map(option => (\n                    <option key={option} value={option}>{option}</option>\n                ))}\n            </select>\n        </div>\n    );\n\n    return (\n        <div className=\"settings\">\n            {/* Settings Header with Navigation */}\n            <div className=\"settings-nav-header\">\n                <div className=\"nav-breadcrumb\">\n                    <span className=\"breadcrumb-item\">Dashboard</span>\n                    <span className=\"breadcrumb-separator\">&gt;</span>\n                    <span className=\"breadcrumb-current\">Preferences</span>\n                </div>\n                <div className=\"header-actions\">\n                    <div className=\"search-bar\">\n                        <input type=\"text\" placeholder=\"Search activities or places...\" />\n                        <button className=\"search-btn\">🔍</button>\n                    </div>\n                    <div className=\"user-profile\">\n                        <div className=\"user-avatar\">👤</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"settings-header\">\n                <h1>User Preferences & Settings</h1>\n                <p>Customize your experience and manage your account preferences.</p>\n            </div>\n\n            <div className=\"settings-content\">\n                {/* Activity Preferences */}\n                <div className=\"settings-section\">\n                    <h3>Activity Preferences</h3>\n                    <p className=\"section-description\">\n                        Customize the types of activities you'd like to receive recommendations for.\n                    </p>\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.outdoorAdventure}\n                        onChange={() => handleToggleChange('activities', 'outdoorAdventure')}\n                        label=\"Outdoor Adventure\"\n                        description=\"Activities like hiking, cycling, and kayaking.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.indoorRelaxation}\n                        onChange={() => handleToggleChange('activities', 'indoorRelaxation')}\n                        label=\"Indoor Relaxation\"\n                        description=\"Activities such as reading, board games, or crafting.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.culturalExploration}\n                        onChange={() => handleToggleChange('activities', 'culturalExploration')}\n                        label=\"Cultural Exploration\"\n                        description=\"Visits to museums, art galleries, and historical sites.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.culinaryDelights}\n                        onChange={() => handleToggleChange('activities', 'culinaryDelights')}\n                        label=\"Culinary Delights\"\n                        description=\"Recommendations for restaurants, cafes, and cooking courses.\"\n                    />\n                </div>\n\n                {/* Location Preferences */}\n                <div className=\"settings-section\">\n                    <h3>Location Preferences</h3>\n                    <p className=\"section-description\">\n                        Define the geographical scope for your activity recommendations.\n                    </p>\n                    \n                    <SelectDropdown\n                        value={preferences.location.recommendationRadius}\n                        onChange={(value) => handleSelectChange('location', 'recommendationRadius', value)}\n                        options={['Local Area (5km)', 'City Wide (25km)', 'Regional (50km)', 'Extended (100km)']}\n                        label=\"Recommendation Radius\"\n                        description=\"Select how far you're willing to travel for activities.\"\n                    />\n                </div>\n\n                {/* Notification Settings */}\n                <div className=\"settings-section\">\n                    <h3>Notification Settings</h3>\n                    <p className=\"section-description\">\n                        Manage how and when you receive updates from WeatherWise Explorer.\n                    </p>\n                    \n                    <ToggleSwitch\n                        checked={preferences.notifications.weatherAlerts}\n                        onChange={() => handleToggleChange('notifications', 'weatherAlerts')}\n                        label=\"Weather Alerts\"\n                        description=\"Get notifications for significant weather changes.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.notifications.newRecommendations}\n                        onChange={() => handleToggleChange('notifications', 'newRecommendations')}\n                        label=\"New Recommendations\"\n                        description=\"Receive alerts for new activity recommendations based on your preferences.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.notifications.dailyDigest}\n                        onChange={() => handleToggleChange('notifications', 'dailyDigest')}\n                        label=\"Daily Digest\"\n                        description=\"Get a daily summary of weather and recommended activities.\"\n                    />\n                </div>\n\n                {/* Unit Preferences */}\n                <div className=\"settings-section\">\n                    <h3>Unit Preferences</h3>\n                    <p className=\"section-description\">\n                        Choose your preferred units for displaying weather and distance information.\n                    </p>\n                    \n                    <SelectDropdown\n                        value={preferences.units.temperature}\n                        onChange={(value) => handleSelectChange('units', 'temperature', value)}\n                        options={['Celsius (°C)', 'Fahrenheit (°F)']}\n                        label=\"Temperature Unit\"\n                        description=\"Select your preferred temperature scale.\"\n                    />\n                    \n                    <SelectDropdown\n                        value={preferences.units.distance}\n                        onChange={(value) => handleSelectChange('units', 'distance', value)}\n                        options={['Kilometers (km)', 'Miles (mi)']}\n                        label=\"Distance Unit\"\n                        description=\"Choose how distances should be displayed.\"\n                    />\n                </div>\n\n                {/* Data & Privacy */}\n                <div className=\"settings-section\">\n                    <h3>Data & Privacy</h3>\n                    <p className=\"section-description\">\n                        Manage your account data and privacy settings.\n                    </p>\n                    \n                    <ToggleSwitch\n                        checked={preferences.privacy.shareData}\n                        onChange={() => handleToggleChange('privacy', 'shareData')}\n                        label=\"Share Usage Data\"\n                        description=\"Help improve the app by sharing anonymous usage statistics.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.privacy.analytics}\n                        onChange={() => handleToggleChange('privacy', 'analytics')}\n                        label=\"Analytics\"\n                        description=\"Allow collection of analytics data to improve recommendations.\"\n                    />\n\n                    <div className=\"danger-zone\">\n                        <h4>Danger Zone</h4>\n                        <p>Permanent actions that cannot be undone.</p>\n                        <button className=\"delete-account-btn\" onClick={handleDeleteAccount}>\n                            Delete My Account\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            {hasChanges && (\n                <div className=\"settings-actions\">\n                    <button className=\"cancel-btn\" onClick={handleCancel}>\n                        Cancel\n                    </button>\n                    <button className=\"save-btn\" onClick={handleSaveChanges}>\n                        Save Changes\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}