{"ast":null,"code":"// Unit conversion utilities\nexport const convertTemperature = (temp, fromUnit, toUnit) => {\n  if (fromUnit === toUnit) return temp;\n\n  // Convert from Celsius to Fahrenheit\n  if (fromUnit === 'Celsius (°C)' && toUnit === 'Fahrenheit (°F)') {\n    return Math.round(temp * 9 / 5 + 32);\n  }\n\n  // Convert from Fahrenheit to Celsius  \n  if (fromUnit === 'Fahrenheit (°F)' && toUnit === 'Celsius (°C)') {\n    return Math.round((temp - 32) * 5 / 9);\n  }\n  return temp;\n};\nexport const convertDistance = (distance, fromUnit, toUnit) => {\n  if (fromUnit === toUnit) return distance;\n\n  // Convert from kilometers to miles\n  if (fromUnit === 'Kilometers (km)' && toUnit === 'Miles (mi)') {\n    return Math.round(distance * 0.621371 * 100) / 100;\n  }\n\n  // Convert from miles to kilometers\n  if (fromUnit === 'Miles (mi)' && toUnit === 'Kilometers (km)') {\n    return Math.round(distance * 1.60934 * 100) / 100;\n  }\n  return distance;\n};\nexport const formatTemperature = (temp, unit) => {\n  const symbol = unit === 'Celsius (°C)' ? '°C' : '°F';\n  return `${temp}${symbol}`;\n};\nexport const formatDistance = (distance, unit) => {\n  const symbol = unit === 'Kilometers (km)' ? 'km' : 'mi';\n  return `${distance} ${symbol}`;\n};\nexport const convertSpeed = (speed, fromUnit, toUnit) => {\n  if (fromUnit === toUnit) return speed;\n\n  // Convert from m/s to mph\n  if (fromUnit === 'Kilometers (km)' && toUnit === 'Miles (mi)') {\n    return Math.round(speed * 2.237 * 100) / 100;\n  }\n\n  // Convert from mph to m/s\n  if (fromUnit === 'Miles (mi)' && toUnit === 'Kilometers (km)') {\n    return Math.round(speed * 0.447 * 100) / 100;\n  }\n  return speed;\n};\nexport const formatSpeed = (speed, unit) => {\n  const symbol = unit === 'Kilometers (km)' ? 'km/h' : 'mph';\n  return `${speed} ${symbol}`;\n};","map":{"version":3,"names":["convertTemperature","temp","fromUnit","toUnit","Math","round","convertDistance","distance","formatTemperature","unit","symbol","formatDistance","convertSpeed","speed","formatSpeed"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/utils/UnitConverter.js"],"sourcesContent":["// Unit conversion utilities\nexport const convertTemperature = (temp, fromUnit, toUnit) => {\n    if (fromUnit === toUnit) return temp;\n    \n    // Convert from Celsius to Fahrenheit\n    if (fromUnit === 'Celsius (°C)' && toUnit === 'Fahrenheit (°F)') {\n        return Math.round((temp * 9/5) + 32);\n    }\n    \n    // Convert from Fahrenheit to Celsius  \n    if (fromUnit === 'Fahrenheit (°F)' && toUnit === 'Celsius (°C)') {\n        return Math.round((temp - 32) * 5/9);\n    }\n    \n    return temp;\n};\n\nexport const convertDistance = (distance, fromUnit, toUnit) => {\n    if (fromUnit === toUnit) return distance;\n    \n    // Convert from kilometers to miles\n    if (fromUnit === 'Kilometers (km)' && toUnit === 'Miles (mi)') {\n        return Math.round(distance * 0.621371 * 100) / 100;\n    }\n    \n    // Convert from miles to kilometers\n    if (fromUnit === 'Miles (mi)' && toUnit === 'Kilometers (km)') {\n        return Math.round(distance * 1.60934 * 100) / 100;\n    }\n    \n    return distance;\n};\n\nexport const formatTemperature = (temp, unit) => {\n    const symbol = unit === 'Celsius (°C)' ? '°C' : '°F';\n    return `${temp}${symbol}`;\n};\n\nexport const formatDistance = (distance, unit) => {\n    const symbol = unit === 'Kilometers (km)' ? 'km' : 'mi';\n    return `${distance} ${symbol}`;\n};\n\nexport const convertSpeed = (speed, fromUnit, toUnit) => {\n    if (fromUnit === toUnit) return speed;\n    \n    // Convert from m/s to mph\n    if (fromUnit === 'Kilometers (km)' && toUnit === 'Miles (mi)') {\n        return Math.round(speed * 2.237 * 100) / 100;\n    }\n    \n    // Convert from mph to m/s\n    if (fromUnit === 'Miles (mi)' && toUnit === 'Kilometers (km)') {\n        return Math.round(speed * 0.447 * 100) / 100;\n    }\n    \n    return speed;\n};\n\nexport const formatSpeed = (speed, unit) => {\n    const symbol = unit === 'Kilometers (km)' ? 'km/h' : 'mph';\n    return `${speed} ${symbol}`;\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAC1D,IAAID,QAAQ,KAAKC,MAAM,EAAE,OAAOF,IAAI;;EAEpC;EACA,IAAIC,QAAQ,KAAK,cAAc,IAAIC,MAAM,KAAK,iBAAiB,EAAE;IAC7D,OAAOC,IAAI,CAACC,KAAK,CAAEJ,IAAI,GAAG,CAAC,GAAC,CAAC,GAAI,EAAE,CAAC;EACxC;;EAEA;EACA,IAAIC,QAAQ,KAAK,iBAAiB,IAAIC,MAAM,KAAK,cAAc,EAAE;IAC7D,OAAOC,IAAI,CAACC,KAAK,CAAC,CAACJ,IAAI,GAAG,EAAE,IAAI,CAAC,GAAC,CAAC,CAAC;EACxC;EAEA,OAAOA,IAAI;AACf,CAAC;AAED,OAAO,MAAMK,eAAe,GAAGA,CAACC,QAAQ,EAAEL,QAAQ,EAAEC,MAAM,KAAK;EAC3D,IAAID,QAAQ,KAAKC,MAAM,EAAE,OAAOI,QAAQ;;EAExC;EACA,IAAIL,QAAQ,KAAK,iBAAiB,IAAIC,MAAM,KAAK,YAAY,EAAE;IAC3D,OAAOC,IAAI,CAACC,KAAK,CAACE,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG;EACtD;;EAEA;EACA,IAAIL,QAAQ,KAAK,YAAY,IAAIC,MAAM,KAAK,iBAAiB,EAAE;IAC3D,OAAOC,IAAI,CAACC,KAAK,CAACE,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG;EACrD;EAEA,OAAOA,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAACP,IAAI,EAAEQ,IAAI,KAAK;EAC7C,MAAMC,MAAM,GAAGD,IAAI,KAAK,cAAc,GAAG,IAAI,GAAG,IAAI;EACpD,OAAO,GAAGR,IAAI,GAAGS,MAAM,EAAE;AAC7B,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACJ,QAAQ,EAAEE,IAAI,KAAK;EAC9C,MAAMC,MAAM,GAAGD,IAAI,KAAK,iBAAiB,GAAG,IAAI,GAAG,IAAI;EACvD,OAAO,GAAGF,QAAQ,IAAIG,MAAM,EAAE;AAClC,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEX,QAAQ,EAAEC,MAAM,KAAK;EACrD,IAAID,QAAQ,KAAKC,MAAM,EAAE,OAAOU,KAAK;;EAErC;EACA,IAAIX,QAAQ,KAAK,iBAAiB,IAAIC,MAAM,KAAK,YAAY,EAAE;IAC3D,OAAOC,IAAI,CAACC,KAAK,CAACQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;EAChD;;EAEA;EACA,IAAIX,QAAQ,KAAK,YAAY,IAAIC,MAAM,KAAK,iBAAiB,EAAE;IAC3D,OAAOC,IAAI,CAACC,KAAK,CAACQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;EAChD;EAEA,OAAOA,KAAK;AAChB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACD,KAAK,EAAEJ,IAAI,KAAK;EACxC,MAAMC,MAAM,GAAGD,IAAI,KAAK,iBAAiB,GAAG,MAAM,GAAG,KAAK;EAC1D,OAAO,GAAGI,KAAK,IAAIH,MAAM,EAAE;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}