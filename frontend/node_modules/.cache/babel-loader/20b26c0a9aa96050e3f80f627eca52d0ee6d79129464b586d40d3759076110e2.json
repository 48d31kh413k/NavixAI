{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  appSettings,\n  updateAppSettings\n}) => {\n  _s();\n  const location = useLocation();\n  const defaultSettings = {\n    activities: {\n      outdoorAdventure: true,\n      indoorRelaxation: true,\n      culturalExploration: true,\n      culinaryDelights: true\n    },\n    location: {\n      recommendationRadius: 'Local Area (5km)',\n      useCurrentLocation: true\n    },\n    units: {\n      temperature: 'Celsius (°C)',\n      distance: 'Kilometers (km)'\n    }\n  };\n  const [preferences, setPreferences] = useState(() => {\n    // Ensure we always have a valid preferences object\n    if (appSettings && typeof appSettings === 'object') {\n      return {\n        ...defaultSettings,\n        ...appSettings,\n        // Ensure nested objects exist\n        activities: {\n          ...defaultSettings.activities,\n          ...(appSettings.activities || {})\n        },\n        location: {\n          ...defaultSettings.location,\n          ...(appSettings.location || {})\n        },\n        units: {\n          ...defaultSettings.units,\n          ...(appSettings.units || {})\n        }\n      };\n    }\n    return defaultSettings;\n  });\n\n  // Update local preferences when appSettings change\n  useEffect(() => {\n    if (appSettings && typeof appSettings === 'object') {\n      setPreferences(prev => ({\n        ...prev,\n        ...appSettings,\n        // Ensure nested objects exist\n        activities: {\n          ...prev.activities,\n          ...(appSettings.activities || {})\n        },\n        location: {\n          ...prev.location,\n          ...(appSettings.location || {})\n        },\n        units: {\n          ...prev.units,\n          ...(appSettings.units || {})\n        }\n      }));\n    }\n  }, [appSettings]);\n  const [hasChanges, setHasChanges] = useState(false);\n  const [likedPlaces, setLikedPlaces] = useState([]);\n\n  // Load liked places when component mounts\n  useEffect(() => {\n    const loadLikedPlaces = () => {\n      const liked = userPreferences.getLikedPlaces();\n      setLikedPlaces(liked);\n    };\n    loadLikedPlaces();\n\n    // Also reload when the component becomes visible (in case user navigated from Dashboard)\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        loadLikedPlaces();\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n  const handleToggleChange = (category, key) => {\n    try {\n      const newPreferences = {\n        ...preferences,\n        [category]: {\n          ...preferences[category],\n          [key]: !preferences[category][key]\n        }\n      };\n      setPreferences(newPreferences);\n\n      // Update global app settings\n      if (updateAppSettings) {\n        updateAppSettings(newPreferences);\n      }\n\n      // Save to user preferences for activity-related settings\n      if (category === 'activities') {\n        const activityName = key;\n        if (newPreferences[category][key]) {\n          userPreferences.likeActivity(activityName);\n        } else {\n          userPreferences.dislikeActivity(activityName);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n    }\n  };\n  const handleSelectChange = (category, key, value) => {\n    const newPreferences = {\n      ...preferences,\n      [category]: {\n        ...preferences[category],\n        [key]: value\n      }\n    };\n    setPreferences(newPreferences);\n\n    // Update global app settings\n    if (updateAppSettings) {\n      updateAppSettings(newPreferences);\n    }\n  };\n  const handleSaveChanges = () => {\n    userPreferences.updateSettings(preferences);\n    setHasChanges(false);\n\n    // Show success feedback\n    const button = document.querySelector('.save-btn');\n    const originalText = button.textContent;\n    button.textContent = '✓ Saved!';\n    button.style.background = '#4CAF50';\n    setTimeout(() => {\n      button.textContent = originalText;\n      button.style.background = '#ff6b35';\n    }, 2000);\n  };\n  const handleCancel = () => {\n    // Reload preferences from storage\n    const userSettings = userPreferences.getSettings();\n    setPreferences(prev => ({\n      ...prev,\n      ...userSettings\n    }));\n    setHasChanges(false);\n  };\n  const ToggleSwitch = ({\n    checked,\n    onChange,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle-switch ${checked ? 'active' : ''}`,\n      onClick: onChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n  const SelectDropdown = ({\n    value,\n    onChange,\n    options,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"setting-select\",\n      value: value,\n      onChange: e => onChange(e.target.value),\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n\n  // Safety check to ensure preferences are properly initialized\n  if (!preferences || !preferences.location) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-loading\",\n      children: \"Loading preferences...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-nav-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-item\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-separator\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-current\",\n          children: \"Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Preferences & Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customize your experience and manage your account preferences.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Activity Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Customize the types of activities you'd like to receive recommendations for.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.outdoorAdventure,\n          onChange: () => handleToggleChange('activities', 'outdoorAdventure'),\n          label: \"Outdoor Adventure\",\n          description: \"Activities like hiking, cycling, and kayaking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.indoorRelaxation,\n          onChange: () => handleToggleChange('activities', 'indoorRelaxation'),\n          label: \"Indoor Relaxation\",\n          description: \"Activities such as reading, board games, or crafting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.culturalExploration,\n          onChange: () => handleToggleChange('activities', 'culturalExploration'),\n          label: \"Cultural Exploration\",\n          description: \"Visits to museums, art galleries, and historical sites.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: preferences.activities.culinaryDelights,\n          onChange: () => handleToggleChange('activities', 'culinaryDelights'),\n          label: \"Culinary Delights\",\n          description: \"Recommendations for restaurants, cafes, and cooking courses.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unit Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Choose your preferred units for displaying weather and distance information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {\n          value: preferences.units.temperature,\n          onChange: value => handleSelectChange('units', 'temperature', value),\n          options: ['Celsius (°C)', 'Fahrenheit (°F)'],\n          label: \"Temperature Unit\",\n          description: \"Select your preferred temperature scale.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {\n          value: preferences.units.distance,\n          onChange: value => handleSelectChange('units', 'distance', value),\n          options: ['Kilometers (km)', 'Miles (mi)'],\n          label: \"Distance Unit\",\n          description: \"Choose how distances should be displayed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liked Places\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-description\",\n          children: \"Your favorite places and activities that you've liked.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), likedPlaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liked-places-grid\",\n          children: likedPlaces.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liked-place-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"place-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"place-name\",\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"place-vicinity\",\n                children: place.vicinity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"place-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"place-rating\",\n                  children: ['★'.repeat(Math.floor(place.rating || 0)), '☆'.repeat(5 - Math.floor(place.rating || 0)), place.rating && ` ${place.rating}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"place-category\",\n                  children: place.activityType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"place-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"liked-indicator\",\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)]\n          }, place.placeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-liked-places\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No liked places yet. Start liking places on the Dashboard or Place Details to see them here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), hasChanges && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-btn\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"zJOeRWDgcU2tcbSFm3w2GZBluus=\", false, function () {\n  return [useLocation];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","userPreferences","jsxDEV","_jsxDEV","Settings","appSettings","updateAppSettings","_s","location","defaultSettings","activities","outdoorAdventure","indoorRelaxation","culturalExploration","culinaryDelights","recommendationRadius","useCurrentLocation","units","temperature","distance","preferences","setPreferences","prev","hasChanges","setHasChanges","likedPlaces","setLikedPlaces","loadLikedPlaces","liked","getLikedPlaces","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","handleToggleChange","category","key","newPreferences","activityName","likeActivity","dislikeActivity","error","console","handleSelectChange","value","handleSaveChanges","updateSettings","button","querySelector","originalText","textContent","style","background","setTimeout","handleCancel","userSettings","getSettings","ToggleSwitch","checked","onChange","label","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SelectDropdown","options","e","target","map","option","length","place","name","vicinity","repeat","Math","floor","rating","activityType","placeId","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport './Settings.css';\n\nconst Settings = ({ appSettings, updateAppSettings }) => {\n    const location = useLocation();\n    \n    const defaultSettings = {\n        activities: {\n            outdoorAdventure: true,\n            indoorRelaxation: true,\n            culturalExploration: true,\n            culinaryDelights: true\n        },\n        location: {\n            recommendationRadius: 'Local Area (5km)',\n            useCurrentLocation: true\n        },\n        units: {\n            temperature: 'Celsius (°C)',\n            distance: 'Kilometers (km)'\n        }\n    };\n\n    const [preferences, setPreferences] = useState(() => {\n        // Ensure we always have a valid preferences object\n        if (appSettings && typeof appSettings === 'object') {\n            return {\n                ...defaultSettings,\n                ...appSettings,\n                // Ensure nested objects exist\n                activities: { ...defaultSettings.activities, ...(appSettings.activities || {}) },\n                location: { ...defaultSettings.location, ...(appSettings.location || {}) },\n                units: { ...defaultSettings.units, ...(appSettings.units || {}) }\n            };\n        }\n        return defaultSettings;\n    });\n\n    // Update local preferences when appSettings change\n    useEffect(() => {\n        if (appSettings && typeof appSettings === 'object') {\n            setPreferences(prev => ({\n                ...prev,\n                ...appSettings,\n                // Ensure nested objects exist\n                activities: { ...prev.activities, ...(appSettings.activities || {}) },\n                location: { ...prev.location, ...(appSettings.location || {}) },\n                units: { ...prev.units, ...(appSettings.units || {}) }\n            }));\n        }\n    }, [appSettings]);\n\n    const [hasChanges, setHasChanges] = useState(false);\n    const [likedPlaces, setLikedPlaces] = useState([]);\n\n    // Load liked places when component mounts\n    useEffect(() => {\n        const loadLikedPlaces = () => {\n            const liked = userPreferences.getLikedPlaces();\n            setLikedPlaces(liked);\n        };\n        loadLikedPlaces();\n        \n        // Also reload when the component becomes visible (in case user navigated from Dashboard)\n        const handleVisibilityChange = () => {\n            if (!document.hidden) {\n                loadLikedPlaces();\n            }\n        };\n        \n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n    }, []);\n\n    const handleToggleChange = (category, key) => {\n        try {\n            const newPreferences = {\n                ...preferences,\n                [category]: {\n                    ...preferences[category],\n                    [key]: !preferences[category][key]\n                }\n            };\n            setPreferences(newPreferences);\n            \n            // Update global app settings\n            if (updateAppSettings) {\n                updateAppSettings(newPreferences);\n            }\n            \n            // Save to user preferences for activity-related settings\n            if (category === 'activities') {\n                const activityName = key;\n                if (newPreferences[category][key]) {\n                    userPreferences.likeActivity(activityName);\n                } else {\n                    userPreferences.dislikeActivity(activityName);\n                }\n            }\n        } catch (error) {\n            console.error('Error updating preferences:', error);\n        }\n    };    const handleSelectChange = (category, key, value) => {\n        const newPreferences = {\n            ...preferences,\n            [category]: {\n                ...preferences[category],\n                [key]: value\n            }\n        };\n        setPreferences(newPreferences);\n        \n        // Update global app settings\n        if (updateAppSettings) {\n            updateAppSettings(newPreferences);\n        }\n    };    const handleSaveChanges = () => {\n        userPreferences.updateSettings(preferences);\n        setHasChanges(false);\n        \n        // Show success feedback\n        const button = document.querySelector('.save-btn');\n        const originalText = button.textContent;\n        button.textContent = '✓ Saved!';\n        button.style.background = '#4CAF50';\n        \n        setTimeout(() => {\n            button.textContent = originalText;\n            button.style.background = '#ff6b35';\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        // Reload preferences from storage\n        const userSettings = userPreferences.getSettings();\n        setPreferences(prev => ({ ...prev, ...userSettings }));\n        setHasChanges(false);\n    };\n\n    const ToggleSwitch = ({ checked, onChange, label, description }) => (\n        <div className=\"setting-item\">\n            <div className=\"setting-info\">\n                <div className=\"setting-label\">{label}</div>\n                <div className=\"setting-description\">{description}</div>\n            </div>\n            <div className={`toggle-switch ${checked ? 'active' : ''}`} onClick={onChange}>\n                <div className=\"toggle-slider\"></div>\n            </div>\n        </div>\n    );\n\n    const SelectDropdown = ({ value, onChange, options, label, description }) => (\n        <div className=\"setting-item\">\n            <div className=\"setting-info\">\n                <div className=\"setting-label\">{label}</div>\n                <div className=\"setting-description\">{description}</div>\n            </div>\n            <select \n                className=\"setting-select\" \n                value={value} \n                onChange={(e) => onChange(e.target.value)}\n            >\n                {options.map(option => (\n                    <option key={option} value={option}>{option}</option>\n                ))}\n            </select>\n        </div>\n    );\n\n    // Safety check to ensure preferences are properly initialized\n    if (!preferences || !preferences.location) {\n        return <div className=\"settings-loading\">Loading preferences...</div>;\n    }\n\n    return (\n        <div className=\"settings\">\n            {/* Settings Header with Navigation */}\n            <div className=\"settings-nav-header\">\n                <div className=\"nav-breadcrumb\">\n                    <span className=\"breadcrumb-item\">Dashboard</span>\n                    <span className=\"breadcrumb-separator\">&gt;</span>\n                    <span className=\"breadcrumb-current\">Preferences</span>\n                </div>\n                <div className=\"header-actions\">\n                    <div className=\"user-profile\">\n                        <div className=\"user-avatar\">👤</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"settings-header\">\n                <h1>User Preferences & Settings</h1>\n                <p>Customize your experience and manage your account preferences.</p>\n            </div>\n\n            <div className=\"settings-content\">\n                {/* Activity Preferences */}\n                <div className=\"settings-section\">\n                    <h3>Activity Preferences</h3>\n                    <p className=\"section-description\">\n                        Customize the types of activities you'd like to receive recommendations for.\n                    </p>\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.outdoorAdventure}\n                        onChange={() => handleToggleChange('activities', 'outdoorAdventure')}\n                        label=\"Outdoor Adventure\"\n                        description=\"Activities like hiking, cycling, and kayaking.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.indoorRelaxation}\n                        onChange={() => handleToggleChange('activities', 'indoorRelaxation')}\n                        label=\"Indoor Relaxation\"\n                        description=\"Activities such as reading, board games, or crafting.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.culturalExploration}\n                        onChange={() => handleToggleChange('activities', 'culturalExploration')}\n                        label=\"Cultural Exploration\"\n                        description=\"Visits to museums, art galleries, and historical sites.\"\n                    />\n                    \n                    <ToggleSwitch\n                        checked={preferences.activities.culinaryDelights}\n                        onChange={() => handleToggleChange('activities', 'culinaryDelights')}\n                        label=\"Culinary Delights\"\n                        description=\"Recommendations for restaurants, cafes, and cooking courses.\"\n                    />\n                </div>\n\n                {/* Unit Preferences */}\n                <div className=\"settings-section\">\n                    <h3>Unit Preferences</h3>\n                    <p className=\"section-description\">\n                        Choose your preferred units for displaying weather and distance information.\n                    </p>\n                    \n                    <SelectDropdown\n                        value={preferences.units.temperature}\n                        onChange={(value) => handleSelectChange('units', 'temperature', value)}\n                        options={['Celsius (°C)', 'Fahrenheit (°F)']}\n                        label=\"Temperature Unit\"\n                        description=\"Select your preferred temperature scale.\"\n                    />\n                    \n                    <SelectDropdown\n                        value={preferences.units.distance}\n                        onChange={(value) => handleSelectChange('units', 'distance', value)}\n                        options={['Kilometers (km)', 'Miles (mi)']}\n                        label=\"Distance Unit\"\n                        description=\"Choose how distances should be displayed.\"\n                    />\n                </div>\n\n                {/* Liked Places */}\n                <div className=\"settings-section\">\n                    <h3>Liked Places</h3>\n                    <p className=\"section-description\">\n                        Your favorite places and activities that you've liked.\n                    </p>\n                    \n                    {likedPlaces.length > 0 ? (\n                        <div className=\"liked-places-grid\">\n                            {likedPlaces.map(place => (\n                                <div key={place.placeId} className=\"liked-place-card\">\n                                    <div className=\"place-info\">\n                                        <h4 className=\"place-name\">{place.name}</h4>\n                                        <p className=\"place-vicinity\">{place.vicinity}</p>\n                                        <div className=\"place-meta\">\n                                            <span className=\"place-rating\">\n                                                {'★'.repeat(Math.floor(place.rating || 0))}\n                                                {'☆'.repeat(5 - Math.floor(place.rating || 0))}\n                                                {place.rating && ` ${place.rating}`}\n                                            </span>\n                                            <span className=\"place-category\">{place.activityType}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"place-actions\">\n                                        <span className=\"liked-indicator\">❤️</span>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <div className=\"no-liked-places\">\n                            <p>No liked places yet. Start liking places on the Dashboard or Place Details to see them here!</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            {hasChanges && (\n                <div className=\"settings-actions\">\n                    <button className=\"cancel-btn\" onClick={handleCancel}>\n                        Cancel\n                    </button>\n                    <button className=\"save-btn\" onClick={handleSaveChanges}>\n                        Save Changes\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}