{"ast":null,"code":"var _jsxFileName = \"/Users/bm/dev/projects/new-navix/frontend/src/components/PlaceDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport PhotoCarousel from './PhotoCarousel';\nimport './PlaceDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceDetail = () => {\n  _s();\n  var _place$contact, _place$contact2, _place$contact3;\n  const {\n    placeId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [place, setPlace] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isLiked, setIsLiked] = useState(false);\n  const [loadingDetails, setLoadingDetails] = useState(false);\n\n  // Generate grey placeholder image data URL\n  const getGreyPlaceholder = (width = 800, height = 400) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    // Fill with grey background\n    ctx.fillStyle = '#f0f0f0';\n    ctx.fillRect(0, 0, width, height);\n\n    // Add centered text\n    ctx.fillStyle = '#999';\n    ctx.font = '20px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('No Image Available', width / 2, height / 2);\n    return canvas.toDataURL('image/png');\n  };\n  useEffect(() => {\n    // Get place data from navigation state or fetch from activities\n    const fetchPlaceData = () => {\n      try {\n        var _location$state, _location$state2;\n        // Try to get place data from navigation state first\n        const placeData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.place;\n        const activityName = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.activityName;\n        if (placeData) {\n          setPlace({\n            ...placeData,\n            activityName: activityName\n          });\n\n          // Check if user has liked this place before\n          const likedPlaces = userPreferences.getLikedPlaces();\n          const isPlaceLiked = likedPlaces.some(p => p.place_id === placeData.place_id);\n          setIsLiked(isPlaceLiked);\n\n          // Always fetch additional details if we have a place_id but missing critical info\n          if (placeData.place_id && (!placeData.opening_hours || !placeData.reviews || !placeData.formatted_phone_number)) {\n            console.log('Fetching additional place details for:', placeData.name);\n            fetchPlaceDetailsFromBackend(placeData.place_id);\n          }\n          setLoading(false);\n        } else {\n          // Fallback: Try to find place in stored activities or use mock data\n          const storedActivities = JSON.parse(localStorage.getItem('recent_activities') || '[]');\n          let foundPlace = null;\n          for (const activity of storedActivities) {\n            if (activity.places) {\n              foundPlace = activity.places.find(p => p.place_id === placeId || p.id === placeId);\n              if (foundPlace) {\n                foundPlace.activityName = activity.activity_name;\n                break;\n              }\n            }\n          }\n          if (foundPlace) {\n            setPlace(foundPlace);\n\n            // Check if user has liked this place\n            const likedPlaces = userPreferences.getLikedPlaces();\n            const isPlaceLiked = likedPlaces.some(p => p.place_id === foundPlace.place_id);\n            setIsLiked(isPlaceLiked);\n          } else {\n            // Use mock data as fallback\n            setPlace(getMockPlaceData(placeId));\n          }\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error loading place data:', error);\n        setPlace(getMockPlaceData(placeId));\n        setLoading(false);\n      }\n    };\n    fetchPlaceData();\n  }, [placeId, location.state, getMockPlaceData]);\n  const fetchPlaceDetailsFromBackend = async placeId => {\n    try {\n      setLoadingDetails(true);\n      console.log('Fetching place details from backend for place_id:', placeId);\n      const response = await fetch(`http://localhost:8000/api/place-details/${placeId}/`);\n      if (response.ok) {\n        const detailedPlace = await response.json();\n        console.log('Received place details:', detailedPlace);\n        setPlace(prevPlace => {\n          const updatedPlace = {\n            ...prevPlace,\n            ...detailedPlace,\n            // Preserve existing data but prioritize new details\n            opening_hours: detailedPlace.opening_hours || prevPlace.opening_hours,\n            reviews: detailedPlace.reviews || prevPlace.reviews,\n            photos: detailedPlace.photos || prevPlace.photos,\n            formatted_phone_number: detailedPlace.formatted_phone_number || prevPlace.formatted_phone_number,\n            website: detailedPlace.website || prevPlace.website\n          };\n          console.log('Updated place data:', updatedPlace);\n          return updatedPlace;\n        });\n      } else {\n        console.error('Failed to fetch place details, status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching place details:', error);\n    } finally {\n      setLoadingDetails(false);\n    }\n  };\n  const getMockPlaceData = useCallback(id => {\n    return {\n      place_id: id,\n      name: 'Mount Cinder Viewpoint',\n      vicinity: 'Cascade Mountains, OR',\n      description: 'Mount Cinder Viewpoint offers breathtaking panoramic views of the entire Cascade Mountain range, including the iconic peaks of Mount Hood and Mount Jefferson. It\\'s a prime location for photography, bird watching, and enjoying serene sunsets. The well-maintained trail to the viewpoint is accessible for most skill levels, making it a popular spot for both casual visitors and avid hikers. The area here is crisp and clean, providing a refreshing escape from city life. Visitors often bring picnics to enjoy the natural beauty.',\n      photos: [getGreyPlaceholder()],\n      rating: 4.7,\n      user_ratings_total: 53,\n      opening_hours: {\n        weekday_text: ['Monday: 6:00 AM - 6:00 PM', 'Tuesday: 6:00 AM - 6:00 PM', 'Wednesday: 6:00 AM - 6:00 PM', 'Thursday: 6:00 AM - 6:00 PM', 'Friday: 9:00 AM - 8:00 PM', 'Saturday: 8:00 AM - 8:00 PM', 'Sunday: 8:00 AM - 6:00 PM']\n      },\n      formatted_address: '2500 Viewpoint Rd, Cascade Mountains, OR 97000',\n      formatted_phone_number: '(555) 123-4567',\n      website: 'mountcinderviewpoint.org',\n      types: ['tourist_attraction', 'park'],\n      activityName: 'park'\n    };\n  }, []);\n  const handleLikeToggle = () => {\n    if (!place) return;\n    try {\n      if (isLiked) {\n        // Unlike the place\n        userPreferences.dislikePlace(place, place.activityName || 'general');\n        setIsLiked(false);\n      } else {\n        // Like the place\n        userPreferences.likePlace(place, place.activityName || 'general');\n        setIsLiked(true);\n      }\n    } catch (error) {\n      console.error('Error updating place preference:', error);\n    }\n  };\n  const formatOpeningHours = () => {\n    var _place$opening_hours;\n    // If we have real opening hours data, use it\n    if (place !== null && place !== void 0 && (_place$opening_hours = place.opening_hours) !== null && _place$opening_hours !== void 0 && _place$opening_hours.weekday_text && place.opening_hours.weekday_text.length > 0) {\n      return place.opening_hours.weekday_text.map(dayText => {\n        const [day, ...hoursParts] = dayText.split(': ');\n        return {\n          day: day,\n          hours: hoursParts.join(': ')\n        };\n      });\n    }\n\n    // If currently loading details, show loading message\n    if (loadingDetails) {\n      return [{\n        day: 'Loading',\n        hours: 'Fetching real opening hours...'\n      }];\n    }\n\n    // If no opening hours available and we have a place_id, try to fetch from backend\n    if (place !== null && place !== void 0 && place.place_id && !place.opening_hours && !loadingDetails) {\n      fetchPlaceDetailsFromBackend(place.place_id);\n      return [{\n        day: 'Loading',\n        hours: 'Fetching opening hours...'\n      }];\n    }\n\n    // Final fallback if no data is available\n    return [{\n      day: 'Hours',\n      hours: 'Opening hours not available'\n    }];\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading place details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 16\n    }, this);\n  }\n  if (!place) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Place not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"place-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"place-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"place-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `favorite-btn ${isLiked ? 'liked' : ''}`,\n          onClick: handleLikeToggle,\n          title: isLiked ? 'Remove from favorites' : 'Add to favorites',\n          children: isLiked ? '‚ù§Ô∏è' : 'ü§ç'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-btn\",\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"place-hero\",\n      children: /*#__PURE__*/_jsxDEV(PhotoCarousel, {\n        photos: place.photos || [place.image || getGreyPlaceholder()],\n        altText: place.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"place-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"place-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"place-location\",\n          children: place.vicinity || place.location || 'Location not specified'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"overview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"about-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"About This Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.description || 'A wonderful place to visit and explore.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hours-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Opening Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hours-grid\",\n          children: formatOpeningHours().map((dayInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hours-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [dayInfo.day, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: dayInfo.hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"contact-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contact Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-info\",\n          children: [(place.formatted_address || ((_place$contact = place.contact) === null || _place$contact === void 0 ? void 0 : _place$contact.address)) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-icon\",\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: place.formatted_address || place.contact.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), (place.formatted_phone_number || ((_place$contact2 = place.contact) === null || _place$contact2 === void 0 ? void 0 : _place$contact2.phone)) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-icon\",\n              children: \"\\uFFFD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: place.formatted_phone_number || place.contact.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this), (place.website || ((_place$contact3 = place.contact) === null || _place$contact3 === void 0 ? void 0 : _place$contact3.website)) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: place.website || place.contact.website\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"features-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Key Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features-list\",\n          children: (place.features || place.types || ['Restaurant', 'Outdoor Seating', 'Pet-friendly']).map((feature, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feature-tag\",\n            children: feature.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"reviews-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"User Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reviews-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rating-display\",\n              children: [\"\\u2B50 \", place.rating || 4.0, \" (\", place.user_ratings_total || place.reviews || 0, \" Reviews)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"write-review-btn\",\n              children: \"\\u270D\\uFE0F Write a Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews-list\",\n          children: (place.reviews && place.reviews.length > 0 ? place.reviews : [{\n            author_name: 'Alex Johnson',\n            relative_time_description: '2 weeks ago',\n            rating: 5,\n            text: 'Great place! Highly recommend visiting.'\n          }]).map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: review.author_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review-date\",\n                children: review.relative_time_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review-rating\",\n              children: '‚≠ê'.repeat(review.rating)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"review-comment\",\n              children: review.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n_s(PlaceDetail, \"4AInG7xs/9KM6zapmFDb1ObK/T8=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = PlaceDetail;\nexport default PlaceDetail;\nvar _c;\n$RefreshReg$(_c, \"PlaceDetail\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","userPreferences","PhotoCarousel","jsxDEV","_jsxDEV","PlaceDetail","_s","_place$contact","_place$contact2","_place$contact3","placeId","navigate","location","place","setPlace","loading","setLoading","isLiked","setIsLiked","loadingDetails","setLoadingDetails","getGreyPlaceholder","width","height","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","font","textAlign","textBaseline","fillText","toDataURL","fetchPlaceData","_location$state","_location$state2","placeData","state","activityName","likedPlaces","getLikedPlaces","isPlaceLiked","some","p","place_id","opening_hours","reviews","formatted_phone_number","console","log","name","fetchPlaceDetailsFromBackend","storedActivities","JSON","parse","localStorage","getItem","foundPlace","activity","places","find","id","activity_name","getMockPlaceData","error","response","fetch","ok","detailedPlace","json","prevPlace","updatedPlace","photos","website","status","vicinity","description","rating","user_ratings_total","weekday_text","formatted_address","types","handleLikeToggle","dislikePlace","likePlace","formatOpeningHours","_place$opening_hours","length","map","dayText","day","hoursParts","split","hours","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","image","altText","dayInfo","index","contact","address","phone","features","feature","replace","l","toUpperCase","author_name","relative_time_description","text","review","repeat","_c","$RefreshReg$"],"sources":["/Users/bm/dev/projects/new-navix/frontend/src/components/PlaceDetail.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport userPreferences from '../utils/UserPreferences';\nimport PhotoCarousel from './PhotoCarousel';\nimport './PlaceDetail.css';\n\nconst PlaceDetail = () => {\n    const { placeId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [place, setPlace] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isLiked, setIsLiked] = useState(false);\n    const [loadingDetails, setLoadingDetails] = useState(false);\n\n    // Generate grey placeholder image data URL\n    const getGreyPlaceholder = (width = 800, height = 400) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        \n        // Fill with grey background\n        ctx.fillStyle = '#f0f0f0';\n        ctx.fillRect(0, 0, width, height);\n        \n        // Add centered text\n        ctx.fillStyle = '#999';\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('No Image Available', width / 2, height / 2);\n        \n        return canvas.toDataURL('image/png');\n    };\n\n    useEffect(() => {\n        // Get place data from navigation state or fetch from activities\n        const fetchPlaceData = () => {\n            try {\n                // Try to get place data from navigation state first\n                const placeData = location.state?.place;\n                const activityName = location.state?.activityName;\n                \n                if (placeData) {\n                    setPlace({\n                        ...placeData,\n                        activityName: activityName\n                    });\n                    \n                    // Check if user has liked this place before\n                    const likedPlaces = userPreferences.getLikedPlaces();\n                    const isPlaceLiked = likedPlaces.some(p => p.place_id === placeData.place_id);\n                    setIsLiked(isPlaceLiked);\n                    \n                    // Always fetch additional details if we have a place_id but missing critical info\n                    if (placeData.place_id && (!placeData.opening_hours || !placeData.reviews || !placeData.formatted_phone_number)) {\n                        console.log('Fetching additional place details for:', placeData.name);\n                        fetchPlaceDetailsFromBackend(placeData.place_id);\n                    }\n                    \n                    setLoading(false);\n                } else {\n                    // Fallback: Try to find place in stored activities or use mock data\n                    const storedActivities = JSON.parse(localStorage.getItem('recent_activities') || '[]');\n                    let foundPlace = null;\n                    \n                    for (const activity of storedActivities) {\n                        if (activity.places) {\n                            foundPlace = activity.places.find(p => p.place_id === placeId || p.id === placeId);\n                            if (foundPlace) {\n                                foundPlace.activityName = activity.activity_name;\n                                break;\n                            }\n                        }\n                    }\n                    \n                    if (foundPlace) {\n                        setPlace(foundPlace);\n                        \n                        // Check if user has liked this place\n                        const likedPlaces = userPreferences.getLikedPlaces();\n                        const isPlaceLiked = likedPlaces.some(p => p.place_id === foundPlace.place_id);\n                        setIsLiked(isPlaceLiked);\n                    } else {\n                        // Use mock data as fallback\n                        setPlace(getMockPlaceData(placeId));\n                    }\n                    \n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error('Error loading place data:', error);\n                setPlace(getMockPlaceData(placeId));\n                setLoading(false);\n            }\n        };\n\n        fetchPlaceData();\n    }, [placeId, location.state, getMockPlaceData]);\n\n    const fetchPlaceDetailsFromBackend = async (placeId) => {\n        try {\n            setLoadingDetails(true);\n            console.log('Fetching place details from backend for place_id:', placeId);\n            const response = await fetch(`http://localhost:8000/api/place-details/${placeId}/`);\n            \n            if (response.ok) {\n                const detailedPlace = await response.json();\n                console.log('Received place details:', detailedPlace);\n                \n                setPlace(prevPlace => {\n                    const updatedPlace = {\n                        ...prevPlace,\n                        ...detailedPlace,\n                        // Preserve existing data but prioritize new details\n                        opening_hours: detailedPlace.opening_hours || prevPlace.opening_hours,\n                        reviews: detailedPlace.reviews || prevPlace.reviews,\n                        photos: detailedPlace.photos || prevPlace.photos,\n                        formatted_phone_number: detailedPlace.formatted_phone_number || prevPlace.formatted_phone_number,\n                        website: detailedPlace.website || prevPlace.website\n                    };\n                    \n                    console.log('Updated place data:', updatedPlace);\n                    return updatedPlace;\n                });\n            } else {\n                console.error('Failed to fetch place details, status:', response.status);\n            }\n        } catch (error) {\n            console.error('Error fetching place details:', error);\n        } finally {\n            setLoadingDetails(false);\n        }\n    };\n\n    const getMockPlaceData = useCallback((id) => {\n        return {\n            place_id: id,\n            name: 'Mount Cinder Viewpoint',\n            vicinity: 'Cascade Mountains, OR',\n            description: 'Mount Cinder Viewpoint offers breathtaking panoramic views of the entire Cascade Mountain range, including the iconic peaks of Mount Hood and Mount Jefferson. It\\'s a prime location for photography, bird watching, and enjoying serene sunsets. The well-maintained trail to the viewpoint is accessible for most skill levels, making it a popular spot for both casual visitors and avid hikers. The area here is crisp and clean, providing a refreshing escape from city life. Visitors often bring picnics to enjoy the natural beauty.',\n            photos: [getGreyPlaceholder()],\n            rating: 4.7,\n            user_ratings_total: 53,\n            opening_hours: {\n                weekday_text: [\n                    'Monday: 6:00 AM - 6:00 PM',\n                    'Tuesday: 6:00 AM - 6:00 PM',\n                    'Wednesday: 6:00 AM - 6:00 PM',\n                    'Thursday: 6:00 AM - 6:00 PM',\n                    'Friday: 9:00 AM - 8:00 PM',\n                    'Saturday: 8:00 AM - 8:00 PM',\n                    'Sunday: 8:00 AM - 6:00 PM'\n                ]\n            },\n            formatted_address: '2500 Viewpoint Rd, Cascade Mountains, OR 97000',\n            formatted_phone_number: '(555) 123-4567',\n            website: 'mountcinderviewpoint.org',\n            types: ['tourist_attraction', 'park'],\n            activityName: 'park'\n        };\n    }, []);\n\n    const handleLikeToggle = () => {\n        if (!place) return;\n        \n        try {\n            if (isLiked) {\n                // Unlike the place\n                userPreferences.dislikePlace(place, place.activityName || 'general');\n                setIsLiked(false);\n            } else {\n                // Like the place\n                userPreferences.likePlace(place, place.activityName || 'general');\n                setIsLiked(true);\n            }\n        } catch (error) {\n            console.error('Error updating place preference:', error);\n        }\n    };\n\n    const formatOpeningHours = () => {\n        // If we have real opening hours data, use it\n        if (place?.opening_hours?.weekday_text && place.opening_hours.weekday_text.length > 0) {\n            return place.opening_hours.weekday_text.map(dayText => {\n                const [day, ...hoursParts] = dayText.split(': ');\n                return {\n                    day: day,\n                    hours: hoursParts.join(': ')\n                };\n            });\n        }\n        \n        // If currently loading details, show loading message\n        if (loadingDetails) {\n            return [\n                { day: 'Loading', hours: 'Fetching real opening hours...' }\n            ];\n        }\n        \n        // If no opening hours available and we have a place_id, try to fetch from backend\n        if (place?.place_id && !place.opening_hours && !loadingDetails) {\n            fetchPlaceDetailsFromBackend(place.place_id);\n            return [\n                { day: 'Loading', hours: 'Fetching opening hours...' }\n            ];\n        }\n        \n        // Final fallback if no data is available\n        return [\n            { day: 'Hours', hours: 'Opening hours not available' }\n        ];\n    };\n\n    if (loading) {\n        return <div className=\"loading\">Loading place details...</div>;\n    }\n\n    if (!place) {\n        return <div className=\"error\">Place not found</div>;\n    }\n\n    return (\n        <div className=\"place-detail\">\n            {/* Header */}\n            <div className=\"place-header\">\n                <button className=\"back-button\" onClick={() => navigate(-1)}>\n                    ‚Üê Back to Dashboard\n                </button>\n                <div className=\"place-actions\">\n                    <button \n                        className={`favorite-btn ${isLiked ? 'liked' : ''}`}\n                        onClick={handleLikeToggle}\n                        title={isLiked ? 'Remove from favorites' : 'Add to favorites'}\n                    >\n                        {isLiked ? '‚ù§Ô∏è' : 'ü§ç'}\n                    </button>\n                    <button className=\"share-btn\">üì§</button>\n                </div>\n            </div>\n\n            {/* Photo Gallery */}\n            <div className=\"place-hero\">\n                <PhotoCarousel \n                    photos={place.photos || [place.image || getGreyPlaceholder()]}\n                    altText={place.name}\n                />\n            </div>\n\n            {/* Main Content */}\n            <div className=\"place-content\">\n                <div className=\"place-title-section\">\n                    <h1>{place.name}</h1>\n                    <p className=\"place-location\">{place.vicinity || place.location || 'Location not specified'}</p>\n                </div>\n\n                {/* Overview */}\n                <section className=\"overview-section\">\n                    <h2>Overview</h2>\n                    <div className=\"about-section\">\n                        <h3>About This Place</h3>\n                        <p>{place.description || 'A wonderful place to visit and explore.'}</p>\n                    </div>\n                </section>\n\n                {/* Opening Hours */}\n                <section className=\"hours-section\">\n                    <h3>Opening Hours</h3>\n                    <div className=\"hours-grid\">\n                        {formatOpeningHours().map((dayInfo, index) => (\n                            <div key={index} className=\"hours-row\">\n                                <span>{dayInfo.day}:</span>\n                                <span>{dayInfo.hours}</span>\n                            </div>\n                        ))}\n                    </div>\n                </section>\n\n                {/* Contact Information */}\n                <section className=\"contact-section\">\n                    <h3>Contact Information</h3>\n                    <div className=\"contact-info\">\n                        {(place.formatted_address || place.contact?.address) && (\n                            <div className=\"contact-item\">\n                                <span className=\"contact-icon\">üìç</span>\n                                <span>{place.formatted_address || place.contact.address}</span>\n                            </div>\n                        )}\n                        {(place.formatted_phone_number || place.contact?.phone) && (\n                            <div className=\"contact-item\">\n                                <span className=\"contact-icon\">ÔøΩ</span>\n                                <span>{place.formatted_phone_number || place.contact.phone}</span>\n                            </div>\n                        )}\n                        {(place.website || place.contact?.website) && (\n                            <div className=\"contact-item\">\n                                <span className=\"contact-icon\">üåê</span>\n                                <span>{place.website || place.contact.website}</span>\n                            </div>\n                        )}\n                    </div>\n                </section>\n\n                {/* Key Features */}\n                <section className=\"features-section\">\n                    <h3>Key Features</h3>\n                    <div className=\"features-list\">\n                        {(place.features || place.types || ['Restaurant', 'Outdoor Seating', 'Pet-friendly']).map((feature, index) => (\n                            <span key={index} className=\"feature-tag\">\n                                {feature.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                            </span>\n                        ))}\n                    </div>\n                </section>\n\n                {/* User Reviews */}\n                <section className=\"reviews-section\">\n                    <div className=\"reviews-header\">\n                        <h3>User Reviews</h3>\n                        <div className=\"reviews-summary\">\n                            <span className=\"rating-display\">\n                                ‚≠ê {place.rating || 4.0} ({place.user_ratings_total || place.reviews || 0} Reviews)\n                            </span>\n                            <button className=\"write-review-btn\">‚úçÔ∏è Write a Review</button>\n                        </div>\n                    </div>\n                    \n                    <div className=\"reviews-list\">\n                        {(place.reviews && place.reviews.length > 0 ? place.reviews : [\n                            {\n                                author_name: 'Alex Johnson',\n                                relative_time_description: '2 weeks ago',\n                                rating: 5,\n                                text: 'Great place! Highly recommend visiting.'\n                            }\n                        ]).map((review, index) => (\n                            <div key={index} className=\"review-item\">\n                                <div className=\"review-header\">\n                                    <h4>{review.author_name}</h4>\n                                    <span className=\"review-date\">{review.relative_time_description}</span>\n                                </div>\n                                <div className=\"review-rating\">\n                                    {'‚≠ê'.repeat(review.rating)}\n                                </div>\n                                <p className=\"review-comment\">{review.text}</p>\n                            </div>\n                        ))}\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default PlaceDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}